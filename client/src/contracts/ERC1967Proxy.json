{
	"contractName": "ERC1967Proxy",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_logic",
					"type": "address"
				},
				{
					"internalType": "bytes",
					"name": "_data",
					"type": "bytes"
				}
			],
			"stateMutability": "payable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "implementation",
					"type": "address"
				}
			],
			"name": "Upgraded",
			"type": "event"
		},
		{
			"stateMutability": "payable",
			"type": "fallback"
		},
		{
			"stateMutability": "payable",
			"type": "receive"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy. Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see {TransparentUpgradeableProxy}.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor.\"}},\"stateVariables\":{\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x93877b10bf585e8c059b1cbe35f1e2ca2bacaff7d084e3700439809ef8f77be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d527e532ab958253f4ad5a88ad803cff695671186c143258c8bc8431efce26b\",\"dweb:/ipfs/QmYJQEzWNY8EGNrTzp7rjrPPhfDN8T26cKYBimFZ4xnmcT\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc706395df88dc1d459f21e51c57ab8820af80d1e8c3c14933a651794d78a429f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c19f30fd9c2ad752e3383fe5861655abb9d74c41cdc8ddbb49e5722ac4b8dd5\",\"dweb:/ipfs/QmXUePYiTMoDuqvghPGJfgjPFjjixan2DXreLGiuPDv8AX\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
	"bytecode": "0x60806040526040516106d93803806106d983398101604081905261002291610275565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd61038d565b6000805160206106928339815191521461007757634e487b7160e01b600052600160045260246000fd5b610080826100a4565b80511561009d5761009b828261013560201b6100491760201c565b505b50506103f6565b6100b78161016160201b6100751760201c565b6101235760405162461bcd60e51b815260206004820152603260248201527f4552433139363750726f78793a206e657720696d706c656d656e746174696f6e604482015271081a5cc81b9bdd08184818dbdb9d1c9858dd60721b60648201526084015b60405180910390fd5b60008051602061069283398151915255565b606061015a83836040518060600160405280602781526020016106b260279139610167565b9392505050565b3b151590565b6060833b6101c65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161011a565b600080856001600160a01b0316856040516101e1919061033e565b600060405180830381855af49150503d806000811461021c576040519150601f19603f3d011682016040523d82523d6000602084013e610221565b606091505b50909250905061023282828661023c565b9695505050505050565b6060831561024b57508161015a565b82511561025b5782518084602001fd5b8160405162461bcd60e51b815260040161011a919061035a565b60008060408385031215610287578182fd5b82516001600160a01b038116811461029d578283fd5b60208401519092506001600160401b03808211156102b9578283fd5b818501915085601f8301126102cc578283fd5b8151818111156102de576102de6103e0565b604051601f8201601f19908116603f01168101908382118183101715610306576103066103e0565b8160405282815288602084870101111561031e578586fd5b61032f8360208301602088016103b0565b80955050505050509250929050565b600082516103508184602087016103b0565b9190910192915050565b60006020825282518060208401526103798160408501602087016103b0565b601f01601f19169190910160400192915050565b6000828210156103ab57634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156103cb5781810151838201526020016103b3565b838111156103da576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b61028d806104056000396000f3fe60806040523661001357610011610017565b005b6100115b6100476100427f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b61007b565b565b606061006e83836040518060600160405280602781526020016102316027913961009f565b9392505050565b3b151590565b3660008037600080366000845af43d6000803e80801561009a573d6000f35b3d6000fd5b6060833b6101035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161011e91906101b1565b600060405180830381855af49150503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b509150915061016e828286610178565b9695505050505050565b6060831561018757508161006e565b8251156101975782518084602001fd5b8160405162461bcd60e51b81526004016100fa91906101cd565b600082516101c3818460208701610200565b9190910192915050565b60006020825282518060208401526101ec816040850160208701610200565b601f01601f19169190910160400192915050565b60005b8381101561021b578181015183820152602001610203565b8381111561022a576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220597e0c48a6099a3cec114af0264a77cbc4a5b0caefea3f1c0337fe655ffc431964736f6c63430008030033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
	"deployedBytecode": "0x60806040523661001357610011610017565b005b6100115b6100476100427f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b61007b565b565b606061006e83836040518060600160405280602781526020016102316027913961009f565b9392505050565b3b151590565b3660008037600080366000845af43d6000803e80801561009a573d6000f35b3d6000fd5b6060833b6101035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161011e91906101b1565b600060405180830381855af49150503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b509150915061016e828286610178565b9695505050505050565b6060831561018757508161006e565b8251156101975782518084602001fd5b8160405162461bcd60e51b81526004016100fa91906101cd565b600082516101c3818460208701610200565b9190910192915050565b60006020825282518060208401526101ec816040850160208701610200565b601f01601f19169190910160400192915050565b60005b8381101561021b578181015183820152602001610203565b8381111561022a576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220597e0c48a6099a3cec114af0264a77cbc4a5b0caefea3f1c0337fe655ffc431964736f6c63430008030033",
	"immutableReferences": {},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:3237:9",
				"statements": [
					{
						"nodeType": "YulBlock",
						"src": "6:3:9",
						"statements": []
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "121:993:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "167:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "176:6:9"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "184:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "169:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "169:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "169:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "142:7:9"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "151:9:9"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "138:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "138:23:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "163:2:9",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "134:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "134:32:9"
									},
									"nodeType": "YulIf",
									"src": "131:2:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "202:29:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "221:9:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "215:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "215:16:9"
									},
									"variables": [
										{
											"name": "value",
											"nodeType": "YulTypedName",
											"src": "206:5:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "294:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "303:6:9"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "311:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "296:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "296:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "296:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "253:5:9"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "264:5:9"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "279:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "284:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:19:9"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "260:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "260:31:9"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "250:2:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "250:42:9"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "243:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "243:50:9"
									},
									"nodeType": "YulIf",
									"src": "240:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "329:15:9",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "339:5:9"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "329:6:9"
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "353:39:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "377:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "388:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "373:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "373:18:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "367:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "367:25:9"
									},
									"variables": [
										{
											"name": "offset",
											"nodeType": "YulTypedName",
											"src": "357:6:9",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "401:28:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "419:2:9",
														"type": "",
														"value": "64"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "423:1:9",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "shl",
													"nodeType": "YulIdentifier",
													"src": "415:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "415:10:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "427:1:9",
												"type": "",
												"value": "1"
											}
										],
										"functionName": {
											"name": "sub",
											"nodeType": "YulIdentifier",
											"src": "411:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "411:18:9"
									},
									"variables": [
										{
											"name": "_1",
											"nodeType": "YulTypedName",
											"src": "405:2:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "456:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "465:6:9"
														},
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "473:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "458:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "458:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "458:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "444:6:9"
											},
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "452:2:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "441:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "441:14:9"
									},
									"nodeType": "YulIf",
									"src": "438:2:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "491:32:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "505:9:9"
											},
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "516:6:9"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "501:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "501:22:9"
									},
									"variables": [
										{
											"name": "_2",
											"nodeType": "YulTypedName",
											"src": "495:2:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "571:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "580:6:9"
														},
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "588:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "573:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "573:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "573:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"arguments": [
															{
																"name": "_2",
																"nodeType": "YulIdentifier",
																"src": "550:2:9"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "554:4:9",
																"type": "",
																"value": "0x1f"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "546:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "546:13:9"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "561:7:9"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "542:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "542:27:9"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "535:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "535:35:9"
									},
									"nodeType": "YulIf",
									"src": "532:2:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "606:19:9",
									"value": {
										"arguments": [
											{
												"name": "_2",
												"nodeType": "YulIdentifier",
												"src": "622:2:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "616:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "616:9:9"
									},
									"variables": [
										{
											"name": "_3",
											"nodeType": "YulTypedName",
											"src": "610:2:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "648:22:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x41",
														"nodeType": "YulIdentifier",
														"src": "650:16:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "650:18:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "650:18:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "_3",
												"nodeType": "YulIdentifier",
												"src": "640:2:9"
											},
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "644:2:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "637:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "637:10:9"
									},
									"nodeType": "YulIf",
									"src": "634:2:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "679:17:9",
									"value": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "693:2:9",
												"type": "",
												"value": "31"
											}
										],
										"functionName": {
											"name": "not",
											"nodeType": "YulIdentifier",
											"src": "689:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "689:7:9"
									},
									"variables": [
										{
											"name": "_4",
											"nodeType": "YulTypedName",
											"src": "683:2:9",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "705:23:9",
									"value": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "725:2:9",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "719:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "719:9:9"
									},
									"variables": [
										{
											"name": "memPtr",
											"nodeType": "YulTypedName",
											"src": "709:6:9",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "737:71:9",
									"value": {
										"arguments": [
											{
												"name": "memPtr",
												"nodeType": "YulIdentifier",
												"src": "759:6:9"
											},
											{
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "783:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "787:4:9",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "779:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "779:13:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "794:2:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:22:9"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "799:2:9",
																"type": "",
																"value": "63"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "771:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "771:31:9"
													},
													{
														"name": "_4",
														"nodeType": "YulIdentifier",
														"src": "804:2:9"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "767:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "767:40:9"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "755:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "755:53:9"
									},
									"variables": [
										{
											"name": "newFreePtr",
											"nodeType": "YulTypedName",
											"src": "741:10:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "867:22:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x41",
														"nodeType": "YulIdentifier",
														"src": "869:16:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "869:18:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "869:18:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "newFreePtr",
														"nodeType": "YulIdentifier",
														"src": "826:10:9"
													},
													{
														"name": "_1",
														"nodeType": "YulIdentifier",
														"src": "838:2:9"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "823:2:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "823:18:9"
											},
											{
												"arguments": [
													{
														"name": "newFreePtr",
														"nodeType": "YulIdentifier",
														"src": "846:10:9"
													},
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "858:6:9"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "843:2:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "843:22:9"
											}
										],
										"functionName": {
											"name": "or",
											"nodeType": "YulIdentifier",
											"src": "820:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "820:46:9"
									},
									"nodeType": "YulIf",
									"src": "817:2:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "905:2:9",
												"type": "",
												"value": "64"
											},
											{
												"name": "newFreePtr",
												"nodeType": "YulIdentifier",
												"src": "909:10:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "898:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "898:22:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "898:22:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "memPtr",
												"nodeType": "YulIdentifier",
												"src": "936:6:9"
											},
											{
												"name": "_3",
												"nodeType": "YulIdentifier",
												"src": "944:2:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "929:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "929:18:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "929:18:9"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "993:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "1002:6:9"
														},
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "1010:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "995:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "995:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "995:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"arguments": [
															{
																"name": "_2",
																"nodeType": "YulIdentifier",
																"src": "970:2:9"
															},
															{
																"name": "_3",
																"nodeType": "YulIdentifier",
																"src": "974:2:9"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "966:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "966:11:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "979:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "962:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "962:20:9"
											},
											{
												"name": "dataEnd",
												"nodeType": "YulIdentifier",
												"src": "984:7:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "959:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "959:33:9"
									},
									"nodeType": "YulIf",
									"src": "956:2:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "_2",
														"nodeType": "YulIdentifier",
														"src": "1054:2:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1058:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1050:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1050:11:9"
											},
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "1067:6:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1075:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1063:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1063:15:9"
											},
											{
												"name": "_3",
												"nodeType": "YulIdentifier",
												"src": "1080:2:9"
											}
										],
										"functionName": {
											"name": "copy_memory_to_memory",
											"nodeType": "YulIdentifier",
											"src": "1028:21:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1028:55:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1028:55:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1092:16:9",
									"value": {
										"name": "memPtr",
										"nodeType": "YulIdentifier",
										"src": "1102:6:9"
									},
									"variableNames": [
										{
											"name": "value1",
											"nodeType": "YulIdentifier",
											"src": "1092:6:9"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "79:9:9",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "90:7:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "102:6:9",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "110:6:9",
								"type": ""
							}
						],
						"src": "14:1100:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1256:137:9",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1266:27:9",
									"value": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1286:6:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "1280:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1280:13:9"
									},
									"variables": [
										{
											"name": "length",
											"nodeType": "YulTypedName",
											"src": "1270:6:9",
											"type": ""
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1328:6:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1336:4:9",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1324:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1324:17:9"
											},
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1343:3:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1348:6:9"
											}
										],
										"functionName": {
											"name": "copy_memory_to_memory",
											"nodeType": "YulIdentifier",
											"src": "1302:21:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1302:53:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1302:53:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1364:23:9",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1375:3:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1380:6:9"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1371:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1371:16:9"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "1364:3:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1232:3:9",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1237:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "1248:3:9",
								"type": ""
							}
						],
						"src": "1119:274:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1519:262:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1536:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1547:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1529:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1529:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1529:21:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1559:27:9",
									"value": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1579:6:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "1573:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1573:13:9"
									},
									"variables": [
										{
											"name": "length",
											"nodeType": "YulTypedName",
											"src": "1563:6:9",
											"type": ""
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1606:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1617:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1602:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1602:18:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1622:6:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1595:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1595:34:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1595:34:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1664:6:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1672:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1660:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1660:15:9"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1681:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1692:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1677:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1677:18:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1697:6:9"
											}
										],
										"functionName": {
											"name": "copy_memory_to_memory",
											"nodeType": "YulIdentifier",
											"src": "1638:21:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1638:66:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1638:66:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1713:62:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1729:9:9"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1748:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1756:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:15:9"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1761:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:7:9"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "1740:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "1740:29:9"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1725:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1725:45:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1772:2:9",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1721:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1721:54:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1713:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1488:9:9",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1499:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1510:4:9",
								"type": ""
							}
						],
						"src": "1398:383:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1960:240:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1977:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1988:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1970:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1970:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1970:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2011:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2022:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2007:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2007:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2027:2:9",
												"type": "",
												"value": "50"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2000:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2000:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2000:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2050:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2061:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2046:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2046:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2066:34:9",
												"type": "",
												"value": "ERC1967Proxy: new implementation"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2039:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2039:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2039:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2121:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2132:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2117:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2117:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2137:20:9",
												"type": "",
												"value": " is not a contract"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2110:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2110:48:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2110:48:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2167:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2179:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2190:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2175:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2175:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "2167:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_0127e2e95465d1d260cbd8407114f4e54c32ab4aabaa34b2f160b8f5c528b108__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1937:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1951:4:9",
								"type": ""
							}
						],
						"src": "1786:414:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2379:228:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2396:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2407:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2389:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2389:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2389:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2430:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2441:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2426:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2426:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2446:2:9",
												"type": "",
												"value": "38"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2419:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2419:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2419:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2469:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2480:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2465:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2465:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2485:34:9",
												"type": "",
												"value": "Address: delegate call to non-co"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2458:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2458:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2458:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2540:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2551:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2536:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2536:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2556:8:9",
												"type": "",
												"value": "ntract"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2529:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2529:36:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2529:36:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2574:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2586:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2597:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2582:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2582:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "2574:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "2356:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "2370:4:9",
								"type": ""
							}
						],
						"src": "2205:402:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2661:179:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2691:117:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "diff",
															"nodeType": "YulIdentifier",
															"src": "2712:4:9"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2722:3:9",
																	"type": "",
																	"value": "224"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2727:10:9",
																	"type": "",
																	"value": "0x4e487b71"
																}
															],
															"functionName": {
																"name": "shl",
																"nodeType": "YulIdentifier",
																"src": "2718:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "2718:20:9"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2705:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "2705:34:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2705:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2759:1:9",
															"type": "",
															"value": "4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2762:4:9",
															"type": "",
															"value": "0x11"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2752:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "2752:15:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2752:15:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"name": "diff",
															"nodeType": "YulIdentifier",
															"src": "2787:4:9"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2793:4:9",
															"type": "",
															"value": "0x24"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "2780:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "2780:18:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2780:18:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "2677:1:9"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "2680:1:9"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "2674:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2674:8:9"
									},
									"nodeType": "YulIf",
									"src": "2671:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2817:17:9",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "2829:1:9"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "2832:1:9"
											}
										],
										"functionName": {
											"name": "sub",
											"nodeType": "YulIdentifier",
											"src": "2825:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2825:9:9"
									},
									"variableNames": [
										{
											"name": "diff",
											"nodeType": "YulIdentifier",
											"src": "2817:4:9"
										}
									]
								}
							]
						},
						"name": "checked_sub_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "2643:1:9",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "2646:1:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "diff",
								"nodeType": "YulTypedName",
								"src": "2652:4:9",
								"type": ""
							}
						],
						"src": "2612:228:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2898:205:9",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "2908:10:9",
									"value": {
										"kind": "number",
										"nodeType": "YulLiteral",
										"src": "2917:1:9",
										"type": "",
										"value": "0"
									},
									"variables": [
										{
											"name": "i",
											"nodeType": "YulTypedName",
											"src": "2912:1:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2977:63:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3002:3:9"
																},
																{
																	"name": "i",
																	"nodeType": "YulIdentifier",
																	"src": "3007:1:9"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2998:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "2998:11:9"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:9"
																		},
																		{
																			"name": "i",
																			"nodeType": "YulIdentifier",
																			"src": "3026:1:9"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "3017:3:9"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "3017:11:9"
																}
															],
															"functionName": {
																"name": "mload",
																"nodeType": "YulIdentifier",
																"src": "3011:5:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "3011:18:9"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2991:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "2991:39:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2991:39:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "2938:1:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "2941:6:9"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "2935:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2935:13:9"
									},
									"nodeType": "YulForLoop",
									"post": {
										"nodeType": "YulBlock",
										"src": "2949:19:9",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "2951:15:9",
												"value": {
													"arguments": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "2960:1:9"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2963:2:9",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2956:3:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "2956:10:9"
												},
												"variableNames": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
														"src": "2951:1:9"
													}
												]
											}
										]
									},
									"pre": {
										"nodeType": "YulBlock",
										"src": "2931:3:9",
										"statements": []
									},
									"src": "2927:113:9"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "3066:31:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3079:3:9"
																},
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:9"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "3075:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "3075:16:9"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3093:1:9",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "3068:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "3068:27:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "3068:27:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "3055:1:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "3058:6:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "3052:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3052:13:9"
									},
									"nodeType": "YulIf",
									"src": "3049:2:9"
								}
							]
						},
						"name": "copy_memory_to_memory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "src",
								"nodeType": "YulTypedName",
								"src": "2876:3:9",
								"type": ""
							},
							{
								"name": "dst",
								"nodeType": "YulTypedName",
								"src": "2881:3:9",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "2886:6:9",
								"type": ""
							}
						],
						"src": "2845:258:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3140:95:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3157:1:9",
												"type": "",
												"value": "0"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3164:3:9",
														"type": "",
														"value": "224"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3169:10:9",
														"type": "",
														"value": "0x4e487b71"
													}
												],
												"functionName": {
													"name": "shl",
													"nodeType": "YulIdentifier",
													"src": "3160:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "3160:20:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3150:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3150:31:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3150:31:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3197:1:9",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3200:4:9",
												"type": "",
												"value": "0x41"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3190:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3190:15:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3190:15:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3221:1:9",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3224:4:9",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "3214:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3214:15:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3214:15:9"
								}
							]
						},
						"name": "panic_error_0x41",
						"nodeType": "YulFunctionDefinition",
						"src": "3108:127:9"
					}
				]
			},
			"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0127e2e95465d1d260cbd8407114f4e54c32ab4aabaa34b2f160b8f5c528b108__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1967Proxy: new implementation\")\n        mstore(add(headStart, 96), \" is not a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
			"id": 9,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:1348:9",
				"statements": [
					{
						"nodeType": "YulBlock",
						"src": "6:3:9",
						"statements": []
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "151:137:9",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "161:27:9",
									"value": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "181:6:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "175:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "175:13:9"
									},
									"variables": [
										{
											"name": "length",
											"nodeType": "YulTypedName",
											"src": "165:6:9",
											"type": ""
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "223:6:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "231:4:9",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "219:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "219:17:9"
											},
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "238:3:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "243:6:9"
											}
										],
										"functionName": {
											"name": "copy_memory_to_memory",
											"nodeType": "YulIdentifier",
											"src": "197:21:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "197:53:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "197:53:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "259:23:9",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "270:3:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "275:6:9"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "266:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "266:16:9"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "259:3:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "127:3:9",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "132:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "143:3:9",
								"type": ""
							}
						],
						"src": "14:274:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "414:262:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "431:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "442:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "424:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "424:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "424:21:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "454:27:9",
									"value": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "474:6:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "468:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "468:13:9"
									},
									"variables": [
										{
											"name": "length",
											"nodeType": "YulTypedName",
											"src": "458:6:9",
											"type": ""
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "501:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "512:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "497:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "497:18:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "517:6:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "490:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "490:34:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "490:34:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "559:6:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "567:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "555:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "555:15:9"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "576:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "587:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "572:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "572:18:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "592:6:9"
											}
										],
										"functionName": {
											"name": "copy_memory_to_memory",
											"nodeType": "YulIdentifier",
											"src": "533:21:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "533:66:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "533:66:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "608:62:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "624:9:9"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "643:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "651:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "639:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:15:9"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "660:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "656:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:7:9"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "635:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "635:29:9"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "620:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "620:45:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "667:2:9",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "616:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "616:54:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "608:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "383:9:9",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "394:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "405:4:9",
								"type": ""
							}
						],
						"src": "293:383:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "855:228:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "872:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "883:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "865:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "865:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "865:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "906:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "917:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "902:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "902:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "922:2:9",
												"type": "",
												"value": "38"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "895:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "895:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "895:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "945:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "956:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "941:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "941:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "961:34:9",
												"type": "",
												"value": "Address: delegate call to non-co"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "934:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "934:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "934:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1016:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1027:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1012:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1012:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "1032:8:9",
												"type": "",
												"value": "ntract"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1005:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1005:36:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1005:36:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1050:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1062:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1073:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1058:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1058:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1050:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "832:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "846:4:9",
								"type": ""
							}
						],
						"src": "681:402:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1141:205:9",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1151:10:9",
									"value": {
										"kind": "number",
										"nodeType": "YulLiteral",
										"src": "1160:1:9",
										"type": "",
										"value": "0"
									},
									"variables": [
										{
											"name": "i",
											"nodeType": "YulTypedName",
											"src": "1155:1:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1220:63:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:9"
																},
																{
																	"name": "i",
																	"nodeType": "YulIdentifier",
																	"src": "1250:1:9"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "1241:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "1241:11:9"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1264:3:9"
																		},
																		{
																			"name": "i",
																			"nodeType": "YulIdentifier",
																			"src": "1269:1:9"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "1260:3:9"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "1260:11:9"
																}
															],
															"functionName": {
																"name": "mload",
																"nodeType": "YulIdentifier",
																"src": "1254:5:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "1254:18:9"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "1234:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1234:39:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1234:39:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "1181:1:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1184:6:9"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "1178:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1178:13:9"
									},
									"nodeType": "YulForLoop",
									"post": {
										"nodeType": "YulBlock",
										"src": "1192:19:9",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "1194:15:9",
												"value": {
													"arguments": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "1203:1:9"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1206:2:9",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1199:3:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1199:10:9"
												},
												"variableNames": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
														"src": "1194:1:9"
													}
												]
											}
										]
									},
									"pre": {
										"nodeType": "YulBlock",
										"src": "1174:3:9",
										"statements": []
									},
									"src": "1170:113:9"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1309:31:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1322:3:9"
																},
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1327:6:9"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "1318:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "1318:16:9"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1336:1:9",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "1311:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1311:27:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1311:27:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "1298:1:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1301:6:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "1295:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1295:13:9"
									},
									"nodeType": "YulIf",
									"src": "1292:2:9"
								}
							]
						},
						"name": "copy_memory_to_memory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "src",
								"nodeType": "YulTypedName",
								"src": "1119:3:9",
								"type": ""
							},
							{
								"name": "dst",
								"nodeType": "YulTypedName",
								"src": "1124:3:9",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "1129:6:9",
								"type": ""
							}
						],
						"src": "1088:258:9"
					}
				]
			},
			"contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n}",
			"id": 9,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "634:2201:5:-:0;;;1011:302;;;;;;;;;;;;;;;;;;:::i;:::-;1116:54;1169:1;1124:41;1116:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;1084:87:5;1077:95;;-1:-1:-1;;;1077:95:5;;;;;;;;;1182:26;1201:6;1182:18;:26::i;:::-;1221:12;;:16;1218:89;;1253:43;1282:6;1290:5;1253:28;;;;;:43;;:::i;:::-;;1218:89;1011:302;;634:2201;;2477:356;2558:37;2577:17;2558:18;;;;;:37;;:::i;:::-;2550:100;;;;-1:-1:-1;;;2550:100:5;;1988:2:9;2550:100:5;;;1970:21:9;2027:2;2007:18;;;2000:30;2066:34;2046:18;;;2039:62;-1:-1:-1;;;2117:18:9;;;2110:48;2175:19;;2550:100:5;;;;;;;;;-1:-1:-1;;;;;;;;;;;2786:31:5;2772:55::o;6276:198:7:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:7:o;718:413::-;1078:20;1116:8;;;718:413::o;6660:417::-;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;6795:69:7;;2407:2:9;6795:69:7;;;2389:21:9;2446:2;2426:18;;;2419:30;2485:34;2465:18;;;2458:62;-1:-1:-1;;;2536:18:9;;;2529:36;2582:19;;6795:69:7;2379:228:9;6795:69:7;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:7;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6934:67:7;;-1:-1:-1;6934:67:7;-1:-1:-1;7018:52:7;6934:67;;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:7:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:7;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:7;;;;;;;;:::i;14:1100:9:-;;;163:2;151:9;142:7;138:23;134:32;131:2;;;184:6;176;169:22;131:2;215:16;;-1:-1:-1;;;;;260:31:9;;250:42;;240:2;;311:6;303;296:22;240:2;388;373:18;;367:25;339:5;;-1:-1:-1;;;;;;441:14:9;;;438:2;;;473:6;465;458:22;438:2;516:6;505:9;501:22;491:32;;561:7;554:4;550:2;546:13;542:27;532:2;;588:6;580;573:22;532:2;622;616:9;644:2;640;637:10;634:2;;;650:18;;:::i;:::-;725:2;719:9;693:2;779:13;;-1:-1:-1;;775:22:9;;;799:2;771:31;767:40;755:53;;;823:18;;;843:22;;;820:46;817:2;;;869:18;;:::i;:::-;909:10;905:2;898:22;944:2;936:6;929:18;984:7;979:2;974;970;966:11;962:20;959:33;956:2;;;1010:6;1002;995:22;956:2;1028:55;1080:2;1075;1067:6;1063:15;1058:2;1054;1050:11;1028:55;:::i;:::-;1102:6;1092:16;;;;;;;121:993;;;;;:::o;1119:274::-;;1286:6;1280:13;1302:53;1348:6;1343:3;1336:4;1328:6;1324:17;1302:53;:::i;:::-;1371:16;;;;;1256:137;-1:-1:-1;;1256:137:9:o;1398:383::-;;1547:2;1536:9;1529:21;1579:6;1573:13;1622:6;1617:2;1606:9;1602:18;1595:34;1638:66;1697:6;1692:2;1681:9;1677:18;1672:2;1664:6;1660:15;1638:66;:::i;:::-;1765:2;1744:15;-1:-1:-1;;1740:29:9;1725:45;;;;1772:2;1721:54;;1519:262;-1:-1:-1;;1519:262:9:o;2612:228::-;;2680:1;2677;2674:8;2671:2;;;-1:-1:-1;;;2705:34:9;;2762:4;2759:1;2752:15;2793:4;2712;2780:18;2671:2;-1:-1:-1;2825:9:9;;2661:179::o;2845:258::-;2917:1;2927:113;2941:6;2938:1;2935:13;2927:113;;;3017:11;;;3011:18;2998:11;;;2991:39;2963:2;2956:10;2927:113;;;3058:6;3055:1;3052:13;3049:2;;;3093:1;3084:6;3079:3;3075:16;3068:27;3049:2;;2898:205;;;:::o;3108:127::-;3169:10;3164:3;3160:20;3157:1;3150:31;3200:4;3197:1;3190:15;3224:4;3221:1;3214:15;3140:95;634:2201:5;;;;;;",
	"deployedSourceMap": "634:2201:5:-:0;;;;;;2835:11:6;:9;:11::i;:::-;634:2201:5;;2611:11:6;2257:110;2332:28;2342:17;1712:66:5;2080:11;;2058:43;2342:17:6;2332:9;:28::i;:::-;2257:110::o;6276:198:7:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:7:o;718:413::-;1078:20;1116:8;;;718:413::o;883:895:6:-;1277:14;1274:1;1271;1258:34;1491:1;1488;1472:14;1469:1;1453:14;1446:5;1433:60;1567:16;1564:1;1561;1546:38;1605:6;1672:38;;;;1743:16;1740:1;1733:27;1672:38;1691:16;1688:1;1681:27;6660:417:7;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;6795:69:7;;883:2:9;6795:69:7;;;865:21:9;922:2;902:18;;;895:30;961:34;941:18;;;934:62;-1:-1:-1;;;1012:18:9;;;1005:36;1058:19;;6795:69:7;;;;;;;;;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:7;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:7:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:7;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:7;;;;;;;;:::i;14:274:9:-;;181:6;175:13;197:53;243:6;238:3;231:4;223:6;219:17;197:53;:::i;:::-;266:16;;;;;151:137;-1:-1:-1;;151:137:9:o;293:383::-;;442:2;431:9;424:21;474:6;468:13;517:6;512:2;501:9;497:18;490:34;533:66;592:6;587:2;576:9;572:18;567:2;559:6;555:15;533:66;:::i;:::-;660:2;639:15;-1:-1:-1;;635:29:9;620:45;;;;667:2;616:54;;414:262;-1:-1:-1;;414:262:9:o;1088:258::-;1160:1;1170:113;1184:6;1181:1;1178:13;1170:113;;;1260:11;;;1254:18;1241:11;;;1234:39;1206:2;1199:10;1170:113;;;1301:6;1298:1;1295:13;1292:2;;;1336:1;1327:6;1322:3;1318:16;1311:27;1292:2;;1141:205;;;:::o",
	"source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n *\n * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n * {TransparentUpgradeableProxy}.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        _setImplementation(_logic);\n        if(_data.length > 0) {\n            Address.functionDelegateCall(_logic, _data);\n        }\n    }\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 private constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        bytes32 slot = _IMPLEMENTATION_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            impl := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Upgrades the proxy to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal virtual {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967Proxy: new implementation is not a contract\");\n\n        bytes32 slot = _IMPLEMENTATION_SLOT;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(slot, newImplementation)\n        }\n    }\n}\n",
	"sourcePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
	"ast": {
		"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
		"exportedSymbols": {
			"Address": [1966],
			"ERC1967Proxy": [1618],
			"Proxy": [1670]
		},
		"id": 1619,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1513,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "33:23:5"
			},
			{
				"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
				"file": "../Proxy.sol",
				"id": 1514,
				"nameLocation": "-1:-1:-1",
				"nodeType": "ImportDirective",
				"scope": 1619,
				"sourceUnit": 1671,
				"src": "58:22:5",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
				"file": "../../utils/Address.sol",
				"id": 1515,
				"nameLocation": "-1:-1:-1",
				"nodeType": "ImportDirective",
				"scope": 1619,
				"sourceUnit": 1967,
				"src": "81:33:5",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 1517,
							"name": "Proxy",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 1670,
							"src": "659:5:5"
						},
						"id": 1518,
						"nodeType": "InheritanceSpecifier",
						"src": "659:5:5"
					}
				],
				"contractDependencies": [1670],
				"contractKind": "contract",
				"documentation": {
					"id": 1516,
					"nodeType": "StructuredDocumentation",
					"src": "116:517:5",
					"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy.\n Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n {TransparentUpgradeableProxy}."
				},
				"fullyImplemented": true,
				"id": 1618,
				"linearizedBaseContracts": [1618, 1670],
				"name": "ERC1967Proxy",
				"nameLocation": "643:12:5",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 1559,
							"nodeType": "Block",
							"src": "1067:246:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"id": 1539,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1527,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1569,
													"src": "1084:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1134:30:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																					"typeString": "literal_string \"eip1967.proxy.implementation\""
																				},
																				"value": "eip1967.proxy.implementation"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																					"typeString": "literal_string \"eip1967.proxy.implementation\""
																				}
																			],
																			"id": 1532,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "1124:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1124:41:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1116:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1116:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1116:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1169:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1116:54:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1108:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 1528,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1108:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"src": "1084:87:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											],
											"id": 1526,
											"name": "assert",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967293,
											"src": "1077:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
												"typeString": "function (bool) pure"
											}
										},
										"id": 1540,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1077:95:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1541,
									"nodeType": "ExpressionStatement",
									"src": "1077:95:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 1543,
												"name": "_logic",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1521,
												"src": "1201:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1542,
											"name": "_setImplementation",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1617,
											"src": "1182:18:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 1544,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1182:26:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1545,
									"nodeType": "ExpressionStatement",
									"src": "1182:26:5"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1549,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"id": 1546,
												"name": "_data",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1523,
												"src": "1221:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											},
											"id": 1547,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "length",
											"nodeType": "MemberAccess",
											"src": "1221:12:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">",
										"rightExpression": {
											"hexValue": "30",
											"id": 1548,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1236:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1221:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 1558,
									"nodeType": "IfStatement",
									"src": "1218:89:5",
									"trueBody": {
										"id": 1557,
										"nodeType": "Block",
										"src": "1239:68:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1553,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "1282:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1554,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "1290:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1550,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "1253:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$1966_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionDelegateCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1900,
														"src": "1253:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1253:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "1253:43:5"
											}
										]
									}
								}
							]
						},
						"documentation": {
							"id": 1519,
							"nodeType": "StructuredDocumentation",
							"src": "671:335:5",
							"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
						},
						"id": 1560,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nameLocation": "-1:-1:-1",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1524,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1521,
									"mutability": "mutable",
									"name": "_logic",
									"nameLocation": "1031:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1560,
									"src": "1023:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1520,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1523,
									"mutability": "mutable",
									"name": "_data",
									"nameLocation": "1052:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1560,
									"src": "1039:18:5",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_memory_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 1522,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1039:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1022:36:5"
						},
						"returnParameters": {
							"id": 1525,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1067:0:5"
						},
						"scope": 1618,
						"src": "1011:302:5",
						"stateMutability": "payable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"anonymous": false,
						"documentation": {
							"id": 1561,
							"nodeType": "StructuredDocumentation",
							"src": "1319:68:5",
							"text": " @dev Emitted when the implementation is upgraded."
						},
						"id": 1565,
						"name": "Upgraded",
						"nameLocation": "1398:8:5",
						"nodeType": "EventDefinition",
						"parameters": {
							"id": 1564,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1563,
									"indexed": true,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "1423:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "1407:30:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1562,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1407:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1406:32:5"
						},
						"src": "1392:47:5"
					},
					{
						"constant": true,
						"documentation": {
							"id": 1566,
							"nodeType": "StructuredDocumentation",
							"src": "1445:214:5",
							"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
						},
						"id": 1569,
						"mutability": "constant",
						"name": "_IMPLEMENTATION_SLOT",
						"nameLocation": "1689:20:5",
						"nodeType": "VariableDeclaration",
						"scope": 1618,
						"src": "1664:114:5",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						},
						"typeName": {
							"id": 1567,
							"name": "bytes32",
							"nodeType": "ElementaryTypeName",
							"src": "1664:7:5",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"value": {
							"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
							"id": 1568,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "number",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "1712:66:5",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
								"typeString": "int_const 2444...(69 digits omitted)...5612"
							},
							"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
						},
						"visibility": "private"
					},
					{
						"baseFunctions": [1635],
						"body": {
							"id": 1581,
							"nodeType": "Block",
							"src": "1938:169:5",
							"statements": [
								{
									"assignments": [1577],
									"declarations": [
										{
											"constant": false,
											"id": 1577,
											"mutability": "mutable",
											"name": "slot",
											"nameLocation": "1956:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "1948:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1576,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1948:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1579,
									"initialValue": {
										"id": 1578,
										"name": "_IMPLEMENTATION_SLOT",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1569,
										"src": "1963:20:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "1948:35:5"
								},
								{
									"AST": {
										"nodeType": "YulBlock",
										"src": "2058:43:5",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "2072:19:5",
												"value": {
													"arguments": [
														{
															"name": "slot",
															"nodeType": "YulIdentifier",
															"src": "2086:4:5"
														}
													],
													"functionName": {
														"name": "sload",
														"nodeType": "YulIdentifier",
														"src": "2080:5:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "2080:11:5"
												},
												"variableNames": [
													{
														"name": "impl",
														"nodeType": "YulIdentifier",
														"src": "2072:4:5"
													}
												]
											}
										]
									},
									"evmVersion": "istanbul",
									"externalReferences": [
										{
											"declaration": 1574,
											"isOffset": false,
											"isSlot": false,
											"src": "2072:4:5",
											"valueSize": 1
										},
										{
											"declaration": 1577,
											"isOffset": false,
											"isSlot": false,
											"src": "2086:4:5",
											"valueSize": 1
										}
									],
									"id": 1580,
									"nodeType": "InlineAssembly",
									"src": "2049:52:5"
								}
							]
						},
						"documentation": {
							"id": 1570,
							"nodeType": "StructuredDocumentation",
							"src": "1785:67:5",
							"text": " @dev Returns the current implementation address."
						},
						"id": 1582,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_implementation",
						"nameLocation": "1866:15:5",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1572,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "1906:8:5"
						},
						"parameters": {
							"id": 1571,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1881:2:5"
						},
						"returnParameters": {
							"id": 1575,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1574,
									"mutability": "mutable",
									"name": "impl",
									"nameLocation": "1932:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "1924:12:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1573,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1924:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1923:14:5"
						},
						"scope": 1618,
						"src": "1857:250:5",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1596,
							"nodeType": "Block",
							"src": "2290:96:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 1589,
												"name": "newImplementation",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1585,
												"src": "2319:17:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1588,
											"name": "_setImplementation",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1617,
											"src": "2300:18:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 1590,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2300:37:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1591,
									"nodeType": "ExpressionStatement",
									"src": "2300:37:5"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 1593,
												"name": "newImplementation",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1585,
												"src": "2361:17:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1592,
											"name": "Upgraded",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1565,
											"src": "2352:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 1594,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2352:27:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1595,
									"nodeType": "EmitStatement",
									"src": "2347:32:5"
								}
							]
						},
						"documentation": {
							"id": 1583,
							"nodeType": "StructuredDocumentation",
							"src": "2113:108:5",
							"text": " @dev Upgrades the proxy to a new implementation.\n Emits an {Upgraded} event."
						},
						"id": 1597,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_upgradeTo",
						"nameLocation": "2235:10:5",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1586,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1585,
									"mutability": "mutable",
									"name": "newImplementation",
									"nameLocation": "2254:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1597,
									"src": "2246:25:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1584,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2246:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2245:27:5"
						},
						"returnParameters": {
							"id": 1587,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2290:0:5"
						},
						"scope": 1618,
						"src": "2226:160:5",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1616,
							"nodeType": "Block",
							"src": "2540:293:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"id": 1606,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "2577:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													],
													"expression": {
														"id": 1604,
														"name": "Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "2558:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Address_$1966_$",
															"typeString": "type(library Address)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isContract",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1690,
													"src": "2558:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
														"typeString": "function (address) view returns (bool)"
													}
												},
												"id": 1607,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "2558:37:5",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "4552433139363750726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
												"id": 1608,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2597:52:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0127e2e95465d1d260cbd8407114f4e54c32ab4aabaa34b2f160b8f5c528b108",
													"typeString": "literal_string \"ERC1967Proxy: new implementation is not a contract\""
												},
												"value": "ERC1967Proxy: new implementation is not a contract"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_0127e2e95465d1d260cbd8407114f4e54c32ab4aabaa34b2f160b8f5c528b108",
													"typeString": "literal_string \"ERC1967Proxy: new implementation is not a contract\""
												}
											],
											"id": 1603,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "2550:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1609,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2550:100:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1610,
									"nodeType": "ExpressionStatement",
									"src": "2550:100:5"
								},
								{
									"assignments": [1612],
									"declarations": [
										{
											"constant": false,
											"id": 1612,
											"mutability": "mutable",
											"name": "slot",
											"nameLocation": "2669:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 1616,
											"src": "2661:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1611,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2661:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1614,
									"initialValue": {
										"id": 1613,
										"name": "_IMPLEMENTATION_SLOT",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1569,
										"src": "2676:20:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "2661:35:5"
								},
								{
									"AST": {
										"nodeType": "YulBlock",
										"src": "2772:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "slot",
															"nodeType": "YulIdentifier",
															"src": "2793:4:5"
														},
														{
															"name": "newImplementation",
															"nodeType": "YulIdentifier",
															"src": "2799:17:5"
														}
													],
													"functionName": {
														"name": "sstore",
														"nodeType": "YulIdentifier",
														"src": "2786:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "2786:31:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2786:31:5"
											}
										]
									},
									"evmVersion": "istanbul",
									"externalReferences": [
										{
											"declaration": 1600,
											"isOffset": false,
											"isSlot": false,
											"src": "2799:17:5",
											"valueSize": 1
										},
										{
											"declaration": 1612,
											"isOffset": false,
											"isSlot": false,
											"src": "2793:4:5",
											"valueSize": 1
										}
									],
									"id": 1615,
									"nodeType": "InlineAssembly",
									"src": "2763:64:5"
								}
							]
						},
						"documentation": {
							"id": 1598,
							"nodeType": "StructuredDocumentation",
							"src": "2392:80:5",
							"text": " @dev Stores a new address in the EIP1967 implementation slot."
						},
						"id": 1617,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_setImplementation",
						"nameLocation": "2486:18:5",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1601,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1600,
									"mutability": "mutable",
									"name": "newImplementation",
									"nameLocation": "2513:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1617,
									"src": "2505:25:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1599,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2505:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2504:27:5"
						},
						"returnParameters": {
							"id": 1602,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2540:0:5"
						},
						"scope": 1618,
						"src": "2477:356:5",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "private"
					}
				],
				"scope": 1619,
				"src": "634:2201:5"
			}
		],
		"src": "33:2803:5"
	},
	"legacyAST": {
		"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
		"exportedSymbols": {
			"Address": [1966],
			"ERC1967Proxy": [1618],
			"Proxy": [1670]
		},
		"id": 1619,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1513,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "33:23:5"
			},
			{
				"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
				"file": "../Proxy.sol",
				"id": 1514,
				"nameLocation": "-1:-1:-1",
				"nodeType": "ImportDirective",
				"scope": 1619,
				"sourceUnit": 1671,
				"src": "58:22:5",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
				"file": "../../utils/Address.sol",
				"id": 1515,
				"nameLocation": "-1:-1:-1",
				"nodeType": "ImportDirective",
				"scope": 1619,
				"sourceUnit": 1967,
				"src": "81:33:5",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 1517,
							"name": "Proxy",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 1670,
							"src": "659:5:5"
						},
						"id": 1518,
						"nodeType": "InheritanceSpecifier",
						"src": "659:5:5"
					}
				],
				"contractDependencies": [1670],
				"contractKind": "contract",
				"documentation": {
					"id": 1516,
					"nodeType": "StructuredDocumentation",
					"src": "116:517:5",
					"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy.\n Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n {TransparentUpgradeableProxy}."
				},
				"fullyImplemented": true,
				"id": 1618,
				"linearizedBaseContracts": [1618, 1670],
				"name": "ERC1967Proxy",
				"nameLocation": "643:12:5",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 1559,
							"nodeType": "Block",
							"src": "1067:246:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"id": 1539,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1527,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1569,
													"src": "1084:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1134:30:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																					"typeString": "literal_string \"eip1967.proxy.implementation\""
																				},
																				"value": "eip1967.proxy.implementation"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																					"typeString": "literal_string \"eip1967.proxy.implementation\""
																				}
																			],
																			"id": 1532,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "1124:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1124:41:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1116:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1116:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1116:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1169:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1116:54:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1108:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 1528,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1108:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"src": "1084:87:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											],
											"id": 1526,
											"name": "assert",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967293,
											"src": "1077:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
												"typeString": "function (bool) pure"
											}
										},
										"id": 1540,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1077:95:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1541,
									"nodeType": "ExpressionStatement",
									"src": "1077:95:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 1543,
												"name": "_logic",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1521,
												"src": "1201:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1542,
											"name": "_setImplementation",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1617,
											"src": "1182:18:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 1544,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1182:26:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1545,
									"nodeType": "ExpressionStatement",
									"src": "1182:26:5"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1549,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"id": 1546,
												"name": "_data",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1523,
												"src": "1221:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											},
											"id": 1547,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "length",
											"nodeType": "MemberAccess",
											"src": "1221:12:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">",
										"rightExpression": {
											"hexValue": "30",
											"id": 1548,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1236:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1221:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 1558,
									"nodeType": "IfStatement",
									"src": "1218:89:5",
									"trueBody": {
										"id": 1557,
										"nodeType": "Block",
										"src": "1239:68:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1553,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "1282:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1554,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "1290:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1550,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "1253:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$1966_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionDelegateCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1900,
														"src": "1253:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1253:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "1253:43:5"
											}
										]
									}
								}
							]
						},
						"documentation": {
							"id": 1519,
							"nodeType": "StructuredDocumentation",
							"src": "671:335:5",
							"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
						},
						"id": 1560,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nameLocation": "-1:-1:-1",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1524,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1521,
									"mutability": "mutable",
									"name": "_logic",
									"nameLocation": "1031:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1560,
									"src": "1023:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1520,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1523,
									"mutability": "mutable",
									"name": "_data",
									"nameLocation": "1052:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1560,
									"src": "1039:18:5",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_memory_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 1522,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1039:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1022:36:5"
						},
						"returnParameters": {
							"id": 1525,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1067:0:5"
						},
						"scope": 1618,
						"src": "1011:302:5",
						"stateMutability": "payable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"anonymous": false,
						"documentation": {
							"id": 1561,
							"nodeType": "StructuredDocumentation",
							"src": "1319:68:5",
							"text": " @dev Emitted when the implementation is upgraded."
						},
						"id": 1565,
						"name": "Upgraded",
						"nameLocation": "1398:8:5",
						"nodeType": "EventDefinition",
						"parameters": {
							"id": 1564,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1563,
									"indexed": true,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "1423:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "1407:30:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1562,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1407:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1406:32:5"
						},
						"src": "1392:47:5"
					},
					{
						"constant": true,
						"documentation": {
							"id": 1566,
							"nodeType": "StructuredDocumentation",
							"src": "1445:214:5",
							"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
						},
						"id": 1569,
						"mutability": "constant",
						"name": "_IMPLEMENTATION_SLOT",
						"nameLocation": "1689:20:5",
						"nodeType": "VariableDeclaration",
						"scope": 1618,
						"src": "1664:114:5",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						},
						"typeName": {
							"id": 1567,
							"name": "bytes32",
							"nodeType": "ElementaryTypeName",
							"src": "1664:7:5",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"value": {
							"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
							"id": 1568,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "number",
							"lValueRequested": false,
							"nodeType": "Literal",
							"src": "1712:66:5",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
								"typeString": "int_const 2444...(69 digits omitted)...5612"
							},
							"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
						},
						"visibility": "private"
					},
					{
						"baseFunctions": [1635],
						"body": {
							"id": 1581,
							"nodeType": "Block",
							"src": "1938:169:5",
							"statements": [
								{
									"assignments": [1577],
									"declarations": [
										{
											"constant": false,
											"id": 1577,
											"mutability": "mutable",
											"name": "slot",
											"nameLocation": "1956:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 1581,
											"src": "1948:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1576,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1948:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1579,
									"initialValue": {
										"id": 1578,
										"name": "_IMPLEMENTATION_SLOT",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1569,
										"src": "1963:20:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "1948:35:5"
								},
								{
									"AST": {
										"nodeType": "YulBlock",
										"src": "2058:43:5",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "2072:19:5",
												"value": {
													"arguments": [
														{
															"name": "slot",
															"nodeType": "YulIdentifier",
															"src": "2086:4:5"
														}
													],
													"functionName": {
														"name": "sload",
														"nodeType": "YulIdentifier",
														"src": "2080:5:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "2080:11:5"
												},
												"variableNames": [
													{
														"name": "impl",
														"nodeType": "YulIdentifier",
														"src": "2072:4:5"
													}
												]
											}
										]
									},
									"evmVersion": "istanbul",
									"externalReferences": [
										{
											"declaration": 1574,
											"isOffset": false,
											"isSlot": false,
											"src": "2072:4:5",
											"valueSize": 1
										},
										{
											"declaration": 1577,
											"isOffset": false,
											"isSlot": false,
											"src": "2086:4:5",
											"valueSize": 1
										}
									],
									"id": 1580,
									"nodeType": "InlineAssembly",
									"src": "2049:52:5"
								}
							]
						},
						"documentation": {
							"id": 1570,
							"nodeType": "StructuredDocumentation",
							"src": "1785:67:5",
							"text": " @dev Returns the current implementation address."
						},
						"id": 1582,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_implementation",
						"nameLocation": "1866:15:5",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1572,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "1906:8:5"
						},
						"parameters": {
							"id": 1571,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1881:2:5"
						},
						"returnParameters": {
							"id": 1575,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1574,
									"mutability": "mutable",
									"name": "impl",
									"nameLocation": "1932:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "1924:12:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1573,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1924:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1923:14:5"
						},
						"scope": 1618,
						"src": "1857:250:5",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1596,
							"nodeType": "Block",
							"src": "2290:96:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 1589,
												"name": "newImplementation",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1585,
												"src": "2319:17:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1588,
											"name": "_setImplementation",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1617,
											"src": "2300:18:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 1590,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2300:37:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1591,
									"nodeType": "ExpressionStatement",
									"src": "2300:37:5"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 1593,
												"name": "newImplementation",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1585,
												"src": "2361:17:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1592,
											"name": "Upgraded",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1565,
											"src": "2352:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 1594,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2352:27:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1595,
									"nodeType": "EmitStatement",
									"src": "2347:32:5"
								}
							]
						},
						"documentation": {
							"id": 1583,
							"nodeType": "StructuredDocumentation",
							"src": "2113:108:5",
							"text": " @dev Upgrades the proxy to a new implementation.\n Emits an {Upgraded} event."
						},
						"id": 1597,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_upgradeTo",
						"nameLocation": "2235:10:5",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1586,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1585,
									"mutability": "mutable",
									"name": "newImplementation",
									"nameLocation": "2254:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1597,
									"src": "2246:25:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1584,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2246:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2245:27:5"
						},
						"returnParameters": {
							"id": 1587,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2290:0:5"
						},
						"scope": 1618,
						"src": "2226:160:5",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1616,
							"nodeType": "Block",
							"src": "2540:293:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"id": 1606,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "2577:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													],
													"expression": {
														"id": 1604,
														"name": "Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "2558:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Address_$1966_$",
															"typeString": "type(library Address)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isContract",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1690,
													"src": "2558:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
														"typeString": "function (address) view returns (bool)"
													}
												},
												"id": 1607,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "2558:37:5",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "4552433139363750726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
												"id": 1608,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2597:52:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0127e2e95465d1d260cbd8407114f4e54c32ab4aabaa34b2f160b8f5c528b108",
													"typeString": "literal_string \"ERC1967Proxy: new implementation is not a contract\""
												},
												"value": "ERC1967Proxy: new implementation is not a contract"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_0127e2e95465d1d260cbd8407114f4e54c32ab4aabaa34b2f160b8f5c528b108",
													"typeString": "literal_string \"ERC1967Proxy: new implementation is not a contract\""
												}
											],
											"id": 1603,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "2550:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1609,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2550:100:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1610,
									"nodeType": "ExpressionStatement",
									"src": "2550:100:5"
								},
								{
									"assignments": [1612],
									"declarations": [
										{
											"constant": false,
											"id": 1612,
											"mutability": "mutable",
											"name": "slot",
											"nameLocation": "2669:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 1616,
											"src": "2661:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1611,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2661:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1614,
									"initialValue": {
										"id": 1613,
										"name": "_IMPLEMENTATION_SLOT",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1569,
										"src": "2676:20:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "2661:35:5"
								},
								{
									"AST": {
										"nodeType": "YulBlock",
										"src": "2772:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "slot",
															"nodeType": "YulIdentifier",
															"src": "2793:4:5"
														},
														{
															"name": "newImplementation",
															"nodeType": "YulIdentifier",
															"src": "2799:17:5"
														}
													],
													"functionName": {
														"name": "sstore",
														"nodeType": "YulIdentifier",
														"src": "2786:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "2786:31:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2786:31:5"
											}
										]
									},
									"evmVersion": "istanbul",
									"externalReferences": [
										{
											"declaration": 1600,
											"isOffset": false,
											"isSlot": false,
											"src": "2799:17:5",
											"valueSize": 1
										},
										{
											"declaration": 1612,
											"isOffset": false,
											"isSlot": false,
											"src": "2793:4:5",
											"valueSize": 1
										}
									],
									"id": 1615,
									"nodeType": "InlineAssembly",
									"src": "2763:64:5"
								}
							]
						},
						"documentation": {
							"id": 1598,
							"nodeType": "StructuredDocumentation",
							"src": "2392:80:5",
							"text": " @dev Stores a new address in the EIP1967 implementation slot."
						},
						"id": 1617,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_setImplementation",
						"nameLocation": "2486:18:5",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1601,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1600,
									"mutability": "mutable",
									"name": "newImplementation",
									"nameLocation": "2513:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1617,
									"src": "2505:25:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1599,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2505:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2504:27:5"
						},
						"returnParameters": {
							"id": 1602,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2540:0:5"
						},
						"scope": 1618,
						"src": "2477:356:5",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "private"
					}
				],
				"scope": 1619,
				"src": "634:2201:5"
			}
		],
		"src": "33:2803:5"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.3+commit.8d00100c.Emscripten.clang"
	},
	"networks": {},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-05-25T02:36:18.053Z",
	"devdoc": {
		"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy. Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see {TransparentUpgradeableProxy}.",
		"events": {
			"Upgraded(address)": {
				"details": "Emitted when the implementation is upgraded."
			}
		},
		"kind": "dev",
		"methods": {
			"constructor": {
				"details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor."
			}
		},
		"stateVariables": {
			"_IMPLEMENTATION_SLOT": {
				"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	}
}
