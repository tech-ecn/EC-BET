{
	"contractName": "ERC20",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "string",
					"name": "name_",
					"type": "string"
				},
				{
					"internalType": "string",
					"name": "symbol_",
					"type": "string"
				},
				{
					"internalType": "address",
					"name": "_trustedForwarder",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "forwarder",
					"type": "address"
				}
			],
			"name": "isTrustedForwarder",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "trustedForwarder",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "recipient",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "versionRecipient",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "recipient",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "addedValue",
					"type": "uint256"
				}
			],
			"name": "increaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "subtractedValue",
					"type": "uint256"
				}
			],
			"name": "decreaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"},\"versionRecipient()\":{\"notice\":\"return the sender of this call. if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes of the msg.data. otherwise, return `msg.sender` should be used in the contract anywhere instead of msg.sender\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/workecn/contracts/contracts/3_ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/workecn/contracts/contracts/3_ERC20.sol\":{\"keccak256\":\"0x40f6e9e47c59f296a6044b96d957e5873d966624a3dd4fc13ac744d3f888c3c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9858c5b349e2d0e0b27c768471923e59af9eb19d02f2799a6faa31f5c696be\",\"dweb:/ipfs/QmdrCXeATZNpq1wo9GuLNHVT4UW3zdKG5QkBGmfncKofmx\"]}},\"version\":1}",
	"bytecode": "0x60806040523480156200001157600080fd5b5060405162000d0438038062000d048339810160408190526200003491620001e2565b82516200004990600490602086019062000089565b5081516200005f90600590602085019062000089565b50600080546001600160a01b0319166001600160a01b039290921691909117905550620002be9050565b82805462000097906200026b565b90600052602060002090601f016020900481019282620000bb576000855562000106565b82601f10620000d657805160ff191683800117855562000106565b8280016001018555821562000106579182015b8281111562000106578251825591602001919060010190620000e9565b506200011492915062000118565b5090565b5b8082111562000114576000815560010162000119565b600082601f83011262000140578081fd5b81516001600160401b03808211156200015d576200015d620002a8565b604051601f8301601f19908116603f01168101908282118183101715620001885762000188620002a8565b81604052838152602092508683858801011115620001a4578485fd5b8491505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d857848385830101525b9695505050505050565b600080600060608486031215620001f7578283fd5b83516001600160401b03808211156200020e578485fd5b6200021c878388016200012f565b9450602086015191508082111562000232578384fd5b5062000241868287016200012f565b604086015190935090506001600160a01b038116811462000260578182fd5b809150509250925092565b600181811c908216806200028057607f821691505b60208210811415620002a257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610a3680620002ce6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063572b6c051161008c57806395d89b411161006657806395d89b41146101fb578063a457c2d714610203578063a9059cbb14610216578063dd62ed3e14610229576100ea565b8063572b6c051461019457806370a08231146101a75780637da0a877146101d0576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce567146101555780633950935114610164578063486ff0cd14610177576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610262565b604051610104919061092d565b60405180910390f35b61012061011b366004610904565b6102f5565b6040519015158152602001610104565b6003545b604051908152602001610104565b6101206101503660046108c9565b610312565b60405160128152602001610104565b610120610172366004610904565b6103ef565b6040805180820190915260018152603160f81b60208201526100f7565b6101206101a2366004610876565b61043e565b6101346101b5366004610876565b6001600160a01b031660009081526001602052604090205490565b6000546101e3906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6100f7610455565b610120610211366004610904565b610464565b610120610224366004610904565b61051d565b610134610237366004610897565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b606060048054610271906109af565b80601f016020809104026020016040519081016040528092919081815260200182805461029d906109af565b80156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b505050505090505b90565b6000610309610302610531565b8484610563565b50600192915050565b600061031f848484610687565b6001600160a01b038416600090815260026020526040812081610340610531565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103c95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103e4856103d5610531565b6103df8685610998565b610563565b506001949350505050565b60006103096103fc610531565b84846002600061040a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103df9190610980565b6000546001600160a01b038281169116145b919050565b606060058054610271906109af565b60008060026000610473610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104fd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103c0565b610513610508610531565b856103df8685610998565b5060019392505050565b600061030961052a610531565b8484610687565b60006018361080159061054857506105483361043e565b1561055c575060131936013560601c6102f2565b50336102f2565b6001600160a01b0383166105c55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c0565b6001600160a01b0382166106265760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106eb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c0565b6001600160a01b03821661074d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c0565b6001600160a01b038316600090815260016020526040902054818110156107c55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c0565b6107cf8282610998565b6001600160a01b038086166000908152600160205260408082209390935590851681529081208054849290610805908490610980565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161085191815260200190565b60405180910390a350505050565b80356001600160a01b038116811461045057600080fd5b600060208284031215610887578081fd5b6108908261085f565b9392505050565b600080604083850312156108a9578081fd5b6108b28361085f565b91506108c06020840161085f565b90509250929050565b6000806000606084860312156108dd578081fd5b6108e68461085f565b92506108f46020850161085f565b9150604084013590509250925092565b60008060408385031215610916578182fd5b61091f8361085f565b946020939093013593505050565b6000602080835283518082850152825b818110156109595785810183015185820160400152820161093d565b8181111561096a5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610993576109936109ea565b500190565b6000828210156109aa576109aa6109ea565b500390565b600181811c908216806109c357607f821691505b602082108114156109e457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a6c9d1cb5fe52ec7f7c56e68e976accca9a33904dee1069de18c150488ca791d64736f6c63430008030033",
	"deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063572b6c051161008c57806395d89b411161006657806395d89b41146101fb578063a457c2d714610203578063a9059cbb14610216578063dd62ed3e14610229576100ea565b8063572b6c051461019457806370a08231146101a75780637da0a877146101d0576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce567146101555780633950935114610164578063486ff0cd14610177576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610262565b604051610104919061092d565b60405180910390f35b61012061011b366004610904565b6102f5565b6040519015158152602001610104565b6003545b604051908152602001610104565b6101206101503660046108c9565b610312565b60405160128152602001610104565b610120610172366004610904565b6103ef565b6040805180820190915260018152603160f81b60208201526100f7565b6101206101a2366004610876565b61043e565b6101346101b5366004610876565b6001600160a01b031660009081526001602052604090205490565b6000546101e3906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6100f7610455565b610120610211366004610904565b610464565b610120610224366004610904565b61051d565b610134610237366004610897565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b606060048054610271906109af565b80601f016020809104026020016040519081016040528092919081815260200182805461029d906109af565b80156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b505050505090505b90565b6000610309610302610531565b8484610563565b50600192915050565b600061031f848484610687565b6001600160a01b038416600090815260026020526040812081610340610531565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103c95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103e4856103d5610531565b6103df8685610998565b610563565b506001949350505050565b60006103096103fc610531565b84846002600061040a610531565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103df9190610980565b6000546001600160a01b038281169116145b919050565b606060058054610271906109af565b60008060026000610473610531565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104fd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103c0565b610513610508610531565b856103df8685610998565b5060019392505050565b600061030961052a610531565b8484610687565b60006018361080159061054857506105483361043e565b1561055c575060131936013560601c6102f2565b50336102f2565b6001600160a01b0383166105c55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c0565b6001600160a01b0382166106265760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106eb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c0565b6001600160a01b03821661074d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c0565b6001600160a01b038316600090815260016020526040902054818110156107c55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c0565b6107cf8282610998565b6001600160a01b038086166000908152600160205260408082209390935590851681529081208054849290610805908490610980565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161085191815260200190565b60405180910390a350505050565b80356001600160a01b038116811461045057600080fd5b600060208284031215610887578081fd5b6108908261085f565b9392505050565b600080604083850312156108a9578081fd5b6108b28361085f565b91506108c06020840161085f565b90509250929050565b6000806000606084860312156108dd578081fd5b6108e68461085f565b92506108f46020850161085f565b9150604084013590509250925092565b60008060408385031215610916578182fd5b61091f8361085f565b946020939093013593505050565b6000602080835283518082850152825b818110156109595785810183015185820160400152820161093d565b8181111561096a5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610993576109936109ea565b500190565b6000828210156109aa576109aa6109ea565b500390565b600181811c908216806109c357607f821691505b602082108114156109e457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a6c9d1cb5fe52ec7f7c56e68e976accca9a33904dee1069de18c150488ca791d64736f6c63430008030033",
	"immutableReferences": {},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:2216:9",
				"statements": [
					{
						"nodeType": "YulBlock",
						"src": "6:3:9",
						"statements": []
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "78:845:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "127:24:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "array",
															"nodeType": "YulIdentifier",
															"src": "136:5:9"
														},
														{
															"name": "array",
															"nodeType": "YulIdentifier",
															"src": "143:5:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "129:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "129:20:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "129:20:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"arguments": [
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "106:6:9"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "114:4:9",
																"type": "",
																"value": "0x1f"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "102:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "102:17:9"
													},
													{
														"name": "end",
														"nodeType": "YulIdentifier",
														"src": "121:3:9"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "98:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "98:27:9"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "91:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "91:35:9"
									},
									"nodeType": "YulIf",
									"src": "88:2:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "160:23:9",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "176:6:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "170:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "170:13:9"
									},
									"variables": [
										{
											"name": "_1",
											"nodeType": "YulTypedName",
											"src": "164:2:9",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "192:28:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "210:2:9",
														"type": "",
														"value": "64"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "214:1:9",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "shl",
													"nodeType": "YulIdentifier",
													"src": "206:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "206:10:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "218:1:9",
												"type": "",
												"value": "1"
											}
										],
										"functionName": {
											"name": "sub",
											"nodeType": "YulIdentifier",
											"src": "202:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "202:18:9"
									},
									"variables": [
										{
											"name": "_2",
											"nodeType": "YulTypedName",
											"src": "196:2:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "243:22:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x41",
														"nodeType": "YulIdentifier",
														"src": "245:16:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "245:18:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "245:18:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "235:2:9"
											},
											{
												"name": "_2",
												"nodeType": "YulIdentifier",
												"src": "239:2:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "232:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "232:10:9"
									},
									"nodeType": "YulIf",
									"src": "229:2:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "274:17:9",
									"value": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "288:2:9",
												"type": "",
												"value": "31"
											}
										],
										"functionName": {
											"name": "not",
											"nodeType": "YulIdentifier",
											"src": "284:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "284:7:9"
									},
									"variables": [
										{
											"name": "_3",
											"nodeType": "YulTypedName",
											"src": "278:2:9",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "300:23:9",
									"value": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "320:2:9",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "314:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "314:9:9"
									},
									"variables": [
										{
											"name": "memPtr",
											"nodeType": "YulTypedName",
											"src": "304:6:9",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "332:71:9",
									"value": {
										"arguments": [
											{
												"name": "memPtr",
												"nodeType": "YulIdentifier",
												"src": "354:6:9"
											},
											{
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "378:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "382:4:9",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "374:13:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "389:2:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "370:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:22:9"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "394:2:9",
																"type": "",
																"value": "63"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "366:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "366:31:9"
													},
													{
														"name": "_3",
														"nodeType": "YulIdentifier",
														"src": "399:2:9"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "362:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "362:40:9"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "350:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "350:53:9"
									},
									"variables": [
										{
											"name": "newFreePtr",
											"nodeType": "YulTypedName",
											"src": "336:10:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "462:22:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x41",
														"nodeType": "YulIdentifier",
														"src": "464:16:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "464:18:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "464:18:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "newFreePtr",
														"nodeType": "YulIdentifier",
														"src": "421:10:9"
													},
													{
														"name": "_2",
														"nodeType": "YulIdentifier",
														"src": "433:2:9"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "418:2:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "418:18:9"
											},
											{
												"arguments": [
													{
														"name": "newFreePtr",
														"nodeType": "YulIdentifier",
														"src": "441:10:9"
													},
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "453:6:9"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "438:2:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "438:22:9"
											}
										],
										"functionName": {
											"name": "or",
											"nodeType": "YulIdentifier",
											"src": "415:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "415:46:9"
									},
									"nodeType": "YulIf",
									"src": "412:2:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "500:2:9",
												"type": "",
												"value": "64"
											},
											{
												"name": "newFreePtr",
												"nodeType": "YulIdentifier",
												"src": "504:10:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "493:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "493:22:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "493:22:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "memPtr",
												"nodeType": "YulIdentifier",
												"src": "531:6:9"
											},
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "539:2:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "524:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "524:18:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "524:18:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "551:14:9",
									"value": {
										"kind": "number",
										"nodeType": "YulLiteral",
										"src": "561:4:9",
										"type": "",
										"value": "0x20"
									},
									"variables": [
										{
											"name": "_4",
											"nodeType": "YulTypedName",
											"src": "555:2:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "611:24:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "array",
															"nodeType": "YulIdentifier",
															"src": "620:5:9"
														},
														{
															"name": "array",
															"nodeType": "YulIdentifier",
															"src": "627:5:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "613:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "613:20:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "613:20:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"arguments": [
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "588:6:9"
															},
															{
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "596:2:9"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "584:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "584:15:9"
													},
													{
														"name": "_4",
														"nodeType": "YulIdentifier",
														"src": "601:2:9"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "580:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "580:24:9"
											},
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "606:3:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "577:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "577:33:9"
									},
									"nodeType": "YulIf",
									"src": "574:2:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "644:14:9",
									"value": {
										"name": "array",
										"nodeType": "YulIdentifier",
										"src": "653:5:9"
									},
									"variables": [
										{
											"name": "i",
											"nodeType": "YulTypedName",
											"src": "648:1:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "713:87:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "memPtr",
																			"nodeType": "YulIdentifier",
																			"src": "742:6:9"
																		},
																		{
																			"name": "i",
																			"nodeType": "YulIdentifier",
																			"src": "750:1:9"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "738:3:9"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "738:14:9"
																},
																{
																	"name": "_4",
																	"nodeType": "YulIdentifier",
																	"src": "754:2:9"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "734:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "734:23:9"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "773:6:9"
																				},
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "781:1:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "769:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:14:9"
																		},
																		{
																			"name": "_4",
																			"nodeType": "YulIdentifier",
																			"src": "785:2:9"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:9"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "765:23:9"
																}
															],
															"functionName": {
																"name": "mload",
																"nodeType": "YulIdentifier",
																"src": "759:5:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "759:30:9"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "727:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "727:63:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "727:63:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "678:1:9"
											},
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "681:2:9"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "675:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "675:9:9"
									},
									"nodeType": "YulForLoop",
									"post": {
										"nodeType": "YulBlock",
										"src": "685:19:9",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "687:15:9",
												"value": {
													"arguments": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "696:1:9"
														},
														{
															"name": "_4",
															"nodeType": "YulIdentifier",
															"src": "699:2:9"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "692:3:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "692:10:9"
												},
												"variableNames": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
														"src": "687:1:9"
													}
												]
											}
										]
									},
									"pre": {
										"nodeType": "YulBlock",
										"src": "671:3:9",
										"statements": []
									},
									"src": "667:133:9"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "830:63:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "memPtr",
																			"nodeType": "YulIdentifier",
																			"src": "859:6:9"
																		},
																		{
																			"name": "_1",
																			"nodeType": "YulIdentifier",
																			"src": "867:2:9"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "855:3:9"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "855:15:9"
																},
																{
																	"name": "_4",
																	"nodeType": "YulIdentifier",
																	"src": "872:2:9"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "851:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "851:24:9"
														},
														{
															"name": "array",
															"nodeType": "YulIdentifier",
															"src": "877:5:9"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "844:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "844:39:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "844:39:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "815:1:9"
											},
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "818:2:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "812:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "812:9:9"
									},
									"nodeType": "YulIf",
									"src": "809:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "902:15:9",
									"value": {
										"name": "memPtr",
										"nodeType": "YulIdentifier",
										"src": "911:6:9"
									},
									"variableNames": [
										{
											"name": "array",
											"nodeType": "YulIdentifier",
											"src": "902:5:9"
										}
									]
								}
							]
						},
						"name": "abi_decode_string_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "52:6:9",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "60:3:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "array",
								"nodeType": "YulTypedName",
								"src": "68:5:9",
								"type": ""
							}
						],
						"src": "14:909:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1063:634:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1109:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1118:6:9"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1126:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1111:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1111:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1111:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1084:7:9"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1093:9:9"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1080:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1080:23:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1105:2:9",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1076:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1076:32:9"
									},
									"nodeType": "YulIf",
									"src": "1073:2:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1144:30:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1164:9:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "1158:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1158:16:9"
									},
									"variables": [
										{
											"name": "offset",
											"nodeType": "YulTypedName",
											"src": "1148:6:9",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1183:28:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1201:2:9",
														"type": "",
														"value": "64"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1205:1:9",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "shl",
													"nodeType": "YulIdentifier",
													"src": "1197:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1197:10:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1209:1:9",
												"type": "",
												"value": "1"
											}
										],
										"functionName": {
											"name": "sub",
											"nodeType": "YulIdentifier",
											"src": "1193:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1193:18:9"
									},
									"variables": [
										{
											"name": "_1",
											"nodeType": "YulTypedName",
											"src": "1187:2:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1238:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1247:6:9"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1255:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1240:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1240:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1240:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "1226:6:9"
											},
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "1234:2:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "1223:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1223:14:9"
									},
									"nodeType": "YulIf",
									"src": "1220:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1273:71:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1316:9:9"
													},
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "1327:6:9"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1312:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1312:22:9"
											},
											{
												"name": "dataEnd",
												"nodeType": "YulIdentifier",
												"src": "1336:7:9"
											}
										],
										"functionName": {
											"name": "abi_decode_string_fromMemory",
											"nodeType": "YulIdentifier",
											"src": "1283:28:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1283:61:9"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "1273:6:9"
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1353:41:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1379:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1390:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1375:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1375:18:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "1369:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1369:25:9"
									},
									"variables": [
										{
											"name": "offset_1",
											"nodeType": "YulTypedName",
											"src": "1357:8:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1423:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "1432:6:9"
														},
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "1440:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1425:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1425:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1425:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "offset_1",
												"nodeType": "YulIdentifier",
												"src": "1409:8:9"
											},
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "1419:2:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "1406:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1406:16:9"
									},
									"nodeType": "YulIf",
									"src": "1403:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1458:73:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1501:9:9"
													},
													{
														"name": "offset_1",
														"nodeType": "YulIdentifier",
														"src": "1512:8:9"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1497:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1497:24:9"
											},
											{
												"name": "dataEnd",
												"nodeType": "YulIdentifier",
												"src": "1523:7:9"
											}
										],
										"functionName": {
											"name": "abi_decode_string_fromMemory",
											"nodeType": "YulIdentifier",
											"src": "1468:28:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1468:63:9"
									},
									"variableNames": [
										{
											"name": "value1",
											"nodeType": "YulIdentifier",
											"src": "1458:6:9"
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1540:38:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1563:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1574:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1559:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1559:18:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "1553:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1553:25:9"
									},
									"variables": [
										{
											"name": "value",
											"nodeType": "YulTypedName",
											"src": "1544:5:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1641:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "1650:6:9"
														},
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "1658:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1643:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1643:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1643:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1600:5:9"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1611:5:9"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1626:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1631:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1622:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1622:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1618:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:19:9"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "1607:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "1607:31:9"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "1597:2:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1597:42:9"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "1590:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1590:50:9"
									},
									"nodeType": "YulIf",
									"src": "1587:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1676:15:9",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "1686:5:9"
									},
									"variableNames": [
										{
											"name": "value2",
											"nodeType": "YulIdentifier",
											"src": "1676:6:9"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1013:9:9",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1024:7:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1036:6:9",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "1044:6:9",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "1052:6:9",
								"type": ""
							}
						],
						"src": "928:769:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1757:325:9",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1767:22:9",
									"value": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1781:1:9",
												"type": "",
												"value": "1"
											},
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "1784:4:9"
											}
										],
										"functionName": {
											"name": "shr",
											"nodeType": "YulIdentifier",
											"src": "1777:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1777:12:9"
									},
									"variableNames": [
										{
											"name": "length",
											"nodeType": "YulIdentifier",
											"src": "1767:6:9"
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1798:38:9",
									"value": {
										"arguments": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "1828:4:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1834:1:9",
												"type": "",
												"value": "1"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "1824:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1824:12:9"
									},
									"variables": [
										{
											"name": "outOfPlaceEncoding",
											"nodeType": "YulTypedName",
											"src": "1802:18:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1875:31:9",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "1877:27:9",
												"value": {
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "1891:6:9"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1899:4:9",
															"type": "",
															"value": "0x7f"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "1887:3:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1887:17:9"
												},
												"variableNames": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "1877:6:9"
													}
												]
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "1855:18:9"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "1848:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1848:26:9"
									},
									"nodeType": "YulIf",
									"src": "1845:2:9"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1965:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1986:1:9",
															"type": "",
															"value": "0"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1993:3:9",
																	"type": "",
																	"value": "224"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1998:10:9",
																	"type": "",
																	"value": "0x4e487b71"
																}
															],
															"functionName": {
																"name": "shl",
																"nodeType": "YulIdentifier",
																"src": "1989:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "1989:20:9"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "1979:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1979:31:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1979:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2030:1:9",
															"type": "",
															"value": "4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2033:4:9",
															"type": "",
															"value": "0x22"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2023:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "2023:15:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2023:15:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2058:1:9",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2061:4:9",
															"type": "",
															"value": "0x24"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "2051:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "2051:15:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2051:15:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "1921:18:9"
											},
											{
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "1944:6:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1952:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "1941:2:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1941:14:9"
											}
										],
										"functionName": {
											"name": "eq",
											"nodeType": "YulIdentifier",
											"src": "1918:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1918:38:9"
									},
									"nodeType": "YulIf",
									"src": "1915:2:9"
								}
							]
						},
						"name": "extract_byte_array_length",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "data",
								"nodeType": "YulTypedName",
								"src": "1737:4:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "1746:6:9",
								"type": ""
							}
						],
						"src": "1702:380:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2119:95:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2136:1:9",
												"type": "",
												"value": "0"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2143:3:9",
														"type": "",
														"value": "224"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2148:10:9",
														"type": "",
														"value": "0x4e487b71"
													}
												],
												"functionName": {
													"name": "shl",
													"nodeType": "YulIdentifier",
													"src": "2139:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2139:20:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2129:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2129:31:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2129:31:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2176:1:9",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2179:4:9",
												"type": "",
												"value": "0x41"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2169:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2169:15:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2169:15:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2200:1:9",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2203:4:9",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "2193:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2193:15:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2193:15:9"
								}
							]
						},
						"name": "panic_error_0x41",
						"nodeType": "YulFunctionDefinition",
						"src": "2087:127:9"
					}
				]
			},
			"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value2, value2) }\n        value2 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
			"id": 9,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:6276:9",
				"statements": [
					{
						"nodeType": "YulBlock",
						"src": "6:3:9",
						"statements": []
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "63:124:9",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "73:29:9",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "95:6:9"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "82:12:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "82:20:9"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "73:5:9"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "165:16:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "174:1:9",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "177:1:9",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "167:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "167:12:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "167:12:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "124:5:9"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "135:5:9"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "150:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "155:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "146:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "146:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "159:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "142:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:19:9"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "131:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "131:31:9"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "121:2:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "121:42:9"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "114:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "114:50:9"
									},
									"nodeType": "YulIf",
									"src": "111:2:9"
								}
							]
						},
						"name": "abi_decode_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "42:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "53:5:9",
								"type": ""
							}
						],
						"src": "14:173:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "262:126:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "308:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "317:6:9"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "325:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "310:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "310:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "310:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "283:7:9"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "292:9:9"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "279:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "279:23:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "304:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "275:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "275:32:9"
									},
									"nodeType": "YulIf",
									"src": "272:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "343:39:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "372:9:9"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "353:18:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "353:29:9"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "343:6:9"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "228:9:9",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "239:7:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "251:6:9",
								"type": ""
							}
						],
						"src": "192:196:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "480:183:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "526:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "535:6:9"
														},
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "543:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "528:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "528:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "528:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "501:7:9"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "510:9:9"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "497:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "497:23:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "522:2:9",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "493:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "493:32:9"
									},
									"nodeType": "YulIf",
									"src": "490:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "561:39:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "590:9:9"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "571:18:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "571:29:9"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "561:6:9"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "609:48:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "642:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "653:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "638:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "638:18:9"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "619:18:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "619:38:9"
									},
									"variableNames": [
										{
											"name": "value1",
											"nodeType": "YulIdentifier",
											"src": "609:6:9"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "438:9:9",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "449:7:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "461:6:9",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "469:6:9",
								"type": ""
							}
						],
						"src": "393:270:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "772:234:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "818:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "827:6:9"
														},
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "835:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "820:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "820:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "820:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "793:7:9"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "802:9:9"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "789:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "789:23:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "814:2:9",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "785:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "785:32:9"
									},
									"nodeType": "YulIf",
									"src": "782:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "853:39:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "882:9:9"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "863:18:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "863:29:9"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "853:6:9"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "901:48:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "934:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "945:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "930:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "930:18:9"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "911:18:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "911:38:9"
									},
									"variableNames": [
										{
											"name": "value1",
											"nodeType": "YulIdentifier",
											"src": "901:6:9"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "958:42:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "985:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "996:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "981:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "981:18:9"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "968:12:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "968:32:9"
									},
									"variableNames": [
										{
											"name": "value2",
											"nodeType": "YulIdentifier",
											"src": "958:6:9"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_addresst_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "722:9:9",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "733:7:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "745:6:9",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "753:6:9",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "761:6:9",
								"type": ""
							}
						],
						"src": "668:338:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1098:177:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1144:26:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1153:6:9"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1161:6:9"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1146:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1146:22:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1146:22:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1119:7:9"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1128:9:9"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1115:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1115:23:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1140:2:9",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1111:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1111:32:9"
									},
									"nodeType": "YulIf",
									"src": "1108:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1179:39:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1208:9:9"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "1189:18:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1189:29:9"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "1179:6:9"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "1227:42:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1254:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1265:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1250:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1250:18:9"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "1237:12:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1237:32:9"
									},
									"variableNames": [
										{
											"name": "value1",
											"nodeType": "YulIdentifier",
											"src": "1227:6:9"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1056:9:9",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1067:7:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1079:6:9",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "1087:6:9",
								"type": ""
							}
						],
						"src": "1011:264:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1381:102:9",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1391:26:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1403:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1414:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1399:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1399:18:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1391:4:9"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1433:9:9"
											},
											{
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1448:6:9"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1464:3:9",
																		"type": "",
																		"value": "160"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1469:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:11:9"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1473:1:9",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1456:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "1456:19:9"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "1444:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1444:32:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1426:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1426:51:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1426:51:9"
								}
							]
						},
						"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1350:9:9",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1361:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1372:4:9",
								"type": ""
							}
						],
						"src": "1280:203:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1583:92:9",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1593:26:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1605:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1616:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1601:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1601:18:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1593:4:9"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1635:9:9"
											},
											{
												"arguments": [
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1660:6:9"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "1653:6:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "1653:14:9"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1646:6:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1646:22:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1628:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1628:41:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1628:41:9"
								}
							]
						},
						"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1552:9:9",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1563:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1574:4:9",
								"type": ""
							}
						],
						"src": "1488:187:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1801:482:9",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1811:12:9",
									"value": {
										"kind": "number",
										"nodeType": "YulLiteral",
										"src": "1821:2:9",
										"type": "",
										"value": "32"
									},
									"variables": [
										{
											"name": "_1",
											"nodeType": "YulTypedName",
											"src": "1815:2:9",
											"type": ""
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1839:9:9"
											},
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "1850:2:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1832:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1832:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1832:21:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1862:27:9",
									"value": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1882:6:9"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "1876:5:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1876:13:9"
									},
									"variables": [
										{
											"name": "length",
											"nodeType": "YulTypedName",
											"src": "1866:6:9",
											"type": ""
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1909:9:9"
													},
													{
														"name": "_1",
														"nodeType": "YulIdentifier",
														"src": "1920:2:9"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1905:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "1905:18:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1925:6:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1898:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1898:34:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1898:34:9"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1941:13:9",
									"value": {
										"name": "tail",
										"nodeType": "YulIdentifier",
										"src": "1950:4:9"
									},
									"variables": [
										{
											"name": "i",
											"nodeType": "YulTypedName",
											"src": "1945:1:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2013:90:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "headStart",
																			"nodeType": "YulIdentifier",
																			"src": "2042:9:9"
																		},
																		{
																			"name": "i",
																			"nodeType": "YulIdentifier",
																			"src": "2053:1:9"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "2038:3:9"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2038:17:9"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2057:2:9",
																	"type": "",
																	"value": "64"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2034:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "2034:26:9"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2076:6:9"
																				},
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2084:1:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2072:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2072:14:9"
																		},
																		{
																			"name": "_1",
																			"nodeType": "YulIdentifier",
																			"src": "2088:2:9"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:9"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2068:23:9"
																}
															],
															"functionName": {
																"name": "mload",
																"nodeType": "YulIdentifier",
																"src": "2062:5:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "2062:30:9"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2027:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "2027:66:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2027:66:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "1974:1:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1977:6:9"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "1971:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "1971:13:9"
									},
									"nodeType": "YulForLoop",
									"post": {
										"nodeType": "YulBlock",
										"src": "1985:19:9",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "1987:15:9",
												"value": {
													"arguments": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "1996:1:9"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "1999:2:9"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1992:3:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "1992:10:9"
												},
												"variableNames": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
														"src": "1987:1:9"
													}
												]
											}
										]
									},
									"pre": {
										"nodeType": "YulBlock",
										"src": "1967:3:9",
										"statements": []
									},
									"src": "1963:140:9"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2137:69:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "headStart",
																			"nodeType": "YulIdentifier",
																			"src": "2166:9:9"
																		},
																		{
																			"name": "length",
																			"nodeType": "YulIdentifier",
																			"src": "2177:6:9"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "2162:3:9"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2162:22:9"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2186:2:9",
																	"type": "",
																	"value": "64"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2158:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "2158:31:9"
														},
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "2191:4:9"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2151:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "2151:45:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2151:45:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "2118:1:9"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "2121:6:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "2115:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2115:13:9"
									},
									"nodeType": "YulIf",
									"src": "2112:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2215:62:9",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2231:9:9"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2250:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2258:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2246:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2246:15:9"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2263:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:7:9"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "2242:3:9"
														},
														"nodeType": "YulFunctionCall",
														"src": "2242:29:9"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2227:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2227:45:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2274:2:9",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2223:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2223:54:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "2215:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1770:9:9",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1781:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1792:4:9",
								"type": ""
							}
						],
						"src": "1680:603:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2462:225:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2479:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2490:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2472:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2472:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2472:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2513:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2524:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2509:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2509:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2529:2:9",
												"type": "",
												"value": "35"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2502:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2502:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2502:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2552:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2563:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2548:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2548:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2568:34:9",
												"type": "",
												"value": "ERC20: transfer to the zero addr"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2541:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2541:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2541:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2623:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2634:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2619:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2619:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2639:5:9",
												"type": "",
												"value": "ess"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2612:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2612:33:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2612:33:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2654:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2666:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2677:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2662:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2662:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "2654:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "2439:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "2453:4:9",
								"type": ""
							}
						],
						"src": "2288:399:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2866:224:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2883:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2894:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2876:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2876:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2876:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2917:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2928:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2913:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2913:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2933:2:9",
												"type": "",
												"value": "34"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2906:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2906:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2906:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2956:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2967:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2952:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "2952:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2972:34:9",
												"type": "",
												"value": "ERC20: approve to the zero addre"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2945:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "2945:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2945:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3027:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3038:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3023:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "3023:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3043:4:9",
												"type": "",
												"value": "ss"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3016:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3016:32:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3016:32:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3057:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3069:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3080:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3065:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3065:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3057:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "2843:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "2857:4:9",
								"type": ""
							}
						],
						"src": "2692:398:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3269:228:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3286:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3297:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3279:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3279:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3279:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3320:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3331:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3316:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "3316:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3336:2:9",
												"type": "",
												"value": "38"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3309:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3309:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3309:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3359:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3370:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3355:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "3355:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3375:34:9",
												"type": "",
												"value": "ERC20: transfer amount exceeds b"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3348:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3348:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3348:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3430:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3441:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3426:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "3426:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3446:8:9",
												"type": "",
												"value": "alance"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3419:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3419:36:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3419:36:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3464:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3476:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3487:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3472:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3472:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3464:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3246:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3260:4:9",
								"type": ""
							}
						],
						"src": "3095:402:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3676:230:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3693:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3704:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3686:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3686:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3686:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3727:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3738:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3723:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "3723:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3743:2:9",
												"type": "",
												"value": "40"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3716:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3716:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3716:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3766:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3777:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3762:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "3762:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3782:34:9",
												"type": "",
												"value": "ERC20: transfer amount exceeds a"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3755:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3755:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3755:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3837:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3848:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3833:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "3833:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3853:10:9",
												"type": "",
												"value": "llowance"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3826:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3826:38:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3826:38:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3873:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3885:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3896:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3881:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "3881:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3873:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3653:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3667:4:9",
								"type": ""
							}
						],
						"src": "3502:404:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4085:227:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4102:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4113:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4095:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4095:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4095:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4136:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4147:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4132:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "4132:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4152:2:9",
												"type": "",
												"value": "37"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4125:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4125:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4125:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4175:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4186:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4171:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "4171:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "4191:34:9",
												"type": "",
												"value": "ERC20: transfer from the zero ad"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4164:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4164:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4164:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4246:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4257:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4242:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "4242:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "4262:7:9",
												"type": "",
												"value": "dress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4235:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4235:35:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4235:35:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4279:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4291:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4302:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4287:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4287:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4279:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4062:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4076:4:9",
								"type": ""
							}
						],
						"src": "3911:401:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4491:226:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4508:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4519:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4501:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4501:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4501:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4542:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4553:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4538:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "4538:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4558:2:9",
												"type": "",
												"value": "36"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4531:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4531:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4531:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4581:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4592:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4577:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "4577:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "4597:34:9",
												"type": "",
												"value": "ERC20: approve from the zero add"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4570:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4570:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4570:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4652:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4663:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4648:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "4648:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "4668:6:9",
												"type": "",
												"value": "ress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4641:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4641:34:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4641:34:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4684:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4696:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4707:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4692:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4692:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4684:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4468:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4482:4:9",
								"type": ""
							}
						],
						"src": "4317:400:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4896:227:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4913:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4924:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4906:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4906:21:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4906:21:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4947:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4958:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4943:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "4943:18:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4963:2:9",
												"type": "",
												"value": "37"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4936:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4936:30:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4936:30:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4986:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4997:2:9",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4982:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "4982:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "5002:34:9",
												"type": "",
												"value": "ERC20: decreased allowance below"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4975:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "4975:62:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4975:62:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5057:9:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5068:2:9",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5053:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "5053:18:9"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "5073:7:9",
												"type": "",
												"value": " zero"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5046:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5046:35:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5046:35:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5090:27:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5102:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5113:3:9",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5098:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5098:19:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5090:4:9"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4873:9:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4887:4:9",
								"type": ""
							}
						],
						"src": "4722:401:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5229:76:9",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5239:26:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5251:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5262:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5247:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5247:18:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5239:4:9"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5281:9:9"
											},
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5292:6:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5274:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5274:25:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5274:25:9"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5198:9:9",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "5209:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5220:4:9",
								"type": ""
							}
						],
						"src": "5128:177:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5407:87:9",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5417:26:9",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5429:9:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5440:2:9",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5425:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5425:18:9"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5417:4:9"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5459:9:9"
											},
											{
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "5474:6:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5482:4:9",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "5470:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "5470:17:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5452:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5452:36:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5452:36:9"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5376:9:9",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "5387:6:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5398:4:9",
								"type": ""
							}
						],
						"src": "5310:184:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5547:80:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "5574:22:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "5576:16:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "5576:18:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "5576:18:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5563:1:9"
											},
											{
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "5570:1:9"
													}
												],
												"functionName": {
													"name": "not",
													"nodeType": "YulIdentifier",
													"src": "5566:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "5566:6:9"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "5560:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5560:13:9"
									},
									"nodeType": "YulIf",
									"src": "5557:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5605:16:9",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5616:1:9"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5619:1:9"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5612:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5612:9:9"
									},
									"variableNames": [
										{
											"name": "sum",
											"nodeType": "YulIdentifier",
											"src": "5605:3:9"
										}
									]
								}
							]
						},
						"name": "checked_add_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "5530:1:9",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "5533:1:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "sum",
								"nodeType": "YulTypedName",
								"src": "5539:3:9",
								"type": ""
							}
						],
						"src": "5499:128:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5681:76:9",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "5703:22:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "5705:16:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "5705:18:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "5705:18:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5697:1:9"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5700:1:9"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "5694:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5694:8:9"
									},
									"nodeType": "YulIf",
									"src": "5691:2:9"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5734:17:9",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5746:1:9"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5749:1:9"
											}
										],
										"functionName": {
											"name": "sub",
											"nodeType": "YulIdentifier",
											"src": "5742:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5742:9:9"
									},
									"variableNames": [
										{
											"name": "diff",
											"nodeType": "YulIdentifier",
											"src": "5734:4:9"
										}
									]
								}
							]
						},
						"name": "checked_sub_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "5663:1:9",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "5666:1:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "diff",
								"nodeType": "YulTypedName",
								"src": "5672:4:9",
								"type": ""
							}
						],
						"src": "5632:125:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5817:325:9",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5827:22:9",
									"value": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5841:1:9",
												"type": "",
												"value": "1"
											},
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "5844:4:9"
											}
										],
										"functionName": {
											"name": "shr",
											"nodeType": "YulIdentifier",
											"src": "5837:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5837:12:9"
									},
									"variableNames": [
										{
											"name": "length",
											"nodeType": "YulIdentifier",
											"src": "5827:6:9"
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "5858:38:9",
									"value": {
										"arguments": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "5888:4:9"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5894:1:9",
												"type": "",
												"value": "1"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "5884:3:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5884:12:9"
									},
									"variables": [
										{
											"name": "outOfPlaceEncoding",
											"nodeType": "YulTypedName",
											"src": "5862:18:9",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "5935:31:9",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "5937:27:9",
												"value": {
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "5951:6:9"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5959:4:9",
															"type": "",
															"value": "0x7f"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "5947:3:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "5947:17:9"
												},
												"variableNames": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "5937:6:9"
													}
												]
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "5915:18:9"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "5908:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5908:26:9"
									},
									"nodeType": "YulIf",
									"src": "5905:2:9"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "6025:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6046:1:9",
															"type": "",
															"value": "0"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6053:3:9",
																	"type": "",
																	"value": "224"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6058:10:9",
																	"type": "",
																	"value": "0x4e487b71"
																}
															],
															"functionName": {
																"name": "shl",
																"nodeType": "YulIdentifier",
																"src": "6049:3:9"
															},
															"nodeType": "YulFunctionCall",
															"src": "6049:20:9"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "6039:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "6039:31:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6039:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6090:1:9",
															"type": "",
															"value": "4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6093:4:9",
															"type": "",
															"value": "0x22"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "6083:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "6083:15:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6083:15:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6118:1:9",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6121:4:9",
															"type": "",
															"value": "0x24"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "6111:6:9"
													},
													"nodeType": "YulFunctionCall",
													"src": "6111:15:9"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6111:15:9"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "5981:18:9"
											},
											{
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "6004:6:9"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6012:2:9",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "6001:2:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "6001:14:9"
											}
										],
										"functionName": {
											"name": "eq",
											"nodeType": "YulIdentifier",
											"src": "5978:2:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "5978:38:9"
									},
									"nodeType": "YulIf",
									"src": "5975:2:9"
								}
							]
						},
						"name": "extract_byte_array_length",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "data",
								"nodeType": "YulTypedName",
								"src": "5797:4:9",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "5806:6:9",
								"type": ""
							}
						],
						"src": "5762:380:9"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6179:95:9",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6196:1:9",
												"type": "",
												"value": "0"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6203:3:9",
														"type": "",
														"value": "224"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6208:10:9",
														"type": "",
														"value": "0x4e487b71"
													}
												],
												"functionName": {
													"name": "shl",
													"nodeType": "YulIdentifier",
													"src": "6199:3:9"
												},
												"nodeType": "YulFunctionCall",
												"src": "6199:20:9"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6189:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "6189:31:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6189:31:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6236:1:9",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6239:4:9",
												"type": "",
												"value": "0x11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6229:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "6229:15:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6229:15:9"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6260:1:9",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6263:4:9",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "6253:6:9"
										},
										"nodeType": "YulFunctionCall",
										"src": "6253:15:9"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6253:15:9"
								}
							]
						},
						"name": "panic_error_0x11",
						"nodeType": "YulFunctionDefinition",
						"src": "6147:127:9"
					}
				]
			},
			"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
			"id": 9,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "6208:8606:3:-:0;;;6743:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6839:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6856:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;6877:16:3;:36;;-1:-1:-1;;;;;;6877:36:3;-1:-1:-1;;;;;6877:36:3;;;;;;;;;;-1:-1:-1;6208:8606:3;;-1:-1:-1;6208:8606:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6208:8606:3;;;-1:-1:-1;6208:8606:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:9;;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:9;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:9;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:9:o;928:769::-;;;;1105:2;1093:9;1084:7;1080:23;1076:32;1073:2;;;1126:6;1118;1111:22;1073:2;1158:16;;-1:-1:-1;;;;;1223:14:9;;;1220:2;;;1255:6;1247;1240:22;1220:2;1283:61;1336:7;1327:6;1316:9;1312:22;1283:61;:::i;:::-;1273:71;;1390:2;1379:9;1375:18;1369:25;1353:41;;1419:2;1409:8;1406:16;1403:2;;;1440:6;1432;1425:22;1403:2;;1468:63;1523:7;1512:8;1501:9;1497:24;1468:63;:::i;:::-;1574:2;1559:18;;1553:25;1458:73;;-1:-1:-1;1553:25:9;-1:-1:-1;;;;;;1607:31:9;;1597:42;;1587:2;;1658:6;1650;1643:22;1587:2;1686:5;1676:15;;;1063:634;;;;;:::o;1702:380::-;1781:1;1777:12;;;;1824;;;1845:2;;1899:4;1891:6;1887:17;1877:27;;1845:2;1952;1944:6;1941:14;1921:18;1918:38;1915:2;;;1998:10;1993:3;1989:20;1986:1;1979:31;2033:4;2030:1;2023:15;2061:4;2058:1;2051:15;1915:2;;1757:325;;;:::o;2087:127::-;2148:10;2143:3;2139:20;2136:1;2129:31;2179:4;2176:1;2169:15;2203:4;2200:1;2193:15;2119:95;6208:8606:3;;;;;;",
	"deployedSourceMap": "6208:8606:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6970:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8923:151;;;;;;:::i;:::-;;:::i;:::-;;;1653:14:9;;1646:22;1628:41;;1616:2;1601:18;8923:151:3;1583:92:9;7935:97:3;8016:12;;7935:97;;;5274:25:9;;;5262:2;5247:18;7935:97:3;5229:76:9;9499:390:3;;;;;;:::i;:::-;;:::i;7814:73::-;;;7881:2;5452:36:9;;5440:2;5425:18;7814:73:3;5407:87:9;10245:197:3;;;;;;:::i;:::-;;:::i;8530:93::-;8609:10;;;;;;;;;;;;-1:-1:-1;;;8609:10:3;;;;8530:93;;1497:127;;;;;;:::i;:::-;;:::i;8078:116::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8172:18:3;8152:7;8172:18;;;:9;:18;;;;;;;8078:116;1243:31;;;;;-1:-1:-1;;;;;1243:31:3;;;;;;-1:-1:-1;;;;;1444:32:9;;;1426:51;;1414:2;1399:18;1243:31:3;1381:102:9;7148:84:3;;;:::i;10884:344::-;;;;;;:::i;:::-;;:::i;8370:157::-;;;;;;:::i;:::-;;:::i;8669:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8778:18:3;;;8758:7;8778:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8669:140;6970:80;7015:13;7041:5;7034:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6970:80;;:::o;8923:151::-;9006:4;9016:39;9025:12;:10;:12::i;:::-;9039:7;9048:6;9016:8;:39::i;:::-;-1:-1:-1;9066:4:3;8923:151;;;;:::o;9499:390::-;9614:4;9624:36;9634:6;9642:9;9653:6;9624:9;:36::i;:::-;-1:-1:-1;;;;;9692:19:3;;9665:24;9692:19;;;:11;:19;;;;;9665:24;9712:12;:10;:12::i;:::-;-1:-1:-1;;;;;9692:33:3;-1:-1:-1;;;;;9692:33:3;;;;;;;;;;;;;9665:60;;9757:6;9737:16;:26;;9729:79;;;;-1:-1:-1;;;9729:79:3;;3704:2:9;9729:79:3;;;3686:21:9;3743:2;3723:18;;;3716:30;3782:34;3762:18;;;3755:62;-1:-1:-1;;;3833:18:9;;;3826:38;3881:19;;9729:79:3;;;;;;;;;9812:57;9821:6;9829:12;:10;:12::i;:::-;9843:25;9862:6;9843:16;:25;:::i;:::-;9812:8;:57::i;:::-;-1:-1:-1;9881:4:3;;9499:390;-1:-1:-1;;;;9499:390:3:o;10245:197::-;10333:4;10343:80;10352:12;:10;:12::i;:::-;10366:7;10412:10;10375:11;:25;10387:12;:10;:12::i;:::-;-1:-1:-1;;;;;10375:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;10375:25:3;;;:34;;;;;;;;;;:47;;;;:::i;1497:127::-;1574:4;1604:16;-1:-1:-1;;;;;1591:29:3;;;1604:16;;1591:29;1497:127;;;;:::o;7148:84::-;7195:13;7221:7;7214:14;;;;;:::i;10884:344::-;10977:4;10987:24;11014:11;:25;11026:12;:10;:12::i;:::-;-1:-1:-1;;;;;11014:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;11014:25:3;;;:34;;;;;;;;;;;-1:-1:-1;11060:35:3;;;;11052:85;;;;-1:-1:-1;;;11052:85:3;;4924:2:9;11052:85:3;;;4906:21:9;4963:2;4943:18;;;4936:30;5002:34;4982:18;;;4975:62;-1:-1:-1;;;5053:18:9;;;5046:35;5098:19;;11052:85:3;4896:227:9;11052:85:3;11141:67;11150:12;:10;:12::i;:::-;11164:7;11173:34;11192:15;11173:16;:34;:::i;11141:67::-;-1:-1:-1;11220:4:3;;10884:344;-1:-1:-1;;;10884:344:3:o;8370:157::-;8456:4;8466:42;8476:12;:10;:12::i;:::-;8490:9;8501:6;8466:9;:42::i;1855:471::-;1908:19;1956:2;1937:8;:21;;;;:55;;;1962:30;1981:10;1962:18;:30::i;:::-;1933:390;;;-1:-1:-1;;;2251:14:3;2247:23;2234:37;2230:2;2226:46;2213:64;;;-1:-1:-1;2307:10:3;2292:26;;13848:322;-1:-1:-1;;;;;13952:19:3;;13944:68;;;;-1:-1:-1;;;13944:68:3;;4519:2:9;13944:68:3;;;4501:21:9;4558:2;4538:18;;;4531:30;4597:34;4577:18;;;4570:62;-1:-1:-1;;;4648:18:9;;;4641:34;4692:19;;13944:68:3;4491:226:9;13944:68:3;-1:-1:-1;;;;;14024:21:3;;14016:68;;;;-1:-1:-1;;;14016:68:3;;2894:2:9;14016:68:3;;;2876:21:9;2933:2;2913:18;;;2906:30;2972:34;2952:18;;;2945:62;-1:-1:-1;;;3023:18:9;;;3016:32;3065:19;;14016:68:3;2866:224:9;14016:68:3;-1:-1:-1;;;;;14089:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14134:32;;5274:25:9;;;14134:32:3;;5247:18:9;14134:32:3;;;;;;;13848:322;;;:::o;11657:550::-;-1:-1:-1;;;;;11765:20:3;;11757:70;;;;-1:-1:-1;;;11757:70:3;;4113:2:9;11757:70:3;;;4095:21:9;4152:2;4132:18;;;4125:30;4191:34;4171:18;;;4164:62;-1:-1:-1;;;4242:18:9;;;4235:35;4287:19;;11757:70:3;4085:227:9;11757:70:3;-1:-1:-1;;;;;11839:23:3;;11831:71;;;;-1:-1:-1;;;11831:71:3;;2490:2:9;11831:71:3;;;2472:21:9;2529:2;2509:18;;;2502:30;2568:34;2548:18;;;2541:62;-1:-1:-1;;;2619:18:9;;;2612:33;2662:19;;11831:71:3;2462:225:9;11831:71:3;-1:-1:-1;;;;;11983:17:3;;11959:21;11983:17;;;:9;:17;;;;;;12012:23;;;;12004:74;;;;-1:-1:-1;;;12004:74:3;;3297:2:9;12004:74:3;;;3279:21:9;3336:2;3316:18;;;3309:30;3375:34;3355:18;;;3348:62;-1:-1:-1;;;3426:18:9;;;3419:36;3472:19;;12004:74:3;3269:228:9;12004:74:3;12102:22;12118:6;12102:13;:22;:::i;:::-;-1:-1:-1;;;;;12082:17:3;;;;;;;:9;:17;;;;;;:42;;;;12128:20;;;;;;;;:30;;12152:6;;12082:17;12128:30;;12152:6;;12128:30;:::i;:::-;;;;;;;;12185:9;-1:-1:-1;;;;;12168:35:3;12177:6;-1:-1:-1;;;;;12168:35:3;;12196:6;12168:35;;;;5274:25:9;;5262:2;5247:18;;5229:76;12168:35:3;;;;;;;;11657:550;;;;:::o;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:9:o;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:9:o;1680:603::-;;1821:2;1850;1839:9;1832:21;1882:6;1876:13;1925:6;1920:2;1909:9;1905:18;1898:34;1950:4;1963:140;1977:6;1974:1;1971:13;1963:140;;;2072:14;;;2068:23;;2062:30;2038:17;;;2057:2;2034:26;2027:66;1992:10;;1963:140;;;2121:6;2118:1;2115:13;2112:2;;;2191:4;2186:2;2177:6;2166:9;2162:22;2158:31;2151:45;2112:2;-1:-1:-1;2267:2:9;2246:15;-1:-1:-1;;2242:29:9;2227:45;;;;2274:2;2223:54;;1801:482;-1:-1:-1;;;1801:482:9:o;5499:128::-;;5570:1;5566:6;5563:1;5560:13;5557:2;;;5576:18;;:::i;:::-;-1:-1:-1;5612:9:9;;5547:80::o;5632:125::-;;5700:1;5697;5694:8;5691:2;;;5705:18;;:::i;:::-;-1:-1:-1;5742:9:9;;5681:76::o;5762:380::-;5841:1;5837:12;;;;5884;;;5905:2;;5959:4;5951:6;5947:17;5937:27;;5905:2;6012;6004:6;6001:14;5981:18;5978:38;5975:2;;;6058:10;6053:3;6049:20;6046:1;6039:31;6093:4;6090:1;6083:15;6121:4;6118:1;6111:15;5975:2;;5817:325;;;:::o;6147:127::-;6208:10;6203:3;6199:20;6196:1;6189:31;6239:4;6236:1;6229:15;6263:4;6260:1;6253:15",
	"source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * a contract must implement this interface in order to support relayed transaction.\n * It is better to inherit the BaseRelayRecipient as its implementation.\n */\nabstract contract IRelayRecipient {\n\t/**\n\t * return if the forwarder is trusted to forward relayed transactions to us.\n\t * the forwarder is required to verify the sender's signature, and verify\n\t * the call is not a replay.\n\t */\n\tfunction isTrustedForwarder(address forwarder) public view virtual returns (bool);\n\n\t/**\n\t * return the sender of this call.\n\t * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n\t * of the msg.data.\n\t * otherwise, return `msg.sender`\n\t * should be used in the contract anywhere instead of msg.sender\n\t */\n\t// function _msgSender() internal view virtual returns (address payable);\n\n\tfunction versionRecipient() external view virtual returns (string memory);\n}\n\n/**\n * A base contract to be inherited by any contract that want to receive relayed transactions\n * A subclass must use \"_msgSender()\" instead of \"msg.sender\"\n */\nabstract contract BaseRelayRecipient is IRelayRecipient {\n\t/*\n\t * Forwarder singleton we accept calls from\n\t */\n\taddress public trustedForwarder;\n\n\t/*\n\t * require a function to be called through GSN only\n\t */\n\tmodifier trustedForwarderOnly() {\n\t\trequire(msg.sender == address(trustedForwarder), 'Function can only be called through the trusted Forwarder');\n\t\t_;\n\t}\n\n\tfunction isTrustedForwarder(address forwarder) public view override returns (bool) {\n\t\treturn forwarder == trustedForwarder;\n\t}\n\n\t/**\n\t * return the sender of this call.\n\t * if the call came through our trusted forwarder, return the original sender.\n\t * otherwise, return `msg.sender`.\n\t * should be used in the contract anywhere instead of msg.sender\n\t */\n\tfunction _msgSender() internal view virtual returns (address payable ret) {\n\t\tif (msg.data.length >= 24 && isTrustedForwarder(msg.sender)) {\n\t\t\t// At this point we know that the sender is a trusted forwarder,\n\t\t\t// so we trust that the last bytes of msg.data are the verified sender address.\n\t\t\t// extract sender address from the end of msg.data\n\t\t\tassembly {\n\t\t\t\tret := shr(96, calldataload(sub(calldatasize(), 20)))\n\t\t\t}\n\t\t} else {\n\t\t\treturn payable(msg.sender);\n\t\t}\n\t}\n}\n\nabstract contract Context {\n\tfunction _msgData() internal view virtual returns (bytes calldata) {\n\t\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n\t\treturn msg.data;\n\t}\n}\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n\t/**\n\t * @dev Returns the amount of tokens in existence.\n\t */\n\tfunction totalSupply() external view returns (uint256);\n\n\t/**\n\t * @dev Returns the amount of tokens owned by `account`.\n\t */\n\tfunction balanceOf(address account) external view returns (uint256);\n\n\t/**\n\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\n\t *\n\t * Returns a boolean value indicating whether the operation succeeded.\n\t *\n\t * Emits a {Transfer} event.\n\t */\n\tfunction transfer(address recipient, uint256 amount) external returns (bool);\n\n\t/**\n\t * @dev Returns the remaining number of tokens that `spender` will be\n\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\n\t * zero by default.\n\t *\n\t * This value changes when {approve} or {transferFrom} are called.\n\t */\n\tfunction allowance(address owner, address spender) external view returns (uint256);\n\n\t/**\n\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\t *\n\t * Returns a boolean value indicating whether the operation succeeded.\n\t *\n\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\n\t * that someone may use both the old and the new allowance by unfortunate\n\t * transaction ordering. One possible solution to mitigate this race\n\t * condition is to first reduce the spender's allowance to 0 and set the\n\t * desired value afterwards:\n\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\t *\n\t * Emits an {Approval} event.\n\t */\n\tfunction approve(address spender, uint256 amount) external returns (bool);\n\n\t/**\n\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\n\t * allowance mechanism. `amount` is then deducted from the caller's\n\t * allowance.\n\t *\n\t * Returns a boolean value indicating whether the operation succeeded.\n\t *\n\t * Emits a {Transfer} event.\n\t */\n\tfunction transferFrom(\n\t\taddress sender,\n\t\taddress recipient,\n\t\tuint256 amount\n\t) external returns (bool);\n\n\t/**\n\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\n\t * another (`to`).\n\t *\n\t * Note that `value` may be zero.\n\t */\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\n\n\t/**\n\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n\t * a call to {approve}. `value` is the new allowance.\n\t */\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, BaseRelayRecipient {\n\tmapping(address => uint256) private _balances;\n\n\tmapping(address => mapping(address => uint256)) private _allowances;\n\n\tuint256 private _totalSupply;\n\n\tstring private _name;\n\tstring private _symbol;\n\n\t/**\n\t * @dev Sets the values for {name} and {symbol}.\n\t *\n\t * The defaut value of {decimals} is 18. To select a different value for\n\t * {decimals} you should overload it.\n\t *\n\t * All three of these values are immutable: they can only be set once during\n\t * construction.\n\t */\n\tconstructor(\n\t\tstring memory name_,\n\t\tstring memory symbol_,\n\t\taddress _trustedForwarder\n\t) {\n\t\t_name = name_;\n\t\t_symbol = symbol_;\n\t\ttrustedForwarder = _trustedForwarder;\n\t}\n\n\t/**\n\t * @dev Returns the name of the token.\n\t */\n\tfunction name() public view virtual returns (string memory) {\n\t\treturn _name;\n\t}\n\n\t/**\n\t * @dev Returns the symbol of the token, usually a shorter version of the\n\t * name.\n\t */\n\tfunction symbol() public view virtual returns (string memory) {\n\t\treturn _symbol;\n\t}\n\n\t/**\n\t * @dev Returns the number of decimals used to get its user representation.\n\t * For example, if `decimals` equals `2`, a balance of `505` tokens should\n\t * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n\t *\n\t * Tokens usually opt for a value of 18, imitating the relationship between\n\t * Ether and Wei. This is the value {ERC20} uses, unless this function is\n\t * overloaded;\n\t *\n\t * NOTE: This information is only used for _display_ purposes: it in\n\t * no way affects any of the arithmetic of the contract, including\n\t * {IERC20-balanceOf} and {IERC20-transfer}.\n\t */\n\tfunction decimals() public view virtual returns (uint8) {\n\t\treturn 18;\n\t}\n\n\t/**\n\t * @dev See {IERC20-totalSupply}.\n\t */\n\tfunction totalSupply() public view virtual override returns (uint256) {\n\t\treturn _totalSupply;\n\t}\n\n\t/**\n\t * @dev See {IERC20-balanceOf}.\n\t */\n\tfunction balanceOf(address account) public view virtual override returns (uint256) {\n\t\treturn _balances[account];\n\t}\n\n\t/**\n\t * @dev See {IERC20-transfer}.\n\t *\n\t * Requirements:\n\t *\n\t * - `recipient` cannot be the zero address.\n\t * - the caller must have a balance of at least `amount`.\n\t */\n\tfunction transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n\t\t_transfer(_msgSender(), recipient, amount);\n\t\treturn true;\n\t}\n\n\tfunction versionRecipient() external pure override returns (string memory) {\n\t\treturn '1';\n\t}\n\n\t/**\n\t * @dev See {IERC20-allowance}.\n\t */\n\tfunction allowance(address owner, address spender) public view virtual override returns (uint256) {\n\t\treturn _allowances[owner][spender];\n\t}\n\n\t/**\n\t * @dev See {IERC20-approve}.\n\t *\n\t * Requirements:\n\t *\n\t * - `spender` cannot be the zero address.\n\t */\n\tfunction approve(address spender, uint256 amount) public virtual override returns (bool) {\n\t\t_approve(_msgSender(), spender, amount);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev See {IERC20-transferFrom}.\n\t *\n\t * Emits an {Approval} event indicating the updated allowance. This is not\n\t * required by the EIP. See the note at the beginning of {ERC20}.\n\t *\n\t * Requirements:\n\t *\n\t * - `sender` and `recipient` cannot be the zero address.\n\t * - `sender` must have a balance of at least `amount`.\n\t * - the caller must have allowance for ``sender``'s tokens of at least\n\t * `amount`.\n\t */\n\tfunction transferFrom(\n\t\taddress sender,\n\t\taddress recipient,\n\t\tuint256 amount\n\t) public virtual override returns (bool) {\n\t\t_transfer(sender, recipient, amount);\n\n\t\tuint256 currentAllowance = _allowances[sender][_msgSender()];\n\t\trequire(currentAllowance >= amount, 'ERC20: transfer amount exceeds allowance');\n\t\t_approve(sender, _msgSender(), currentAllowance - amount);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Atomically increases the allowance granted to `spender` by the caller.\n\t *\n\t * This is an alternative to {approve} that can be used as a mitigation for\n\t * problems described in {IERC20-approve}.\n\t *\n\t * Emits an {Approval} event indicating the updated allowance.\n\t *\n\t * Requirements:\n\t *\n\t * - `spender` cannot be the zero address.\n\t */\n\tfunction increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n\t\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Atomically decreases the allowance granted to `spender` by the caller.\n\t *\n\t * This is an alternative to {approve} that can be used as a mitigation for\n\t * problems described in {IERC20-approve}.\n\t *\n\t * Emits an {Approval} event indicating the updated allowance.\n\t *\n\t * Requirements:\n\t *\n\t * - `spender` cannot be the zero address.\n\t * - `spender` must have allowance for the caller of at least\n\t * `subtractedValue`.\n\t */\n\tfunction decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n\t\tuint256 currentAllowance = _allowances[_msgSender()][spender];\n\t\trequire(currentAllowance >= subtractedValue, 'ERC20: decreased allowance below zero');\n\t\t_approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Moves tokens `amount` from `sender` to `recipient`.\n\t *\n\t * This is internal function is equivalent to {transfer}, and can be used to\n\t * e.g. implement automatic token fees, slashing mechanisms, etc.\n\t *\n\t * Emits a {Transfer} event.\n\t *\n\t * Requirements:\n\t *\n\t * - `sender` cannot be the zero address.\n\t * - `recipient` cannot be the zero address.\n\t * - `sender` must have a balance of at least `amount`.\n\t */\n\tfunction _transfer(\n\t\taddress sender,\n\t\taddress recipient,\n\t\tuint256 amount\n\t) internal virtual {\n\t\trequire(sender != address(0), 'ERC20: transfer from the zero address');\n\t\trequire(recipient != address(0), 'ERC20: transfer to the zero address');\n\n\t\t_beforeTokenTransfer(sender, recipient, amount);\n\n\t\tuint256 senderBalance = _balances[sender];\n\t\trequire(senderBalance >= amount, 'ERC20: transfer amount exceeds balance');\n\t\t_balances[sender] = senderBalance - amount;\n\t\t_balances[recipient] += amount;\n\n\t\temit Transfer(sender, recipient, amount);\n\t}\n\n\t/** @dev Creates `amount` tokens and assigns them to `account`, increasing\n\t * the total supply.\n\t *\n\t * Emits a {Transfer} event with `from` set to the zero address.\n\t *\n\t * Requirements:\n\t *\n\t * - `to` cannot be the zero address.\n\t */\n\tfunction _mint(address account, uint256 amount) internal virtual {\n\t\trequire(account != address(0), 'ERC20: mint to the zero address');\n\n\t\t_beforeTokenTransfer(address(0), account, amount);\n\n\t\t_totalSupply += amount;\n\t\t_balances[account] += amount;\n\t\temit Transfer(address(0), account, amount);\n\t}\n\n\t/**\n\t * @dev Destroys `amount` tokens from `account`, reducing the\n\t * total supply.\n\t *\n\t * Emits a {Transfer} event with `to` set to the zero address.\n\t *\n\t * Requirements:\n\t *\n\t * - `account` cannot be the zero address.\n\t * - `account` must have at least `amount` tokens.\n\t */\n\tfunction _burn(address account, uint256 amount) internal virtual {\n\t\trequire(account != address(0), 'ERC20: burn from the zero address');\n\n\t\t_beforeTokenTransfer(account, address(0), amount);\n\n\t\tuint256 accountBalance = _balances[account];\n\t\trequire(accountBalance >= amount, 'ERC20: burn amount exceeds balance');\n\t\t_balances[account] = accountBalance - amount;\n\t\t_totalSupply -= amount;\n\n\t\temit Transfer(account, address(0), amount);\n\t}\n\n\t/**\n\t * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n\t *\n\t * This internal function is equivalent to `approve`, and can be used to\n\t * e.g. set automatic allowances for certain subsystems, etc.\n\t *\n\t * Emits an {Approval} event.\n\t *\n\t * Requirements:\n\t *\n\t * - `owner` cannot be the zero address.\n\t * - `spender` cannot be the zero address.\n\t */\n\tfunction _approve(\n\t\taddress owner,\n\t\taddress spender,\n\t\tuint256 amount\n\t) internal virtual {\n\t\trequire(owner != address(0), 'ERC20: approve from the zero address');\n\t\trequire(spender != address(0), 'ERC20: approve to the zero address');\n\n\t\t_allowances[owner][spender] = amount;\n\t\temit Approval(owner, spender, amount);\n\t}\n\n\t/**\n\t * @dev Hook that is called before any transfer of tokens. This includes\n\t * minting and burning.\n\t *\n\t * Calling conditions:\n\t *\n\t * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n\t * will be to transferred to `to`.\n\t * - when `from` is zero, `amount` tokens will be minted for `to`.\n\t * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n\t * - `from` and `to` are never both zero.\n\t *\n\t * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n\t */\n\tfunction _beforeTokenTransfer(\n\t\taddress from,\n\t\taddress to,\n\t\tuint256 amount\n\t) internal virtual {}\n}\n",
	"sourcePath": "/workecn/contracts/contracts/3_ERC20.sol",
	"ast": {
		"absolutePath": "/workecn/contracts/contracts/3_ERC20.sol",
		"exportedSymbols": {
			"BaseRelayRecipient": [799],
			"Context": [811],
			"ERC20": [1401],
			"IERC20": [887],
			"IRelayRecipient": [738]
		},
		"id": 1402,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 722,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "33:23:3"
			},
			{
				"abstract": true,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"documentation": {
					"id": 723,
					"nodeType": "StructuredDocumentation",
					"src": "58:165:3",
					"text": " a contract must implement this interface in order to support relayed transaction.\n It is better to inherit the BaseRelayRecipient as its implementation."
				},
				"fullyImplemented": false,
				"id": 738,
				"linearizedBaseContracts": [738],
				"name": "IRelayRecipient",
				"nameLocation": "242:15:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"documentation": {
							"id": 724,
							"nodeType": "StructuredDocumentation",
							"src": "261:191:3",
							"text": " return if the forwarder is trusted to forward relayed transactions to us.\n the forwarder is required to verify the sender's signature, and verify\n the call is not a replay."
						},
						"functionSelector": "572b6c05",
						"id": 731,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "isTrustedForwarder",
						"nameLocation": "463:18:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 727,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 726,
									"mutability": "mutable",
									"name": "forwarder",
									"nameLocation": "490:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 731,
									"src": "482:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 725,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "482:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "481:19:3"
						},
						"returnParameters": {
							"id": 730,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 729,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 731,
									"src": "530:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 728,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "530:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "529:6:3"
						},
						"scope": 738,
						"src": "454:82:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"documentation": {
							"id": 732,
							"nodeType": "StructuredDocumentation",
							"src": "539:272:3",
							"text": " return the sender of this call.\n if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n of the msg.data.\n otherwise, return `msg.sender`\n should be used in the contract anywhere instead of msg.sender"
						},
						"functionSelector": "486ff0cd",
						"id": 737,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "versionRecipient",
						"nameLocation": "898:16:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 733,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "914:2:3"
						},
						"returnParameters": {
							"id": 736,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 735,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 737,
									"src": "948:13:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 734,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "948:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "947:15:3"
						},
						"scope": 738,
						"src": "889:74:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "external"
					}
				],
				"scope": 1402,
				"src": "224:741:3"
			},
			{
				"abstract": true,
				"baseContracts": [
					{
						"baseName": {
							"id": 740,
							"name": "IRelayRecipient",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 738,
							"src": "1170:15:3"
						},
						"id": 741,
						"nodeType": "InheritanceSpecifier",
						"src": "1170:15:3"
					}
				],
				"contractDependencies": [738],
				"contractKind": "contract",
				"documentation": {
					"id": 739,
					"nodeType": "StructuredDocumentation",
					"src": "967:162:3",
					"text": " A base contract to be inherited by any contract that want to receive relayed transactions\n A subclass must use \"_msgSender()\" instead of \"msg.sender\""
				},
				"fullyImplemented": false,
				"id": 799,
				"linearizedBaseContracts": [799, 738],
				"name": "BaseRelayRecipient",
				"nameLocation": "1148:18:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"functionSelector": "7da0a877",
						"id": 743,
						"mutability": "mutable",
						"name": "trustedForwarder",
						"nameLocation": "1258:16:3",
						"nodeType": "VariableDeclaration",
						"scope": 799,
						"src": "1243:31:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						},
						"typeName": {
							"id": 742,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "1243:7:3",
							"stateMutability": "nonpayable",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 757,
							"nodeType": "Block",
							"src": "1372:122:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 752,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 746,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1384:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1384:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"id": 750,
															"name": "trustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "1406:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1398:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 748,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1398:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1398:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "1384:39:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "46756e6374696f6e2063616e206f6e6c792062652063616c6c6564207468726f75676820746865207472757374656420466f72776172646572",
												"id": 753,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1425:59:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_16eacb181cfb4e627c7a3da59e4cf7bd249427aaa1e80306e323e1a2cebe9591",
													"typeString": "literal_string \"Function can only be called through the trusted Forwarder\""
												},
												"value": "Function can only be called through the trusted Forwarder"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_16eacb181cfb4e627c7a3da59e4cf7bd249427aaa1e80306e323e1a2cebe9591",
													"typeString": "literal_string \"Function can only be called through the trusted Forwarder\""
												}
											],
											"id": 745,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "1376:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 754,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1376:109:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 755,
									"nodeType": "ExpressionStatement",
									"src": "1376:109:3"
								},
								{
									"id": 756,
									"nodeType": "PlaceholderStatement",
									"src": "1489:1:3"
								}
							]
						},
						"id": 758,
						"name": "trustedForwarderOnly",
						"nameLocation": "1349:20:3",
						"nodeType": "ModifierDefinition",
						"parameters": {
							"id": 744,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1369:2:3"
						},
						"src": "1340:154:3",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"baseFunctions": [731],
						"body": {
							"id": 770,
							"nodeType": "Block",
							"src": "1580:44:3",
							"statements": [
								{
									"expression": {
										"commonType": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"id": 768,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 766,
											"name": "forwarder",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 760,
											"src": "1591:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"id": 767,
											"name": "trustedForwarder",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 743,
											"src": "1604:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "1591:29:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"functionReturnParameters": 765,
									"id": 769,
									"nodeType": "Return",
									"src": "1584:36:3"
								}
							]
						},
						"functionSelector": "572b6c05",
						"id": 771,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "isTrustedForwarder",
						"nameLocation": "1506:18:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 762,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "1556:8:3"
						},
						"parameters": {
							"id": 761,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 760,
									"mutability": "mutable",
									"name": "forwarder",
									"nameLocation": "1533:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "1525:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 759,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1525:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1524:19:3"
						},
						"returnParameters": {
							"id": 765,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 764,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "1574:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 763,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1574:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1573:6:3"
						},
						"scope": 799,
						"src": "1497:127:3",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 797,
							"nodeType": "Block",
							"src": "1929:397:3",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"id": 786,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 781,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"expression": {
													"expression": {
														"id": 777,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1937:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1937:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"id": 779,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "length",
												"nodeType": "MemberAccess",
												"src": "1937:15:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": ">=",
											"rightExpression": {
												"hexValue": "3234",
												"id": 780,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1956:2:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"src": "1937:21:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "&&",
										"rightExpression": {
											"arguments": [
												{
													"expression": {
														"id": 783,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1981:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1981:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 782,
												"name": "isTrustedForwarder",
												"nodeType": "Identifier",
												"overloadedDeclarations": [771],
												"referencedDeclaration": 771,
												"src": "1962:18:3",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
													"typeString": "function (address) view returns (bool)"
												}
											},
											"id": 785,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1962:30:3",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"src": "1937:55:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 795,
										"nodeType": "Block",
										"src": "2287:36:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 791,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2307:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2307:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2299:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 789,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2299:8:3",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2299:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 776,
												"id": 794,
												"nodeType": "Return",
												"src": "2292:26:3"
											}
										]
									},
									"id": 796,
									"nodeType": "IfStatement",
									"src": "1933:390:3",
									"trueBody": {
										"id": 788,
										"nodeType": "Block",
										"src": "1994:287:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2213:64:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2219:53:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2230:2:3",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "calldatasize",
																							"nodeType": "YulIdentifier",
																							"src": "2251:12:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2251:14:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2267:2:3",
																						"type": "",
																						"value": "20"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2247:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2247:23:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2234:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:37:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2226:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:46:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2219:3:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 775,
														"isOffset": false,
														"isSlot": false,
														"src": "2219:3:3",
														"valueSize": 1
													}
												],
												"id": 787,
												"nodeType": "InlineAssembly",
												"src": "2204:73:3"
											}
										]
									}
								}
							]
						},
						"documentation": {
							"id": 772,
							"nodeType": "StructuredDocumentation",
							"src": "1627:226:3",
							"text": " return the sender of this call.\n if the call came through our trusted forwarder, return the original sender.\n otherwise, return `msg.sender`.\n should be used in the contract anywhere instead of msg.sender"
						},
						"id": 798,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_msgSender",
						"nameLocation": "1864:10:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 773,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1874:2:3"
						},
						"returnParameters": {
							"id": 776,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 775,
									"mutability": "mutable",
									"name": "ret",
									"nameLocation": "1924:3:3",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1908:19:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 774,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1908:15:3",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1907:21:3"
						},
						"scope": 799,
						"src": "1855:471:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "internal"
					}
				],
				"scope": 1402,
				"src": "1130:1198:3"
			},
			{
				"abstract": true,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 811,
				"linearizedBaseContracts": [811],
				"name": "Context",
				"nameLocation": "2348:7:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 809,
							"nodeType": "Block",
							"src": "2426:150:3",
							"statements": [
								{
									"expression": {
										"id": 804,
										"name": "this",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4294967268,
										"src": "2430:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$811",
											"typeString": "contract Context"
										}
									},
									"id": 805,
									"nodeType": "ExpressionStatement",
									"src": "2430:4:3"
								},
								{
									"expression": {
										"expression": {
											"id": 806,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "2564:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 807,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "data",
										"nodeType": "MemberAccess",
										"src": "2564:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_calldata_ptr",
											"typeString": "bytes calldata"
										}
									},
									"functionReturnParameters": 803,
									"id": 808,
									"nodeType": "Return",
									"src": "2557:15:3"
								}
							]
						},
						"id": 810,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_msgData",
						"nameLocation": "2368:8:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 800,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2376:2:3"
						},
						"returnParameters": {
							"id": 803,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "2410:14:3",
									"stateVariable": false,
									"storageLocation": "calldata",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_calldata_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 801,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "2410:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2409:16:3"
						},
						"scope": 811,
						"src": "2359:217:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "internal"
					}
				],
				"scope": 1402,
				"src": "2330:248:3"
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "interface",
				"documentation": {
					"id": 812,
					"nodeType": "StructuredDocumentation",
					"src": "2580:70:3",
					"text": " @dev Interface of the ERC20 standard as defined in the EIP."
				},
				"fullyImplemented": false,
				"id": 887,
				"linearizedBaseContracts": [887],
				"name": "IERC20",
				"nameLocation": "2661:6:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"documentation": {
							"id": 813,
							"nodeType": "StructuredDocumentation",
							"src": "2671:60:3",
							"text": " @dev Returns the amount of tokens in existence."
						},
						"functionSelector": "18160ddd",
						"id": 818,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "totalSupply",
						"nameLocation": "2742:11:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 814,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2753:2:3"
						},
						"returnParameters": {
							"id": 817,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 816,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 818,
									"src": "2779:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2779:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2778:9:3"
						},
						"scope": 887,
						"src": "2733:55:3",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 819,
							"nodeType": "StructuredDocumentation",
							"src": "2791:66:3",
							"text": " @dev Returns the amount of tokens owned by `account`."
						},
						"functionSelector": "70a08231",
						"id": 826,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "balanceOf",
						"nameLocation": "2868:9:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 822,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 821,
									"mutability": "mutable",
									"name": "account",
									"nameLocation": "2886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "2878:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 820,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2878:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2877:17:3"
						},
						"returnParameters": {
							"id": 825,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 824,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "2918:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 823,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2918:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2917:9:3"
						},
						"scope": 887,
						"src": "2859:68:3",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 827,
							"nodeType": "StructuredDocumentation",
							"src": "2930:191:3",
							"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
						},
						"functionSelector": "a9059cbb",
						"id": 836,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "transfer",
						"nameLocation": "3132:8:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 832,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 829,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "3149:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "3141:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 828,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3141:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 831,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "3168:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "3160:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3160:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3140:35:3"
						},
						"returnParameters": {
							"id": 835,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "3194:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 833,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3194:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3193:6:3"
						},
						"scope": 887,
						"src": "3123:77:3",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 837,
							"nodeType": "StructuredDocumentation",
							"src": "3203:246:3",
							"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
						},
						"functionSelector": "dd62ed3e",
						"id": 846,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "allowance",
						"nameLocation": "3460:9:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 842,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 839,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "3478:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 846,
									"src": "3470:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 838,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3470:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 841,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "3493:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 846,
									"src": "3485:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 840,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3485:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3469:32:3"
						},
						"returnParameters": {
							"id": 845,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 844,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 846,
									"src": "3525:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 843,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3525:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3524:9:3"
						},
						"scope": 887,
						"src": "3451:83:3",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 847,
							"nodeType": "StructuredDocumentation",
							"src": "3537:603:3",
							"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
						},
						"functionSelector": "095ea7b3",
						"id": 856,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "approve",
						"nameLocation": "4151:7:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 852,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 849,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "4167:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "4159:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 848,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4159:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 851,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "4184:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "4176:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 850,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4176:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4158:33:3"
						},
						"returnParameters": {
							"id": 855,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 854,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "4210:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 853,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4210:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4209:6:3"
						},
						"scope": 887,
						"src": "4142:74:3",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 857,
							"nodeType": "StructuredDocumentation",
							"src": "4219:272:3",
							"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
						},
						"functionSelector": "23b872dd",
						"id": 868,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "transferFrom",
						"nameLocation": "4502:12:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 864,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 859,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "4526:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "4518:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 858,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4518:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 861,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "4544:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "4536:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 860,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4536:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 863,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "4565:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "4557:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 862,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4557:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4514:60:3"
						},
						"returnParameters": {
							"id": 867,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 866,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "4593:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 865,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4593:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4592:6:3"
						},
						"scope": 887,
						"src": "4493:106:3",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"anonymous": false,
						"documentation": {
							"id": 869,
							"nodeType": "StructuredDocumentation",
							"src": "4602:143:3",
							"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
						},
						"id": 877,
						"name": "Transfer",
						"nameLocation": "4753:8:3",
						"nodeType": "EventDefinition",
						"parameters": {
							"id": 876,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 871,
									"indexed": true,
									"mutability": "mutable",
									"name": "from",
									"nameLocation": "4778:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 877,
									"src": "4762:20:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 870,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4762:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 873,
									"indexed": true,
									"mutability": "mutable",
									"name": "to",
									"nameLocation": "4800:2:3",
									"nodeType": "VariableDeclaration",
									"scope": 877,
									"src": "4784:18:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 872,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4784:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 875,
									"indexed": false,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "4812:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 877,
									"src": "4804:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 874,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4804:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4761:57:3"
						},
						"src": "4747:72:3"
					},
					{
						"anonymous": false,
						"documentation": {
							"id": 878,
							"nodeType": "StructuredDocumentation",
							"src": "4822:139:3",
							"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
						},
						"id": 886,
						"name": "Approval",
						"nameLocation": "4969:8:3",
						"nodeType": "EventDefinition",
						"parameters": {
							"id": 885,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 880,
									"indexed": true,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "4994:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 886,
									"src": "4978:21:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 879,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4978:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 882,
									"indexed": true,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "5017:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 886,
									"src": "5001:23:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 881,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5001:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 884,
									"indexed": false,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "5034:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 886,
									"src": "5026:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 883,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5026:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4977:63:3"
						},
						"src": "4963:78:3"
					}
				],
				"scope": 1402,
				"src": "2651:2392:3"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 889,
							"name": "Context",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 811,
							"src": "6226:7:3"
						},
						"id": 890,
						"nodeType": "InheritanceSpecifier",
						"src": "6226:7:3"
					},
					{
						"baseName": {
							"id": 891,
							"name": "IERC20",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 887,
							"src": "6235:6:3"
						},
						"id": 892,
						"nodeType": "InheritanceSpecifier",
						"src": "6235:6:3"
					},
					{
						"baseName": {
							"id": 893,
							"name": "BaseRelayRecipient",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 799,
							"src": "6243:18:3"
						},
						"id": 894,
						"nodeType": "InheritanceSpecifier",
						"src": "6243:18:3"
					}
				],
				"contractDependencies": [738, 799, 811, 887],
				"contractKind": "contract",
				"documentation": {
					"id": 888,
					"nodeType": "StructuredDocumentation",
					"src": "5045:1162:3",
					"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
				},
				"fullyImplemented": true,
				"id": 1401,
				"linearizedBaseContracts": [1401, 799, 738, 887, 811],
				"name": "ERC20",
				"nameLocation": "6217:5:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 898,
						"mutability": "mutable",
						"name": "_balances",
						"nameLocation": "6301:9:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6265:45:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
							"typeString": "mapping(address => uint256)"
						},
						"typeName": {
							"id": 897,
							"keyType": {
								"id": 895,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6273:7:3",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "6265:27:3",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
								"typeString": "mapping(address => uint256)"
							},
							"valueType": {
								"id": 896,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6284:7:3",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 904,
						"mutability": "mutable",
						"name": "_allowances",
						"nameLocation": "6370:11:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6314:67:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
							"typeString": "mapping(address => mapping(address => uint256))"
						},
						"typeName": {
							"id": 903,
							"keyType": {
								"id": 899,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6322:7:3",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "6314:47:3",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
								"typeString": "mapping(address => mapping(address => uint256))"
							},
							"valueType": {
								"id": 902,
								"keyType": {
									"id": 900,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "6341:7:3",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"nodeType": "Mapping",
								"src": "6333:27:3",
								"typeDescriptions": {
									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
									"typeString": "mapping(address => uint256)"
								},
								"valueType": {
									"id": 901,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "6352:7:3",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								}
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 906,
						"mutability": "mutable",
						"name": "_totalSupply",
						"nameLocation": "6401:12:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6385:28:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 905,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "6385:7:3",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 908,
						"mutability": "mutable",
						"name": "_name",
						"nameLocation": "6432:5:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6417:20:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_string_storage",
							"typeString": "string"
						},
						"typeName": {
							"id": 907,
							"name": "string",
							"nodeType": "ElementaryTypeName",
							"src": "6417:6:3",
							"typeDescriptions": {
								"typeIdentifier": "t_string_storage_ptr",
								"typeString": "string"
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 910,
						"mutability": "mutable",
						"name": "_symbol",
						"nameLocation": "6455:7:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6440:22:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_string_storage",
							"typeString": "string"
						},
						"typeName": {
							"id": 909,
							"name": "string",
							"nodeType": "ElementaryTypeName",
							"src": "6440:6:3",
							"typeDescriptions": {
								"typeIdentifier": "t_string_storage_ptr",
								"typeString": "string"
							}
						},
						"visibility": "private"
					},
					{
						"body": {
							"id": 932,
							"nodeType": "Block",
							"src": "6835:82:3",
							"statements": [
								{
									"expression": {
										"id": 922,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 920,
											"name": "_name",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 908,
											"src": "6839:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage",
												"typeString": "string storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 921,
											"name": "name_",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 913,
											"src": "6847:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_string_memory_ptr",
												"typeString": "string memory"
											}
										},
										"src": "6839:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"id": 923,
									"nodeType": "ExpressionStatement",
									"src": "6839:13:3"
								},
								{
									"expression": {
										"id": 926,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 924,
											"name": "_symbol",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 910,
											"src": "6856:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage",
												"typeString": "string storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 925,
											"name": "symbol_",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 915,
											"src": "6866:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_string_memory_ptr",
												"typeString": "string memory"
											}
										},
										"src": "6856:17:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"id": 927,
									"nodeType": "ExpressionStatement",
									"src": "6856:17:3"
								},
								{
									"expression": {
										"id": 930,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 928,
											"name": "trustedForwarder",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 743,
											"src": "6877:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 929,
											"name": "_trustedForwarder",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 917,
											"src": "6896:17:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "6877:36:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 931,
									"nodeType": "ExpressionStatement",
									"src": "6877:36:3"
								}
							]
						},
						"documentation": {
							"id": 911,
							"nodeType": "StructuredDocumentation",
							"src": "6466:275:3",
							"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."
						},
						"id": 933,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nameLocation": "-1:-1:-1",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 918,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 913,
									"mutability": "mutable",
									"name": "name_",
									"nameLocation": "6772:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "6758:19:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 912,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6758:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 915,
									"mutability": "mutable",
									"name": "symbol_",
									"nameLocation": "6795:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "6781:21:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 914,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6781:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 917,
									"mutability": "mutable",
									"name": "_trustedForwarder",
									"nameLocation": "6814:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "6806:25:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 916,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6806:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "6754:80:3"
						},
						"returnParameters": {
							"id": 919,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6835:0:3"
						},
						"scope": 1401,
						"src": "6743:174:3",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 941,
							"nodeType": "Block",
							"src": "7030:20:3",
							"statements": [
								{
									"expression": {
										"id": 939,
										"name": "_name",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 908,
										"src": "7041:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"functionReturnParameters": 938,
									"id": 940,
									"nodeType": "Return",
									"src": "7034:12:3"
								}
							]
						},
						"documentation": {
							"id": 934,
							"nodeType": "StructuredDocumentation",
							"src": "6920:48:3",
							"text": " @dev Returns the name of the token."
						},
						"functionSelector": "06fdde03",
						"id": 942,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "name",
						"nameLocation": "6979:4:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 935,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6983:2:3"
						},
						"returnParameters": {
							"id": 938,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 937,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 942,
									"src": "7015:13:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 936,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7015:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7014:15:3"
						},
						"scope": 1401,
						"src": "6970:80:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 950,
							"nodeType": "Block",
							"src": "7210:22:3",
							"statements": [
								{
									"expression": {
										"id": 948,
										"name": "_symbol",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 910,
										"src": "7221:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"functionReturnParameters": 947,
									"id": 949,
									"nodeType": "Return",
									"src": "7214:14:3"
								}
							]
						},
						"documentation": {
							"id": 943,
							"nodeType": "StructuredDocumentation",
							"src": "7053:93:3",
							"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
						},
						"functionSelector": "95d89b41",
						"id": 951,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "symbol",
						"nameLocation": "7157:6:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 944,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7163:2:3"
						},
						"returnParameters": {
							"id": 947,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 946,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 951,
									"src": "7195:13:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 945,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7195:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7194:15:3"
						},
						"scope": 1401,
						"src": "7148:84:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 959,
							"nodeType": "Block",
							"src": "7870:17:3",
							"statements": [
								{
									"expression": {
										"hexValue": "3138",
										"id": 957,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7881:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"functionReturnParameters": 956,
									"id": 958,
									"nodeType": "Return",
									"src": "7874:9:3"
								}
							]
						},
						"documentation": {
							"id": 952,
							"nodeType": "StructuredDocumentation",
							"src": "7235:577:3",
							"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
						},
						"functionSelector": "313ce567",
						"id": 960,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "decimals",
						"nameLocation": "7823:8:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 953,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7831:2:3"
						},
						"returnParameters": {
							"id": 956,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 955,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "7863:5:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 954,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "7863:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7862:7:3"
						},
						"scope": 1401,
						"src": "7814:73:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [818],
						"body": {
							"id": 969,
							"nodeType": "Block",
							"src": "8005:27:3",
							"statements": [
								{
									"expression": {
										"id": 967,
										"name": "_totalSupply",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 906,
										"src": "8016:12:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 966,
									"id": 968,
									"nodeType": "Return",
									"src": "8009:19:3"
								}
							]
						},
						"documentation": {
							"id": 961,
							"nodeType": "StructuredDocumentation",
							"src": "7890:43:3",
							"text": " @dev See {IERC20-totalSupply}."
						},
						"functionSelector": "18160ddd",
						"id": 970,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "totalSupply",
						"nameLocation": "7944:11:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 963,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "7978:8:3"
						},
						"parameters": {
							"id": 962,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7955:2:3"
						},
						"returnParameters": {
							"id": 966,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 965,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "7996:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 964,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7996:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7995:9:3"
						},
						"scope": 1401,
						"src": "7935:97:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [826],
						"body": {
							"id": 983,
							"nodeType": "Block",
							"src": "8161:33:3",
							"statements": [
								{
									"expression": {
										"baseExpression": {
											"id": 979,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 898,
											"src": "8172:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 981,
										"indexExpression": {
											"id": 980,
											"name": "account",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 973,
											"src": "8182:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "8172:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 978,
									"id": 982,
									"nodeType": "Return",
									"src": "8165:25:3"
								}
							]
						},
						"documentation": {
							"id": 971,
							"nodeType": "StructuredDocumentation",
							"src": "8035:41:3",
							"text": " @dev See {IERC20-balanceOf}."
						},
						"functionSelector": "70a08231",
						"id": 984,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "balanceOf",
						"nameLocation": "8087:9:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 975,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8134:8:3"
						},
						"parameters": {
							"id": 974,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 973,
									"mutability": "mutable",
									"name": "account",
									"nameLocation": "8105:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 984,
									"src": "8097:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 972,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8097:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8096:17:3"
						},
						"returnParameters": {
							"id": 978,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 977,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 984,
									"src": "8152:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 976,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8152:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8151:9:3"
						},
						"scope": 1401,
						"src": "8078:116:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [836],
						"body": {
							"id": 1004,
							"nodeType": "Block",
							"src": "8462:65:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 996,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "8476:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 997,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "8476:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"id": 998,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 987,
												"src": "8490:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 999,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 989,
												"src": "8501:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 995,
											"name": "_transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1235,
											"src": "8466:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1000,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8466:42:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1001,
									"nodeType": "ExpressionStatement",
									"src": "8466:42:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1002,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8519:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 994,
									"id": 1003,
									"nodeType": "Return",
									"src": "8512:11:3"
								}
							]
						},
						"documentation": {
							"id": 985,
							"nodeType": "StructuredDocumentation",
							"src": "8197:171:3",
							"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
						},
						"functionSelector": "a9059cbb",
						"id": 1005,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "transfer",
						"nameLocation": "8379:8:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 991,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8438:8:3"
						},
						"parameters": {
							"id": 990,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 987,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "8396:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "8388:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 986,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8388:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 989,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "8415:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "8407:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 988,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8407:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8387:35:3"
						},
						"returnParameters": {
							"id": 994,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 993,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "8456:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 992,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "8456:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8455:6:3"
						},
						"scope": 1401,
						"src": "8370:157:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [737],
						"body": {
							"id": 1013,
							"nodeType": "Block",
							"src": "8605:18:3",
							"statements": [
								{
									"expression": {
										"hexValue": "31",
										"id": 1011,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8616:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
											"typeString": "literal_string \"1\""
										},
										"value": "1"
									},
									"functionReturnParameters": 1010,
									"id": 1012,
									"nodeType": "Return",
									"src": "8609:10:3"
								}
							]
						},
						"functionSelector": "486ff0cd",
						"id": 1014,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "versionRecipient",
						"nameLocation": "8539:16:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1007,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8572:8:3"
						},
						"parameters": {
							"id": 1006,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8555:2:3"
						},
						"returnParameters": {
							"id": 1010,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1009,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "8590:13:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1008,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8590:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8589:15:3"
						},
						"scope": 1401,
						"src": "8530:93:3",
						"stateMutability": "pure",
						"virtual": false,
						"visibility": "external"
					},
					{
						"baseFunctions": [846],
						"body": {
							"id": 1031,
							"nodeType": "Block",
							"src": "8767:42:3",
							"statements": [
								{
									"expression": {
										"baseExpression": {
											"baseExpression": {
												"id": 1025,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 904,
												"src": "8778:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 1027,
											"indexExpression": {
												"id": 1026,
												"name": "owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1017,
												"src": "8790:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "8778:18:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1029,
										"indexExpression": {
											"id": 1028,
											"name": "spender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1019,
											"src": "8797:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "8778:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 1024,
									"id": 1030,
									"nodeType": "Return",
									"src": "8771:34:3"
								}
							]
						},
						"documentation": {
							"id": 1015,
							"nodeType": "StructuredDocumentation",
							"src": "8626:41:3",
							"text": " @dev See {IERC20-allowance}."
						},
						"functionSelector": "dd62ed3e",
						"id": 1032,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "allowance",
						"nameLocation": "8678:9:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1021,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8740:8:3"
						},
						"parameters": {
							"id": 1020,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1017,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "8696:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1032,
									"src": "8688:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1016,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8688:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1019,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "8711:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1032,
									"src": "8703:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1018,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8703:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8687:32:3"
						},
						"returnParameters": {
							"id": 1024,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1023,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1032,
									"src": "8758:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1022,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8758:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8757:9:3"
						},
						"scope": 1401,
						"src": "8669:140:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [856],
						"body": {
							"id": 1052,
							"nodeType": "Block",
							"src": "9012:62:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1044,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "9025:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1045,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "9025:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"id": 1046,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1035,
												"src": "9039:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1047,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1037,
												"src": "9048:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1043,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1389,
											"src": "9016:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1048,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9016:39:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1049,
									"nodeType": "ExpressionStatement",
									"src": "9016:39:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1050,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9066:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 1042,
									"id": 1051,
									"nodeType": "Return",
									"src": "9059:11:3"
								}
							]
						},
						"documentation": {
							"id": 1033,
							"nodeType": "StructuredDocumentation",
							"src": "8812:109:3",
							"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
						},
						"functionSelector": "095ea7b3",
						"id": 1053,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "approve",
						"nameLocation": "8932:7:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1039,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8988:8:3"
						},
						"parameters": {
							"id": 1038,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1035,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "8948:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "8940:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1034,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8940:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1037,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "8965:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "8957:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1036,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8957:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8939:33:3"
						},
						"returnParameters": {
							"id": 1042,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1041,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "9006:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1040,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "9006:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "9005:6:3"
						},
						"scope": 1401,
						"src": "8923:151:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [868],
						"body": {
							"id": 1099,
							"nodeType": "Block",
							"src": "9620:269:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 1067,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "9634:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1068,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1058,
												"src": "9642:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1069,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1060,
												"src": "9653:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1066,
											"name": "_transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1235,
											"src": "9624:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1070,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9624:36:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1071,
									"nodeType": "ExpressionStatement",
									"src": "9624:36:3"
								},
								{
									"assignments": [1073],
									"declarations": [
										{
											"constant": false,
											"id": 1073,
											"mutability": "mutable",
											"name": "currentAllowance",
											"nameLocation": "9673:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 1099,
											"src": "9665:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1072,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9665:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1080,
									"initialValue": {
										"baseExpression": {
											"baseExpression": {
												"id": 1074,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 904,
												"src": "9692:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 1076,
											"indexExpression": {
												"id": 1075,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "9704:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "9692:19:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1079,
										"indexExpression": {
											"arguments": [],
											"expression": {
												"argumentTypes": [],
												"id": 1077,
												"name": "_msgSender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 798,
												"src": "9712:10:3",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
													"typeString": "function () view returns (address payable)"
												}
											},
											"id": 1078,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "9712:12:3",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "9692:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "9665:60:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1084,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1082,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1073,
													"src": "9737:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 1083,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "9757:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "9737:26:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
												"id": 1085,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "9765:42:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
													"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
												},
												"value": "ERC20: transfer amount exceeds allowance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
													"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
												}
											],
											"id": 1081,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "9729:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1086,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9729:79:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1087,
									"nodeType": "ExpressionStatement",
									"src": "9729:79:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 1089,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "9821:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1090,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "9829:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1091,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "9829:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1094,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1092,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1073,
													"src": "9843:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"id": 1093,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "9862:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "9843:25:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1088,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1389,
											"src": "9812:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1095,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9812:57:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1096,
									"nodeType": "ExpressionStatement",
									"src": "9812:57:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1097,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9881:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 1065,
									"id": 1098,
									"nodeType": "Return",
									"src": "9874:11:3"
								}
							]
						},
						"documentation": {
							"id": 1054,
							"nodeType": "StructuredDocumentation",
							"src": "9077:420:3",
							"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
						},
						"functionSelector": "23b872dd",
						"id": 1100,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "transferFrom",
						"nameLocation": "9508:12:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1062,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "9596:8:3"
						},
						"parameters": {
							"id": 1061,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1056,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "9532:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1100,
									"src": "9524:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1055,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9524:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1058,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "9550:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1100,
									"src": "9542:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1057,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9542:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1060,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9571:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1100,
									"src": "9563:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1059,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9563:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "9520:60:3"
						},
						"returnParameters": {
							"id": 1065,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1064,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1100,
									"src": "9614:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1063,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "9614:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "9613:6:3"
						},
						"scope": 1401,
						"src": "9499:390:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 1126,
							"nodeType": "Block",
							"src": "10339:103:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1111,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "10352:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1112,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10352:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"id": 1113,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1103,
												"src": "10366:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1121,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1114,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "10375:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1117,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1115,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "10387:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10387:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10375:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1119,
													"indexExpression": {
														"id": 1118,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "10401:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10375:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "+",
												"rightExpression": {
													"id": 1120,
													"name": "addedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1105,
													"src": "10412:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "10375:47:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1110,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1389,
											"src": "10343:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1122,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10343:80:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1123,
									"nodeType": "ExpressionStatement",
									"src": "10343:80:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10434:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 1109,
									"id": 1125,
									"nodeType": "Return",
									"src": "10427:11:3"
								}
							]
						},
						"documentation": {
							"id": 1101,
							"nodeType": "StructuredDocumentation",
							"src": "9892:351:3",
							"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
						},
						"functionSelector": "39509351",
						"id": 1127,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "increaseAllowance",
						"nameLocation": "10254:17:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1106,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1103,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "10280:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1127,
									"src": "10272:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1102,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10272:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1105,
									"mutability": "mutable",
									"name": "addedValue",
									"nameLocation": "10297:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1127,
									"src": "10289:18:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10289:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "10271:37:3"
						},
						"returnParameters": {
							"id": 1109,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1108,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1127,
									"src": "10333:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1107,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10333:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "10332:6:3"
						},
						"scope": 1401,
						"src": "10245:197:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 1164,
							"nodeType": "Block",
							"src": "10983:245:3",
							"statements": [
								{
									"assignments": [1138],
									"declarations": [
										{
											"constant": false,
											"id": 1138,
											"mutability": "mutable",
											"name": "currentAllowance",
											"nameLocation": "10995:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "10987:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1137,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10987:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1145,
									"initialValue": {
										"baseExpression": {
											"baseExpression": {
												"id": 1139,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 904,
												"src": "11014:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 1142,
											"indexExpression": {
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1140,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "11026:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1141,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "11026:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "11014:25:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1144,
										"indexExpression": {
											"id": 1143,
											"name": "spender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1130,
											"src": "11040:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "11014:34:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "10987:61:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1149,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1147,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1138,
													"src": "11060:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 1148,
													"name": "subtractedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1132,
													"src": "11080:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "11060:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
												"id": 1150,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "11097:39:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
													"typeString": "literal_string \"ERC20: decreased allowance below zero\""
												},
												"value": "ERC20: decreased allowance below zero"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
													"typeString": "literal_string \"ERC20: decreased allowance below zero\""
												}
											],
											"id": 1146,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "11052:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1151,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11052:85:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1152,
									"nodeType": "ExpressionStatement",
									"src": "11052:85:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1154,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "11150:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1155,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "11150:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"id": 1156,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1130,
												"src": "11164:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1159,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1157,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1138,
													"src": "11173:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"id": 1158,
													"name": "subtractedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1132,
													"src": "11192:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "11173:34:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1153,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1389,
											"src": "11141:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1160,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11141:67:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1161,
									"nodeType": "ExpressionStatement",
									"src": "11141:67:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11220:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 1136,
									"id": 1163,
									"nodeType": "Return",
									"src": "11213:11:3"
								}
							]
						},
						"documentation": {
							"id": 1128,
							"nodeType": "StructuredDocumentation",
							"src": "10445:437:3",
							"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
						},
						"functionSelector": "a457c2d7",
						"id": 1165,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "decreaseAllowance",
						"nameLocation": "10893:17:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1133,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1130,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "10919:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "10911:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1129,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10911:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1132,
									"mutability": "mutable",
									"name": "subtractedValue",
									"nameLocation": "10936:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "10928:23:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10928:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "10910:42:3"
						},
						"returnParameters": {
							"id": 1136,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1135,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "10977:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1134,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10977:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "10976:6:3"
						},
						"scope": 1401,
						"src": "10884:344:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 1234,
							"nodeType": "Block",
							"src": "11753:454:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1181,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1176,
													"name": "sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1168,
													"src": "11765:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11783:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11775:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1177,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11775:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11775:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "11765:20:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
												"id": 1182,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "11787:39:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
													"typeString": "literal_string \"ERC20: transfer from the zero address\""
												},
												"value": "ERC20: transfer from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
													"typeString": "literal_string \"ERC20: transfer from the zero address\""
												}
											],
											"id": 1175,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "11757:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1183,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11757:70:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1184,
									"nodeType": "ExpressionStatement",
									"src": "11757:70:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1191,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1186,
													"name": "recipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1170,
													"src": "11839:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11860:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11852:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1187,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11852:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "11839:23:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
												"id": 1192,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "11864:37:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
													"typeString": "literal_string \"ERC20: transfer to the zero address\""
												},
												"value": "ERC20: transfer to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
													"typeString": "literal_string \"ERC20: transfer to the zero address\""
												}
											],
											"id": 1185,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "11831:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1193,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11831:71:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1194,
									"nodeType": "ExpressionStatement",
									"src": "11831:71:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 1196,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1168,
												"src": "11928:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1197,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1170,
												"src": "11936:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1198,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1172,
												"src": "11947:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1195,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1400,
											"src": "11907:20:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1199,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11907:47:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1200,
									"nodeType": "ExpressionStatement",
									"src": "11907:47:3"
								},
								{
									"assignments": [1202],
									"declarations": [
										{
											"constant": false,
											"id": 1202,
											"mutability": "mutable",
											"name": "senderBalance",
											"nameLocation": "11967:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 1234,
											"src": "11959:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1201,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11959:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1206,
									"initialValue": {
										"baseExpression": {
											"id": 1203,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 898,
											"src": "11983:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1205,
										"indexExpression": {
											"id": 1204,
											"name": "sender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1168,
											"src": "11993:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "11983:17:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "11959:41:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1210,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1208,
													"name": "senderBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1202,
													"src": "12012:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 1209,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1172,
													"src": "12029:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "12012:23:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
												"id": 1211,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "12037:40:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
													"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
												},
												"value": "ERC20: transfer amount exceeds balance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
													"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
												}
											],
											"id": 1207,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "12004:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1212,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12004:74:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1213,
									"nodeType": "ExpressionStatement",
									"src": "12004:74:3"
								},
								{
									"expression": {
										"id": 1220,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 1214,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 898,
												"src": "12082:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1216,
											"indexExpression": {
												"id": 1215,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1168,
												"src": "12092:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "12082:17:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1219,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1217,
												"name": "senderBalance",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1202,
												"src": "12102:13:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 1218,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1172,
												"src": "12118:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "12102:22:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "12082:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1221,
									"nodeType": "ExpressionStatement",
									"src": "12082:42:3"
								},
								{
									"expression": {
										"id": 1226,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 1222,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 898,
												"src": "12128:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1224,
											"indexExpression": {
												"id": 1223,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1170,
												"src": "12138:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "12128:20:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 1225,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1172,
											"src": "12152:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "12128:30:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1227,
									"nodeType": "ExpressionStatement",
									"src": "12128:30:3"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 1229,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1168,
												"src": "12177:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1230,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1170,
												"src": "12185:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1231,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1172,
												"src": "12196:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1228,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 877,
											"src": "12168:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1232,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12168:35:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1233,
									"nodeType": "EmitStatement",
									"src": "12163:40:3"
								}
							]
						},
						"documentation": {
							"id": 1166,
							"nodeType": "StructuredDocumentation",
							"src": "11231:424:3",
							"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
						},
						"id": 1235,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_transfer",
						"nameLocation": "11666:9:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1173,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "11687:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "11679:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1167,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11679:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "11705:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "11697:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1169,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11697:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1172,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "11726:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "11718:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11718:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "11675:60:3"
						},
						"returnParameters": {
							"id": 1174,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "11753:0:3"
						},
						"scope": 1401,
						"src": "11657:550:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1281,
							"nodeType": "Block",
							"src": "12513:232:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1249,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1244,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1238,
													"src": "12525:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12544:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12536:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1245,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12536:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12536:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "12525:21:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
												"id": 1250,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "12548:33:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
													"typeString": "literal_string \"ERC20: mint to the zero address\""
												},
												"value": "ERC20: mint to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
													"typeString": "literal_string \"ERC20: mint to the zero address\""
												}
											],
											"id": 1243,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "12517:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1251,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12517:65:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1252,
									"nodeType": "ExpressionStatement",
									"src": "12517:65:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12616:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "12608:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1254,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12608:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 1257,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "12608:10:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1258,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1238,
												"src": "12620:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1259,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1240,
												"src": "12629:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1253,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1400,
											"src": "12587:20:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1260,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12587:49:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1261,
									"nodeType": "ExpressionStatement",
									"src": "12587:49:3"
								},
								{
									"expression": {
										"id": 1264,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 1262,
											"name": "_totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 906,
											"src": "12641:12:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 1263,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1240,
											"src": "12657:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "12641:22:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1265,
									"nodeType": "ExpressionStatement",
									"src": "12641:22:3"
								},
								{
									"expression": {
										"id": 1270,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 1266,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 898,
												"src": "12667:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1268,
											"indexExpression": {
												"id": 1267,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1238,
												"src": "12677:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "12667:18:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 1269,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1240,
											"src": "12689:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "12667:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1271,
									"nodeType": "ExpressionStatement",
									"src": "12667:28:3"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12721:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "12713:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1273,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12713:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 1276,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "12713:10:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1277,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1238,
												"src": "12725:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1278,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1240,
												"src": "12734:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1272,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 877,
											"src": "12704:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1279,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12704:37:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1280,
									"nodeType": "EmitStatement",
									"src": "12699:42:3"
								}
							]
						},
						"documentation": {
							"id": 1236,
							"nodeType": "StructuredDocumentation",
							"src": "12210:236:3",
							"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
						},
						"id": 1282,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_mint",
						"nameLocation": "12457:5:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1241,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1238,
									"mutability": "mutable",
									"name": "account",
									"nameLocation": "12471:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1282,
									"src": "12463:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1237,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12463:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1240,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "12488:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1282,
									"src": "12480:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1239,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12480:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "12462:33:3"
						},
						"returnParameters": {
							"id": 1242,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "12513:0:3"
						},
						"scope": 1401,
						"src": "12448:297:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1343,
							"nodeType": "Block",
							"src": "13094:373:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1296,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1291,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1285,
													"src": "13106:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13125:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13117:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13117:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13117:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "13106:21:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
												"id": 1297,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "13129:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
													"typeString": "literal_string \"ERC20: burn from the zero address\""
												},
												"value": "ERC20: burn from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
													"typeString": "literal_string \"ERC20: burn from the zero address\""
												}
											],
											"id": 1290,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "13098:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1298,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13098:67:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1299,
									"nodeType": "ExpressionStatement",
									"src": "13098:67:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 1301,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1285,
												"src": "13191:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13208:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "13200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1302,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13200:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 1305,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "13200:10:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1306,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1287,
												"src": "13212:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1300,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1400,
											"src": "13170:20:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1307,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13170:49:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1308,
									"nodeType": "ExpressionStatement",
									"src": "13170:49:3"
								},
								{
									"assignments": [1310],
									"declarations": [
										{
											"constant": false,
											"id": 1310,
											"mutability": "mutable",
											"name": "accountBalance",
											"nameLocation": "13232:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 1343,
											"src": "13224:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13224:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1314,
									"initialValue": {
										"baseExpression": {
											"id": 1311,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 898,
											"src": "13249:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1313,
										"indexExpression": {
											"id": 1312,
											"name": "account",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1285,
											"src": "13259:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "13249:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "13224:43:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1318,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1316,
													"name": "accountBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1310,
													"src": "13279:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 1317,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1287,
													"src": "13297:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "13279:24:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
												"id": 1319,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "13305:36:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
													"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
												},
												"value": "ERC20: burn amount exceeds balance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
													"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
												}
											],
											"id": 1315,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "13271:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1320,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13271:71:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1321,
									"nodeType": "ExpressionStatement",
									"src": "13271:71:3"
								},
								{
									"expression": {
										"id": 1328,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 1322,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 898,
												"src": "13346:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1324,
											"indexExpression": {
												"id": 1323,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1285,
												"src": "13356:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "13346:18:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1327,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1325,
												"name": "accountBalance",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1310,
												"src": "13367:14:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 1326,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1287,
												"src": "13384:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "13367:23:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "13346:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1329,
									"nodeType": "ExpressionStatement",
									"src": "13346:44:3"
								},
								{
									"expression": {
										"id": 1332,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 1330,
											"name": "_totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 906,
											"src": "13394:12:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "-=",
										"rightHandSide": {
											"id": 1331,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1287,
											"src": "13410:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "13394:22:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1333,
									"nodeType": "ExpressionStatement",
									"src": "13394:22:3"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 1335,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1285,
												"src": "13435:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13452:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "13444:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1336,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13444:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 1339,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "13444:10:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1340,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1287,
												"src": "13456:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1334,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 877,
											"src": "13426:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1341,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13426:37:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1342,
									"nodeType": "EmitStatement",
									"src": "13421:42:3"
								}
							]
						},
						"documentation": {
							"id": 1283,
							"nodeType": "StructuredDocumentation",
							"src": "12748:279:3",
							"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
						},
						"id": 1344,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_burn",
						"nameLocation": "13038:5:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1288,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1285,
									"mutability": "mutable",
									"name": "account",
									"nameLocation": "13052:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1344,
									"src": "13044:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1284,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13044:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1287,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "13069:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1344,
									"src": "13061:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13061:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "13043:33:3"
						},
						"returnParameters": {
							"id": 1289,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "13094:0:3"
						},
						"scope": 1401,
						"src": "13029:438:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1388,
							"nodeType": "Block",
							"src": "13940:230:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1360,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1355,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1347,
													"src": "13952:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13969:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13961:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1356,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13961:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13961:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "13952:19:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
												"id": 1361,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "13973:38:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
													"typeString": "literal_string \"ERC20: approve from the zero address\""
												},
												"value": "ERC20: approve from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
													"typeString": "literal_string \"ERC20: approve from the zero address\""
												}
											],
											"id": 1354,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "13944:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1362,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13944:68:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1363,
									"nodeType": "ExpressionStatement",
									"src": "13944:68:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1370,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1365,
													"name": "spender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1349,
													"src": "14024:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14043:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1366,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14035:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14035:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "14024:21:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
												"id": 1371,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14047:36:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
													"typeString": "literal_string \"ERC20: approve to the zero address\""
												},
												"value": "ERC20: approve to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
													"typeString": "literal_string \"ERC20: approve to the zero address\""
												}
											],
											"id": 1364,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "14016:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1372,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14016:68:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1373,
									"nodeType": "ExpressionStatement",
									"src": "14016:68:3"
								},
								{
									"expression": {
										"id": 1380,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"baseExpression": {
													"id": 1374,
													"name": "_allowances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "14089:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
														"typeString": "mapping(address => mapping(address => uint256))"
													}
												},
												"id": 1377,
												"indexExpression": {
													"id": 1375,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1347,
													"src": "14101:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "14089:18:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1378,
											"indexExpression": {
												"id": 1376,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1349,
												"src": "14108:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "14089:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 1379,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1351,
											"src": "14119:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "14089:36:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1381,
									"nodeType": "ExpressionStatement",
									"src": "14089:36:3"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 1383,
												"name": "owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1347,
												"src": "14143:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1384,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1349,
												"src": "14150:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1385,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1351,
												"src": "14159:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1382,
											"name": "Approval",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 886,
											"src": "14134:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1386,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14134:32:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1387,
									"nodeType": "EmitStatement",
									"src": "14129:37:3"
								}
							]
						},
						"documentation": {
							"id": 1345,
							"nodeType": "StructuredDocumentation",
							"src": "13470:376:3",
							"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
						},
						"id": 1389,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_approve",
						"nameLocation": "13857:8:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1352,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1347,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "13877:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1389,
									"src": "13869:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1346,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13869:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1349,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "13894:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1389,
									"src": "13886:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1348,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13886:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1351,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "13913:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1389,
									"src": "13905:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1350,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13905:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "13865:57:3"
						},
						"returnParameters": {
							"id": 1353,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "13940:0:3"
						},
						"scope": 1401,
						"src": "13848:322:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1399,
							"nodeType": "Block",
							"src": "14810:2:3",
							"statements": []
						},
						"documentation": {
							"id": 1390,
							"nodeType": "StructuredDocumentation",
							"src": "14173:537:3",
							"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
						},
						"id": 1400,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_beforeTokenTransfer",
						"nameLocation": "14721:20:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1397,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1392,
									"mutability": "mutable",
									"name": "from",
									"nameLocation": "14753:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "14745:12:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1391,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14745:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1394,
									"mutability": "mutable",
									"name": "to",
									"nameLocation": "14769:2:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "14761:10:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1393,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14761:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1396,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "14783:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "14775:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1395,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14775:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "14741:51:3"
						},
						"returnParameters": {
							"id": 1398,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "14810:0:3"
						},
						"scope": 1401,
						"src": "14712:100:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					}
				],
				"scope": 1402,
				"src": "6208:8606:3"
			}
		],
		"src": "33:14782:3"
	},
	"legacyAST": {
		"absolutePath": "/workecn/contracts/contracts/3_ERC20.sol",
		"exportedSymbols": {
			"BaseRelayRecipient": [799],
			"Context": [811],
			"ERC20": [1401],
			"IERC20": [887],
			"IRelayRecipient": [738]
		},
		"id": 1402,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 722,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "33:23:3"
			},
			{
				"abstract": true,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"documentation": {
					"id": 723,
					"nodeType": "StructuredDocumentation",
					"src": "58:165:3",
					"text": " a contract must implement this interface in order to support relayed transaction.\n It is better to inherit the BaseRelayRecipient as its implementation."
				},
				"fullyImplemented": false,
				"id": 738,
				"linearizedBaseContracts": [738],
				"name": "IRelayRecipient",
				"nameLocation": "242:15:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"documentation": {
							"id": 724,
							"nodeType": "StructuredDocumentation",
							"src": "261:191:3",
							"text": " return if the forwarder is trusted to forward relayed transactions to us.\n the forwarder is required to verify the sender's signature, and verify\n the call is not a replay."
						},
						"functionSelector": "572b6c05",
						"id": 731,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "isTrustedForwarder",
						"nameLocation": "463:18:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 727,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 726,
									"mutability": "mutable",
									"name": "forwarder",
									"nameLocation": "490:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 731,
									"src": "482:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 725,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "482:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "481:19:3"
						},
						"returnParameters": {
							"id": 730,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 729,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 731,
									"src": "530:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 728,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "530:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "529:6:3"
						},
						"scope": 738,
						"src": "454:82:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"documentation": {
							"id": 732,
							"nodeType": "StructuredDocumentation",
							"src": "539:272:3",
							"text": " return the sender of this call.\n if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n of the msg.data.\n otherwise, return `msg.sender`\n should be used in the contract anywhere instead of msg.sender"
						},
						"functionSelector": "486ff0cd",
						"id": 737,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "versionRecipient",
						"nameLocation": "898:16:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 733,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "914:2:3"
						},
						"returnParameters": {
							"id": 736,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 735,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 737,
									"src": "948:13:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 734,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "948:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "947:15:3"
						},
						"scope": 738,
						"src": "889:74:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "external"
					}
				],
				"scope": 1402,
				"src": "224:741:3"
			},
			{
				"abstract": true,
				"baseContracts": [
					{
						"baseName": {
							"id": 740,
							"name": "IRelayRecipient",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 738,
							"src": "1170:15:3"
						},
						"id": 741,
						"nodeType": "InheritanceSpecifier",
						"src": "1170:15:3"
					}
				],
				"contractDependencies": [738],
				"contractKind": "contract",
				"documentation": {
					"id": 739,
					"nodeType": "StructuredDocumentation",
					"src": "967:162:3",
					"text": " A base contract to be inherited by any contract that want to receive relayed transactions\n A subclass must use \"_msgSender()\" instead of \"msg.sender\""
				},
				"fullyImplemented": false,
				"id": 799,
				"linearizedBaseContracts": [799, 738],
				"name": "BaseRelayRecipient",
				"nameLocation": "1148:18:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"functionSelector": "7da0a877",
						"id": 743,
						"mutability": "mutable",
						"name": "trustedForwarder",
						"nameLocation": "1258:16:3",
						"nodeType": "VariableDeclaration",
						"scope": 799,
						"src": "1243:31:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						},
						"typeName": {
							"id": 742,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "1243:7:3",
							"stateMutability": "nonpayable",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 757,
							"nodeType": "Block",
							"src": "1372:122:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 752,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 746,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1384:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1384:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"id": 750,
															"name": "trustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "1406:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1398:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 748,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1398:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1398:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "1384:39:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "46756e6374696f6e2063616e206f6e6c792062652063616c6c6564207468726f75676820746865207472757374656420466f72776172646572",
												"id": 753,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1425:59:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_16eacb181cfb4e627c7a3da59e4cf7bd249427aaa1e80306e323e1a2cebe9591",
													"typeString": "literal_string \"Function can only be called through the trusted Forwarder\""
												},
												"value": "Function can only be called through the trusted Forwarder"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_16eacb181cfb4e627c7a3da59e4cf7bd249427aaa1e80306e323e1a2cebe9591",
													"typeString": "literal_string \"Function can only be called through the trusted Forwarder\""
												}
											],
											"id": 745,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "1376:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 754,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1376:109:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 755,
									"nodeType": "ExpressionStatement",
									"src": "1376:109:3"
								},
								{
									"id": 756,
									"nodeType": "PlaceholderStatement",
									"src": "1489:1:3"
								}
							]
						},
						"id": 758,
						"name": "trustedForwarderOnly",
						"nameLocation": "1349:20:3",
						"nodeType": "ModifierDefinition",
						"parameters": {
							"id": 744,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1369:2:3"
						},
						"src": "1340:154:3",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"baseFunctions": [731],
						"body": {
							"id": 770,
							"nodeType": "Block",
							"src": "1580:44:3",
							"statements": [
								{
									"expression": {
										"commonType": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"id": 768,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 766,
											"name": "forwarder",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 760,
											"src": "1591:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"id": 767,
											"name": "trustedForwarder",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 743,
											"src": "1604:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "1591:29:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"functionReturnParameters": 765,
									"id": 769,
									"nodeType": "Return",
									"src": "1584:36:3"
								}
							]
						},
						"functionSelector": "572b6c05",
						"id": 771,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "isTrustedForwarder",
						"nameLocation": "1506:18:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 762,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "1556:8:3"
						},
						"parameters": {
							"id": 761,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 760,
									"mutability": "mutable",
									"name": "forwarder",
									"nameLocation": "1533:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "1525:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 759,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1525:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1524:19:3"
						},
						"returnParameters": {
							"id": 765,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 764,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "1574:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 763,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1574:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1573:6:3"
						},
						"scope": 799,
						"src": "1497:127:3",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 797,
							"nodeType": "Block",
							"src": "1929:397:3",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"id": 786,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 781,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"expression": {
													"expression": {
														"id": 777,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1937:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1937:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"id": 779,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "length",
												"nodeType": "MemberAccess",
												"src": "1937:15:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": ">=",
											"rightExpression": {
												"hexValue": "3234",
												"id": 780,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1956:2:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"src": "1937:21:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "&&",
										"rightExpression": {
											"arguments": [
												{
													"expression": {
														"id": 783,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1981:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1981:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 782,
												"name": "isTrustedForwarder",
												"nodeType": "Identifier",
												"overloadedDeclarations": [771],
												"referencedDeclaration": 771,
												"src": "1962:18:3",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
													"typeString": "function (address) view returns (bool)"
												}
											},
											"id": 785,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1962:30:3",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"src": "1937:55:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 795,
										"nodeType": "Block",
										"src": "2287:36:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 791,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2307:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2307:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2299:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 789,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2299:8:3",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2299:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 776,
												"id": 794,
												"nodeType": "Return",
												"src": "2292:26:3"
											}
										]
									},
									"id": 796,
									"nodeType": "IfStatement",
									"src": "1933:390:3",
									"trueBody": {
										"id": 788,
										"nodeType": "Block",
										"src": "1994:287:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2213:64:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2219:53:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2230:2:3",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "calldatasize",
																							"nodeType": "YulIdentifier",
																							"src": "2251:12:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2251:14:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2267:2:3",
																						"type": "",
																						"value": "20"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2247:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2247:23:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2234:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:37:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2226:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:46:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2219:3:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 775,
														"isOffset": false,
														"isSlot": false,
														"src": "2219:3:3",
														"valueSize": 1
													}
												],
												"id": 787,
												"nodeType": "InlineAssembly",
												"src": "2204:73:3"
											}
										]
									}
								}
							]
						},
						"documentation": {
							"id": 772,
							"nodeType": "StructuredDocumentation",
							"src": "1627:226:3",
							"text": " return the sender of this call.\n if the call came through our trusted forwarder, return the original sender.\n otherwise, return `msg.sender`.\n should be used in the contract anywhere instead of msg.sender"
						},
						"id": 798,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_msgSender",
						"nameLocation": "1864:10:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 773,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1874:2:3"
						},
						"returnParameters": {
							"id": 776,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 775,
									"mutability": "mutable",
									"name": "ret",
									"nameLocation": "1924:3:3",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1908:19:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 774,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1908:15:3",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1907:21:3"
						},
						"scope": 799,
						"src": "1855:471:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "internal"
					}
				],
				"scope": 1402,
				"src": "1130:1198:3"
			},
			{
				"abstract": true,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 811,
				"linearizedBaseContracts": [811],
				"name": "Context",
				"nameLocation": "2348:7:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 809,
							"nodeType": "Block",
							"src": "2426:150:3",
							"statements": [
								{
									"expression": {
										"id": 804,
										"name": "this",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4294967268,
										"src": "2430:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$811",
											"typeString": "contract Context"
										}
									},
									"id": 805,
									"nodeType": "ExpressionStatement",
									"src": "2430:4:3"
								},
								{
									"expression": {
										"expression": {
											"id": 806,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "2564:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 807,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "data",
										"nodeType": "MemberAccess",
										"src": "2564:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_calldata_ptr",
											"typeString": "bytes calldata"
										}
									},
									"functionReturnParameters": 803,
									"id": 808,
									"nodeType": "Return",
									"src": "2557:15:3"
								}
							]
						},
						"id": 810,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_msgData",
						"nameLocation": "2368:8:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 800,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2376:2:3"
						},
						"returnParameters": {
							"id": 803,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "2410:14:3",
									"stateVariable": false,
									"storageLocation": "calldata",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_calldata_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 801,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "2410:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2409:16:3"
						},
						"scope": 811,
						"src": "2359:217:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "internal"
					}
				],
				"scope": 1402,
				"src": "2330:248:3"
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "interface",
				"documentation": {
					"id": 812,
					"nodeType": "StructuredDocumentation",
					"src": "2580:70:3",
					"text": " @dev Interface of the ERC20 standard as defined in the EIP."
				},
				"fullyImplemented": false,
				"id": 887,
				"linearizedBaseContracts": [887],
				"name": "IERC20",
				"nameLocation": "2661:6:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"documentation": {
							"id": 813,
							"nodeType": "StructuredDocumentation",
							"src": "2671:60:3",
							"text": " @dev Returns the amount of tokens in existence."
						},
						"functionSelector": "18160ddd",
						"id": 818,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "totalSupply",
						"nameLocation": "2742:11:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 814,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2753:2:3"
						},
						"returnParameters": {
							"id": 817,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 816,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 818,
									"src": "2779:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2779:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2778:9:3"
						},
						"scope": 887,
						"src": "2733:55:3",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 819,
							"nodeType": "StructuredDocumentation",
							"src": "2791:66:3",
							"text": " @dev Returns the amount of tokens owned by `account`."
						},
						"functionSelector": "70a08231",
						"id": 826,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "balanceOf",
						"nameLocation": "2868:9:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 822,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 821,
									"mutability": "mutable",
									"name": "account",
									"nameLocation": "2886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "2878:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 820,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2878:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2877:17:3"
						},
						"returnParameters": {
							"id": 825,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 824,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 826,
									"src": "2918:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 823,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2918:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2917:9:3"
						},
						"scope": 887,
						"src": "2859:68:3",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 827,
							"nodeType": "StructuredDocumentation",
							"src": "2930:191:3",
							"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
						},
						"functionSelector": "a9059cbb",
						"id": 836,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "transfer",
						"nameLocation": "3132:8:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 832,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 829,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "3149:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "3141:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 828,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3141:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 831,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "3168:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "3160:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3160:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3140:35:3"
						},
						"returnParameters": {
							"id": 835,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 836,
									"src": "3194:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 833,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3194:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3193:6:3"
						},
						"scope": 887,
						"src": "3123:77:3",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 837,
							"nodeType": "StructuredDocumentation",
							"src": "3203:246:3",
							"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
						},
						"functionSelector": "dd62ed3e",
						"id": 846,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "allowance",
						"nameLocation": "3460:9:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 842,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 839,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "3478:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 846,
									"src": "3470:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 838,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3470:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 841,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "3493:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 846,
									"src": "3485:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 840,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3485:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3469:32:3"
						},
						"returnParameters": {
							"id": 845,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 844,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 846,
									"src": "3525:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 843,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3525:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3524:9:3"
						},
						"scope": 887,
						"src": "3451:83:3",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 847,
							"nodeType": "StructuredDocumentation",
							"src": "3537:603:3",
							"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
						},
						"functionSelector": "095ea7b3",
						"id": 856,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "approve",
						"nameLocation": "4151:7:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 852,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 849,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "4167:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "4159:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 848,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4159:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 851,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "4184:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "4176:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 850,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4176:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4158:33:3"
						},
						"returnParameters": {
							"id": 855,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 854,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "4210:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 853,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4210:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4209:6:3"
						},
						"scope": 887,
						"src": "4142:74:3",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"documentation": {
							"id": 857,
							"nodeType": "StructuredDocumentation",
							"src": "4219:272:3",
							"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
						},
						"functionSelector": "23b872dd",
						"id": 868,
						"implemented": false,
						"kind": "function",
						"modifiers": [],
						"name": "transferFrom",
						"nameLocation": "4502:12:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 864,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 859,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "4526:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "4518:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 858,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4518:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 861,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "4544:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "4536:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 860,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4536:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 863,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "4565:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "4557:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 862,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4557:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4514:60:3"
						},
						"returnParameters": {
							"id": 867,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 866,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "4593:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 865,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4593:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4592:6:3"
						},
						"scope": 887,
						"src": "4493:106:3",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"anonymous": false,
						"documentation": {
							"id": 869,
							"nodeType": "StructuredDocumentation",
							"src": "4602:143:3",
							"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
						},
						"id": 877,
						"name": "Transfer",
						"nameLocation": "4753:8:3",
						"nodeType": "EventDefinition",
						"parameters": {
							"id": 876,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 871,
									"indexed": true,
									"mutability": "mutable",
									"name": "from",
									"nameLocation": "4778:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 877,
									"src": "4762:20:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 870,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4762:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 873,
									"indexed": true,
									"mutability": "mutable",
									"name": "to",
									"nameLocation": "4800:2:3",
									"nodeType": "VariableDeclaration",
									"scope": 877,
									"src": "4784:18:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 872,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4784:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 875,
									"indexed": false,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "4812:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 877,
									"src": "4804:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 874,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4804:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4761:57:3"
						},
						"src": "4747:72:3"
					},
					{
						"anonymous": false,
						"documentation": {
							"id": 878,
							"nodeType": "StructuredDocumentation",
							"src": "4822:139:3",
							"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
						},
						"id": 886,
						"name": "Approval",
						"nameLocation": "4969:8:3",
						"nodeType": "EventDefinition",
						"parameters": {
							"id": 885,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 880,
									"indexed": true,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "4994:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 886,
									"src": "4978:21:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 879,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4978:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 882,
									"indexed": true,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "5017:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 886,
									"src": "5001:23:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 881,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5001:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 884,
									"indexed": false,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "5034:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 886,
									"src": "5026:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 883,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5026:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4977:63:3"
						},
						"src": "4963:78:3"
					}
				],
				"scope": 1402,
				"src": "2651:2392:3"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 889,
							"name": "Context",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 811,
							"src": "6226:7:3"
						},
						"id": 890,
						"nodeType": "InheritanceSpecifier",
						"src": "6226:7:3"
					},
					{
						"baseName": {
							"id": 891,
							"name": "IERC20",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 887,
							"src": "6235:6:3"
						},
						"id": 892,
						"nodeType": "InheritanceSpecifier",
						"src": "6235:6:3"
					},
					{
						"baseName": {
							"id": 893,
							"name": "BaseRelayRecipient",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 799,
							"src": "6243:18:3"
						},
						"id": 894,
						"nodeType": "InheritanceSpecifier",
						"src": "6243:18:3"
					}
				],
				"contractDependencies": [738, 799, 811, 887],
				"contractKind": "contract",
				"documentation": {
					"id": 888,
					"nodeType": "StructuredDocumentation",
					"src": "5045:1162:3",
					"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
				},
				"fullyImplemented": true,
				"id": 1401,
				"linearizedBaseContracts": [1401, 799, 738, 887, 811],
				"name": "ERC20",
				"nameLocation": "6217:5:3",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 898,
						"mutability": "mutable",
						"name": "_balances",
						"nameLocation": "6301:9:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6265:45:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
							"typeString": "mapping(address => uint256)"
						},
						"typeName": {
							"id": 897,
							"keyType": {
								"id": 895,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6273:7:3",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "6265:27:3",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
								"typeString": "mapping(address => uint256)"
							},
							"valueType": {
								"id": 896,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6284:7:3",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 904,
						"mutability": "mutable",
						"name": "_allowances",
						"nameLocation": "6370:11:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6314:67:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
							"typeString": "mapping(address => mapping(address => uint256))"
						},
						"typeName": {
							"id": 903,
							"keyType": {
								"id": 899,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6322:7:3",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "6314:47:3",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
								"typeString": "mapping(address => mapping(address => uint256))"
							},
							"valueType": {
								"id": 902,
								"keyType": {
									"id": 900,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "6341:7:3",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"nodeType": "Mapping",
								"src": "6333:27:3",
								"typeDescriptions": {
									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
									"typeString": "mapping(address => uint256)"
								},
								"valueType": {
									"id": 901,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "6352:7:3",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								}
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 906,
						"mutability": "mutable",
						"name": "_totalSupply",
						"nameLocation": "6401:12:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6385:28:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 905,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "6385:7:3",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 908,
						"mutability": "mutable",
						"name": "_name",
						"nameLocation": "6432:5:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6417:20:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_string_storage",
							"typeString": "string"
						},
						"typeName": {
							"id": 907,
							"name": "string",
							"nodeType": "ElementaryTypeName",
							"src": "6417:6:3",
							"typeDescriptions": {
								"typeIdentifier": "t_string_storage_ptr",
								"typeString": "string"
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 910,
						"mutability": "mutable",
						"name": "_symbol",
						"nameLocation": "6455:7:3",
						"nodeType": "VariableDeclaration",
						"scope": 1401,
						"src": "6440:22:3",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_string_storage",
							"typeString": "string"
						},
						"typeName": {
							"id": 909,
							"name": "string",
							"nodeType": "ElementaryTypeName",
							"src": "6440:6:3",
							"typeDescriptions": {
								"typeIdentifier": "t_string_storage_ptr",
								"typeString": "string"
							}
						},
						"visibility": "private"
					},
					{
						"body": {
							"id": 932,
							"nodeType": "Block",
							"src": "6835:82:3",
							"statements": [
								{
									"expression": {
										"id": 922,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 920,
											"name": "_name",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 908,
											"src": "6839:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage",
												"typeString": "string storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 921,
											"name": "name_",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 913,
											"src": "6847:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_string_memory_ptr",
												"typeString": "string memory"
											}
										},
										"src": "6839:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"id": 923,
									"nodeType": "ExpressionStatement",
									"src": "6839:13:3"
								},
								{
									"expression": {
										"id": 926,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 924,
											"name": "_symbol",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 910,
											"src": "6856:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage",
												"typeString": "string storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 925,
											"name": "symbol_",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 915,
											"src": "6866:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_string_memory_ptr",
												"typeString": "string memory"
											}
										},
										"src": "6856:17:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"id": 927,
									"nodeType": "ExpressionStatement",
									"src": "6856:17:3"
								},
								{
									"expression": {
										"id": 930,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 928,
											"name": "trustedForwarder",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 743,
											"src": "6877:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 929,
											"name": "_trustedForwarder",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 917,
											"src": "6896:17:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "6877:36:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 931,
									"nodeType": "ExpressionStatement",
									"src": "6877:36:3"
								}
							]
						},
						"documentation": {
							"id": 911,
							"nodeType": "StructuredDocumentation",
							"src": "6466:275:3",
							"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."
						},
						"id": 933,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nameLocation": "-1:-1:-1",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 918,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 913,
									"mutability": "mutable",
									"name": "name_",
									"nameLocation": "6772:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "6758:19:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 912,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6758:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 915,
									"mutability": "mutable",
									"name": "symbol_",
									"nameLocation": "6795:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "6781:21:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 914,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6781:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 917,
									"mutability": "mutable",
									"name": "_trustedForwarder",
									"nameLocation": "6814:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 933,
									"src": "6806:25:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 916,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6806:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "6754:80:3"
						},
						"returnParameters": {
							"id": 919,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6835:0:3"
						},
						"scope": 1401,
						"src": "6743:174:3",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 941,
							"nodeType": "Block",
							"src": "7030:20:3",
							"statements": [
								{
									"expression": {
										"id": 939,
										"name": "_name",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 908,
										"src": "7041:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"functionReturnParameters": 938,
									"id": 940,
									"nodeType": "Return",
									"src": "7034:12:3"
								}
							]
						},
						"documentation": {
							"id": 934,
							"nodeType": "StructuredDocumentation",
							"src": "6920:48:3",
							"text": " @dev Returns the name of the token."
						},
						"functionSelector": "06fdde03",
						"id": 942,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "name",
						"nameLocation": "6979:4:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 935,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6983:2:3"
						},
						"returnParameters": {
							"id": 938,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 937,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 942,
									"src": "7015:13:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 936,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7015:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7014:15:3"
						},
						"scope": 1401,
						"src": "6970:80:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 950,
							"nodeType": "Block",
							"src": "7210:22:3",
							"statements": [
								{
									"expression": {
										"id": 948,
										"name": "_symbol",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 910,
										"src": "7221:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"functionReturnParameters": 947,
									"id": 949,
									"nodeType": "Return",
									"src": "7214:14:3"
								}
							]
						},
						"documentation": {
							"id": 943,
							"nodeType": "StructuredDocumentation",
							"src": "7053:93:3",
							"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
						},
						"functionSelector": "95d89b41",
						"id": 951,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "symbol",
						"nameLocation": "7157:6:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 944,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7163:2:3"
						},
						"returnParameters": {
							"id": 947,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 946,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 951,
									"src": "7195:13:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 945,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7195:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7194:15:3"
						},
						"scope": 1401,
						"src": "7148:84:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 959,
							"nodeType": "Block",
							"src": "7870:17:3",
							"statements": [
								{
									"expression": {
										"hexValue": "3138",
										"id": 957,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7881:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"functionReturnParameters": 956,
									"id": 958,
									"nodeType": "Return",
									"src": "7874:9:3"
								}
							]
						},
						"documentation": {
							"id": 952,
							"nodeType": "StructuredDocumentation",
							"src": "7235:577:3",
							"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
						},
						"functionSelector": "313ce567",
						"id": 960,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "decimals",
						"nameLocation": "7823:8:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 953,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7831:2:3"
						},
						"returnParameters": {
							"id": 956,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 955,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "7863:5:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 954,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "7863:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7862:7:3"
						},
						"scope": 1401,
						"src": "7814:73:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [818],
						"body": {
							"id": 969,
							"nodeType": "Block",
							"src": "8005:27:3",
							"statements": [
								{
									"expression": {
										"id": 967,
										"name": "_totalSupply",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 906,
										"src": "8016:12:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 966,
									"id": 968,
									"nodeType": "Return",
									"src": "8009:19:3"
								}
							]
						},
						"documentation": {
							"id": 961,
							"nodeType": "StructuredDocumentation",
							"src": "7890:43:3",
							"text": " @dev See {IERC20-totalSupply}."
						},
						"functionSelector": "18160ddd",
						"id": 970,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "totalSupply",
						"nameLocation": "7944:11:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 963,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "7978:8:3"
						},
						"parameters": {
							"id": 962,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7955:2:3"
						},
						"returnParameters": {
							"id": 966,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 965,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 970,
									"src": "7996:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 964,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7996:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7995:9:3"
						},
						"scope": 1401,
						"src": "7935:97:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [826],
						"body": {
							"id": 983,
							"nodeType": "Block",
							"src": "8161:33:3",
							"statements": [
								{
									"expression": {
										"baseExpression": {
											"id": 979,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 898,
											"src": "8172:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 981,
										"indexExpression": {
											"id": 980,
											"name": "account",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 973,
											"src": "8182:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "8172:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 978,
									"id": 982,
									"nodeType": "Return",
									"src": "8165:25:3"
								}
							]
						},
						"documentation": {
							"id": 971,
							"nodeType": "StructuredDocumentation",
							"src": "8035:41:3",
							"text": " @dev See {IERC20-balanceOf}."
						},
						"functionSelector": "70a08231",
						"id": 984,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "balanceOf",
						"nameLocation": "8087:9:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 975,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8134:8:3"
						},
						"parameters": {
							"id": 974,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 973,
									"mutability": "mutable",
									"name": "account",
									"nameLocation": "8105:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 984,
									"src": "8097:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 972,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8097:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8096:17:3"
						},
						"returnParameters": {
							"id": 978,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 977,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 984,
									"src": "8152:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 976,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8152:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8151:9:3"
						},
						"scope": 1401,
						"src": "8078:116:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [836],
						"body": {
							"id": 1004,
							"nodeType": "Block",
							"src": "8462:65:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 996,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "8476:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 997,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "8476:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"id": 998,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 987,
												"src": "8490:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 999,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 989,
												"src": "8501:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 995,
											"name": "_transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1235,
											"src": "8466:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1000,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8466:42:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1001,
									"nodeType": "ExpressionStatement",
									"src": "8466:42:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1002,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8519:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 994,
									"id": 1003,
									"nodeType": "Return",
									"src": "8512:11:3"
								}
							]
						},
						"documentation": {
							"id": 985,
							"nodeType": "StructuredDocumentation",
							"src": "8197:171:3",
							"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
						},
						"functionSelector": "a9059cbb",
						"id": 1005,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "transfer",
						"nameLocation": "8379:8:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 991,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8438:8:3"
						},
						"parameters": {
							"id": 990,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 987,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "8396:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "8388:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 986,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8388:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 989,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "8415:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "8407:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 988,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8407:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8387:35:3"
						},
						"returnParameters": {
							"id": 994,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 993,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "8456:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 992,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "8456:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8455:6:3"
						},
						"scope": 1401,
						"src": "8370:157:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [737],
						"body": {
							"id": 1013,
							"nodeType": "Block",
							"src": "8605:18:3",
							"statements": [
								{
									"expression": {
										"hexValue": "31",
										"id": 1011,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8616:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
											"typeString": "literal_string \"1\""
										},
										"value": "1"
									},
									"functionReturnParameters": 1010,
									"id": 1012,
									"nodeType": "Return",
									"src": "8609:10:3"
								}
							]
						},
						"functionSelector": "486ff0cd",
						"id": 1014,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "versionRecipient",
						"nameLocation": "8539:16:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1007,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8572:8:3"
						},
						"parameters": {
							"id": 1006,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8555:2:3"
						},
						"returnParameters": {
							"id": 1010,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1009,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "8590:13:3",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1008,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8590:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8589:15:3"
						},
						"scope": 1401,
						"src": "8530:93:3",
						"stateMutability": "pure",
						"virtual": false,
						"visibility": "external"
					},
					{
						"baseFunctions": [846],
						"body": {
							"id": 1031,
							"nodeType": "Block",
							"src": "8767:42:3",
							"statements": [
								{
									"expression": {
										"baseExpression": {
											"baseExpression": {
												"id": 1025,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 904,
												"src": "8778:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 1027,
											"indexExpression": {
												"id": 1026,
												"name": "owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1017,
												"src": "8790:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "8778:18:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1029,
										"indexExpression": {
											"id": 1028,
											"name": "spender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1019,
											"src": "8797:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "8778:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 1024,
									"id": 1030,
									"nodeType": "Return",
									"src": "8771:34:3"
								}
							]
						},
						"documentation": {
							"id": 1015,
							"nodeType": "StructuredDocumentation",
							"src": "8626:41:3",
							"text": " @dev See {IERC20-allowance}."
						},
						"functionSelector": "dd62ed3e",
						"id": 1032,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "allowance",
						"nameLocation": "8678:9:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1021,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8740:8:3"
						},
						"parameters": {
							"id": 1020,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1017,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "8696:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1032,
									"src": "8688:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1016,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8688:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1019,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "8711:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1032,
									"src": "8703:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1018,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8703:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8687:32:3"
						},
						"returnParameters": {
							"id": 1024,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1023,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1032,
									"src": "8758:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1022,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8758:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8757:9:3"
						},
						"scope": 1401,
						"src": "8669:140:3",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [856],
						"body": {
							"id": 1052,
							"nodeType": "Block",
							"src": "9012:62:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1044,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "9025:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1045,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "9025:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"id": 1046,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1035,
												"src": "9039:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1047,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1037,
												"src": "9048:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1043,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1389,
											"src": "9016:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1048,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9016:39:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1049,
									"nodeType": "ExpressionStatement",
									"src": "9016:39:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1050,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9066:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 1042,
									"id": 1051,
									"nodeType": "Return",
									"src": "9059:11:3"
								}
							]
						},
						"documentation": {
							"id": 1033,
							"nodeType": "StructuredDocumentation",
							"src": "8812:109:3",
							"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
						},
						"functionSelector": "095ea7b3",
						"id": 1053,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "approve",
						"nameLocation": "8932:7:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1039,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "8988:8:3"
						},
						"parameters": {
							"id": 1038,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1035,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "8948:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "8940:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1034,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8940:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1037,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "8965:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "8957:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1036,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8957:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8939:33:3"
						},
						"returnParameters": {
							"id": 1042,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1041,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1053,
									"src": "9006:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1040,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "9006:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "9005:6:3"
						},
						"scope": 1401,
						"src": "8923:151:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [868],
						"body": {
							"id": 1099,
							"nodeType": "Block",
							"src": "9620:269:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 1067,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "9634:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1068,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1058,
												"src": "9642:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1069,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1060,
												"src": "9653:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1066,
											"name": "_transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1235,
											"src": "9624:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1070,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9624:36:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1071,
									"nodeType": "ExpressionStatement",
									"src": "9624:36:3"
								},
								{
									"assignments": [1073],
									"declarations": [
										{
											"constant": false,
											"id": 1073,
											"mutability": "mutable",
											"name": "currentAllowance",
											"nameLocation": "9673:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 1099,
											"src": "9665:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1072,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9665:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1080,
									"initialValue": {
										"baseExpression": {
											"baseExpression": {
												"id": 1074,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 904,
												"src": "9692:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 1076,
											"indexExpression": {
												"id": 1075,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "9704:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "9692:19:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1079,
										"indexExpression": {
											"arguments": [],
											"expression": {
												"argumentTypes": [],
												"id": 1077,
												"name": "_msgSender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 798,
												"src": "9712:10:3",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
													"typeString": "function () view returns (address payable)"
												}
											},
											"id": 1078,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "9712:12:3",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "9692:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "9665:60:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1084,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1082,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1073,
													"src": "9737:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 1083,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "9757:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "9737:26:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
												"id": 1085,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "9765:42:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
													"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
												},
												"value": "ERC20: transfer amount exceeds allowance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
													"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
												}
											],
											"id": 1081,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "9729:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1086,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9729:79:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1087,
									"nodeType": "ExpressionStatement",
									"src": "9729:79:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 1089,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1056,
												"src": "9821:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1090,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "9829:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1091,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "9829:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1094,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1092,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1073,
													"src": "9843:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"id": 1093,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "9862:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "9843:25:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1088,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1389,
											"src": "9812:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1095,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9812:57:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1096,
									"nodeType": "ExpressionStatement",
									"src": "9812:57:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1097,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9881:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 1065,
									"id": 1098,
									"nodeType": "Return",
									"src": "9874:11:3"
								}
							]
						},
						"documentation": {
							"id": 1054,
							"nodeType": "StructuredDocumentation",
							"src": "9077:420:3",
							"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
						},
						"functionSelector": "23b872dd",
						"id": 1100,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "transferFrom",
						"nameLocation": "9508:12:3",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 1062,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "9596:8:3"
						},
						"parameters": {
							"id": 1061,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1056,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "9532:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1100,
									"src": "9524:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1055,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9524:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1058,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "9550:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1100,
									"src": "9542:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1057,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9542:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1060,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9571:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1100,
									"src": "9563:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1059,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9563:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "9520:60:3"
						},
						"returnParameters": {
							"id": 1065,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1064,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1100,
									"src": "9614:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1063,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "9614:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "9613:6:3"
						},
						"scope": 1401,
						"src": "9499:390:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 1126,
							"nodeType": "Block",
							"src": "10339:103:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1111,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "10352:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1112,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10352:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"id": 1113,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1103,
												"src": "10366:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1121,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1114,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "10375:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1117,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1115,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "10387:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10387:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10375:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1119,
													"indexExpression": {
														"id": 1118,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "10401:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10375:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "+",
												"rightExpression": {
													"id": 1120,
													"name": "addedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1105,
													"src": "10412:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "10375:47:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1110,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1389,
											"src": "10343:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1122,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10343:80:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1123,
									"nodeType": "ExpressionStatement",
									"src": "10343:80:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10434:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 1109,
									"id": 1125,
									"nodeType": "Return",
									"src": "10427:11:3"
								}
							]
						},
						"documentation": {
							"id": 1101,
							"nodeType": "StructuredDocumentation",
							"src": "9892:351:3",
							"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
						},
						"functionSelector": "39509351",
						"id": 1127,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "increaseAllowance",
						"nameLocation": "10254:17:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1106,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1103,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "10280:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1127,
									"src": "10272:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1102,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10272:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1105,
									"mutability": "mutable",
									"name": "addedValue",
									"nameLocation": "10297:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1127,
									"src": "10289:18:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10289:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "10271:37:3"
						},
						"returnParameters": {
							"id": 1109,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1108,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1127,
									"src": "10333:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1107,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10333:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "10332:6:3"
						},
						"scope": 1401,
						"src": "10245:197:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 1164,
							"nodeType": "Block",
							"src": "10983:245:3",
							"statements": [
								{
									"assignments": [1138],
									"declarations": [
										{
											"constant": false,
											"id": 1138,
											"mutability": "mutable",
											"name": "currentAllowance",
											"nameLocation": "10995:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "10987:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1137,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10987:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1145,
									"initialValue": {
										"baseExpression": {
											"baseExpression": {
												"id": 1139,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 904,
												"src": "11014:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 1142,
											"indexExpression": {
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1140,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "11026:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1141,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "11026:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "11014:25:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1144,
										"indexExpression": {
											"id": 1143,
											"name": "spender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1130,
											"src": "11040:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "11014:34:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "10987:61:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1149,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1147,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1138,
													"src": "11060:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 1148,
													"name": "subtractedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1132,
													"src": "11080:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "11060:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
												"id": 1150,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "11097:39:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
													"typeString": "literal_string \"ERC20: decreased allowance below zero\""
												},
												"value": "ERC20: decreased allowance below zero"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
													"typeString": "literal_string \"ERC20: decreased allowance below zero\""
												}
											],
											"id": 1146,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "11052:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1151,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11052:85:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1152,
									"nodeType": "ExpressionStatement",
									"src": "11052:85:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1154,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "11150:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
														"typeString": "function () view returns (address payable)"
													}
												},
												"id": 1155,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "11150:12:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											{
												"id": 1156,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1130,
												"src": "11164:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1159,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1157,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1138,
													"src": "11173:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"id": 1158,
													"name": "subtractedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1132,
													"src": "11192:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "11173:34:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1153,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1389,
											"src": "11141:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1160,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11141:67:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1161,
									"nodeType": "ExpressionStatement",
									"src": "11141:67:3"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 1162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11220:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 1136,
									"id": 1163,
									"nodeType": "Return",
									"src": "11213:11:3"
								}
							]
						},
						"documentation": {
							"id": 1128,
							"nodeType": "StructuredDocumentation",
							"src": "10445:437:3",
							"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
						},
						"functionSelector": "a457c2d7",
						"id": 1165,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "decreaseAllowance",
						"nameLocation": "10893:17:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1133,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1130,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "10919:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "10911:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1129,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10911:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1132,
									"mutability": "mutable",
									"name": "subtractedValue",
									"nameLocation": "10936:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "10928:23:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10928:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "10910:42:3"
						},
						"returnParameters": {
							"id": 1136,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1135,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "10977:4:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1134,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10977:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "10976:6:3"
						},
						"scope": 1401,
						"src": "10884:344:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 1234,
							"nodeType": "Block",
							"src": "11753:454:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1181,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1176,
													"name": "sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1168,
													"src": "11765:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11783:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11775:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1177,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11775:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11775:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "11765:20:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
												"id": 1182,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "11787:39:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
													"typeString": "literal_string \"ERC20: transfer from the zero address\""
												},
												"value": "ERC20: transfer from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
													"typeString": "literal_string \"ERC20: transfer from the zero address\""
												}
											],
											"id": 1175,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "11757:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1183,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11757:70:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1184,
									"nodeType": "ExpressionStatement",
									"src": "11757:70:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1191,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1186,
													"name": "recipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1170,
													"src": "11839:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11860:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11852:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1187,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11852:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "11839:23:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
												"id": 1192,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "11864:37:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
													"typeString": "literal_string \"ERC20: transfer to the zero address\""
												},
												"value": "ERC20: transfer to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
													"typeString": "literal_string \"ERC20: transfer to the zero address\""
												}
											],
											"id": 1185,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "11831:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1193,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11831:71:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1194,
									"nodeType": "ExpressionStatement",
									"src": "11831:71:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 1196,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1168,
												"src": "11928:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1197,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1170,
												"src": "11936:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1198,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1172,
												"src": "11947:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1195,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1400,
											"src": "11907:20:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1199,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "11907:47:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1200,
									"nodeType": "ExpressionStatement",
									"src": "11907:47:3"
								},
								{
									"assignments": [1202],
									"declarations": [
										{
											"constant": false,
											"id": 1202,
											"mutability": "mutable",
											"name": "senderBalance",
											"nameLocation": "11967:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 1234,
											"src": "11959:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1201,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11959:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1206,
									"initialValue": {
										"baseExpression": {
											"id": 1203,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 898,
											"src": "11983:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1205,
										"indexExpression": {
											"id": 1204,
											"name": "sender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1168,
											"src": "11993:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "11983:17:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "11959:41:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1210,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1208,
													"name": "senderBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1202,
													"src": "12012:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 1209,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1172,
													"src": "12029:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "12012:23:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
												"id": 1211,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "12037:40:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
													"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
												},
												"value": "ERC20: transfer amount exceeds balance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
													"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
												}
											],
											"id": 1207,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "12004:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1212,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12004:74:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1213,
									"nodeType": "ExpressionStatement",
									"src": "12004:74:3"
								},
								{
									"expression": {
										"id": 1220,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 1214,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 898,
												"src": "12082:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1216,
											"indexExpression": {
												"id": 1215,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1168,
												"src": "12092:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "12082:17:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1219,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1217,
												"name": "senderBalance",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1202,
												"src": "12102:13:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 1218,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1172,
												"src": "12118:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "12102:22:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "12082:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1221,
									"nodeType": "ExpressionStatement",
									"src": "12082:42:3"
								},
								{
									"expression": {
										"id": 1226,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 1222,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 898,
												"src": "12128:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1224,
											"indexExpression": {
												"id": 1223,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1170,
												"src": "12138:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "12128:20:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 1225,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1172,
											"src": "12152:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "12128:30:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1227,
									"nodeType": "ExpressionStatement",
									"src": "12128:30:3"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 1229,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1168,
												"src": "12177:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1230,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1170,
												"src": "12185:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1231,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1172,
												"src": "12196:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1228,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 877,
											"src": "12168:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1232,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12168:35:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1233,
									"nodeType": "EmitStatement",
									"src": "12163:40:3"
								}
							]
						},
						"documentation": {
							"id": 1166,
							"nodeType": "StructuredDocumentation",
							"src": "11231:424:3",
							"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
						},
						"id": 1235,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_transfer",
						"nameLocation": "11666:9:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1173,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "11687:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "11679:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1167,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11679:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "11705:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "11697:17:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1169,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11697:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1172,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "11726:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "11718:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11718:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "11675:60:3"
						},
						"returnParameters": {
							"id": 1174,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "11753:0:3"
						},
						"scope": 1401,
						"src": "11657:550:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1281,
							"nodeType": "Block",
							"src": "12513:232:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1249,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1244,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1238,
													"src": "12525:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12544:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12536:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1245,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12536:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12536:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "12525:21:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
												"id": 1250,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "12548:33:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
													"typeString": "literal_string \"ERC20: mint to the zero address\""
												},
												"value": "ERC20: mint to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
													"typeString": "literal_string \"ERC20: mint to the zero address\""
												}
											],
											"id": 1243,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "12517:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1251,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12517:65:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1252,
									"nodeType": "ExpressionStatement",
									"src": "12517:65:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12616:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "12608:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1254,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12608:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 1257,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "12608:10:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1258,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1238,
												"src": "12620:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1259,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1240,
												"src": "12629:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1253,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1400,
											"src": "12587:20:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1260,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12587:49:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1261,
									"nodeType": "ExpressionStatement",
									"src": "12587:49:3"
								},
								{
									"expression": {
										"id": 1264,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 1262,
											"name": "_totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 906,
											"src": "12641:12:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 1263,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1240,
											"src": "12657:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "12641:22:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1265,
									"nodeType": "ExpressionStatement",
									"src": "12641:22:3"
								},
								{
									"expression": {
										"id": 1270,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 1266,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 898,
												"src": "12667:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1268,
											"indexExpression": {
												"id": 1267,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1238,
												"src": "12677:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "12667:18:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 1269,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1240,
											"src": "12689:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "12667:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1271,
									"nodeType": "ExpressionStatement",
									"src": "12667:28:3"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12721:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "12713:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1273,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12713:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 1276,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "12713:10:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1277,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1238,
												"src": "12725:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1278,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1240,
												"src": "12734:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1272,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 877,
											"src": "12704:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1279,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12704:37:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1280,
									"nodeType": "EmitStatement",
									"src": "12699:42:3"
								}
							]
						},
						"documentation": {
							"id": 1236,
							"nodeType": "StructuredDocumentation",
							"src": "12210:236:3",
							"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
						},
						"id": 1282,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_mint",
						"nameLocation": "12457:5:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1241,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1238,
									"mutability": "mutable",
									"name": "account",
									"nameLocation": "12471:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1282,
									"src": "12463:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1237,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12463:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1240,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "12488:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1282,
									"src": "12480:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1239,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12480:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "12462:33:3"
						},
						"returnParameters": {
							"id": 1242,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "12513:0:3"
						},
						"scope": 1401,
						"src": "12448:297:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1343,
							"nodeType": "Block",
							"src": "13094:373:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1296,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1291,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1285,
													"src": "13106:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13125:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13117:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13117:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13117:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "13106:21:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
												"id": 1297,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "13129:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
													"typeString": "literal_string \"ERC20: burn from the zero address\""
												},
												"value": "ERC20: burn from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
													"typeString": "literal_string \"ERC20: burn from the zero address\""
												}
											],
											"id": 1290,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "13098:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1298,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13098:67:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1299,
									"nodeType": "ExpressionStatement",
									"src": "13098:67:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 1301,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1285,
												"src": "13191:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13208:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "13200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1302,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13200:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 1305,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "13200:10:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1306,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1287,
												"src": "13212:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1300,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1400,
											"src": "13170:20:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1307,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13170:49:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1308,
									"nodeType": "ExpressionStatement",
									"src": "13170:49:3"
								},
								{
									"assignments": [1310],
									"declarations": [
										{
											"constant": false,
											"id": 1310,
											"mutability": "mutable",
											"name": "accountBalance",
											"nameLocation": "13232:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 1343,
											"src": "13224:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13224:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 1314,
									"initialValue": {
										"baseExpression": {
											"id": 1311,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 898,
											"src": "13249:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 1313,
										"indexExpression": {
											"id": 1312,
											"name": "account",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1285,
											"src": "13259:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "13249:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "13224:43:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1318,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1316,
													"name": "accountBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1310,
													"src": "13279:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 1317,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1287,
													"src": "13297:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "13279:24:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
												"id": 1319,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "13305:36:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
													"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
												},
												"value": "ERC20: burn amount exceeds balance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
													"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
												}
											],
											"id": 1315,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "13271:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1320,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13271:71:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1321,
									"nodeType": "ExpressionStatement",
									"src": "13271:71:3"
								},
								{
									"expression": {
										"id": 1328,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 1322,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 898,
												"src": "13346:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1324,
											"indexExpression": {
												"id": 1323,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1285,
												"src": "13356:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "13346:18:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1327,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1325,
												"name": "accountBalance",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1310,
												"src": "13367:14:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 1326,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1287,
												"src": "13384:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "13367:23:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "13346:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1329,
									"nodeType": "ExpressionStatement",
									"src": "13346:44:3"
								},
								{
									"expression": {
										"id": 1332,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 1330,
											"name": "_totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 906,
											"src": "13394:12:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "-=",
										"rightHandSide": {
											"id": 1331,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1287,
											"src": "13410:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "13394:22:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1333,
									"nodeType": "ExpressionStatement",
									"src": "13394:22:3"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 1335,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1285,
												"src": "13435:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13452:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "13444:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1336,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13444:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 1339,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "13444:10:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1340,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1287,
												"src": "13456:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1334,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 877,
											"src": "13426:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1341,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13426:37:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1342,
									"nodeType": "EmitStatement",
									"src": "13421:42:3"
								}
							]
						},
						"documentation": {
							"id": 1283,
							"nodeType": "StructuredDocumentation",
							"src": "12748:279:3",
							"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
						},
						"id": 1344,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_burn",
						"nameLocation": "13038:5:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1288,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1285,
									"mutability": "mutable",
									"name": "account",
									"nameLocation": "13052:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1344,
									"src": "13044:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1284,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13044:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1287,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "13069:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1344,
									"src": "13061:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13061:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "13043:33:3"
						},
						"returnParameters": {
							"id": 1289,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "13094:0:3"
						},
						"scope": 1401,
						"src": "13029:438:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1388,
							"nodeType": "Block",
							"src": "13940:230:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1360,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1355,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1347,
													"src": "13952:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13969:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13961:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1356,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13961:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13961:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "13952:19:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
												"id": 1361,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "13973:38:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
													"typeString": "literal_string \"ERC20: approve from the zero address\""
												},
												"value": "ERC20: approve from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
													"typeString": "literal_string \"ERC20: approve from the zero address\""
												}
											],
											"id": 1354,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "13944:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1362,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "13944:68:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1363,
									"nodeType": "ExpressionStatement",
									"src": "13944:68:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 1370,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1365,
													"name": "spender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1349,
													"src": "14024:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14043:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1366,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14035:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14035:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "14024:21:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
												"id": 1371,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14047:36:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
													"typeString": "literal_string \"ERC20: approve to the zero address\""
												},
												"value": "ERC20: approve to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
													"typeString": "literal_string \"ERC20: approve to the zero address\""
												}
											],
											"id": 1364,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "14016:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 1372,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14016:68:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1373,
									"nodeType": "ExpressionStatement",
									"src": "14016:68:3"
								},
								{
									"expression": {
										"id": 1380,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"baseExpression": {
													"id": 1374,
													"name": "_allowances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "14089:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
														"typeString": "mapping(address => mapping(address => uint256))"
													}
												},
												"id": 1377,
												"indexExpression": {
													"id": 1375,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1347,
													"src": "14101:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "14089:18:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 1378,
											"indexExpression": {
												"id": 1376,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1349,
												"src": "14108:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "14089:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 1379,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1351,
											"src": "14119:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "14089:36:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 1381,
									"nodeType": "ExpressionStatement",
									"src": "14089:36:3"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 1383,
												"name": "owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1347,
												"src": "14143:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1384,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1349,
												"src": "14150:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 1385,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1351,
												"src": "14159:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1382,
											"name": "Approval",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 886,
											"src": "14134:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 1386,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14134:32:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 1387,
									"nodeType": "EmitStatement",
									"src": "14129:37:3"
								}
							]
						},
						"documentation": {
							"id": 1345,
							"nodeType": "StructuredDocumentation",
							"src": "13470:376:3",
							"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
						},
						"id": 1389,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_approve",
						"nameLocation": "13857:8:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1352,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1347,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "13877:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1389,
									"src": "13869:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1346,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13869:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1349,
									"mutability": "mutable",
									"name": "spender",
									"nameLocation": "13894:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1389,
									"src": "13886:15:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1348,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13886:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1351,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "13913:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1389,
									"src": "13905:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1350,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13905:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "13865:57:3"
						},
						"returnParameters": {
							"id": 1353,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "13940:0:3"
						},
						"scope": 1401,
						"src": "13848:322:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 1399,
							"nodeType": "Block",
							"src": "14810:2:3",
							"statements": []
						},
						"documentation": {
							"id": 1390,
							"nodeType": "StructuredDocumentation",
							"src": "14173:537:3",
							"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
						},
						"id": 1400,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_beforeTokenTransfer",
						"nameLocation": "14721:20:3",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1397,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1392,
									"mutability": "mutable",
									"name": "from",
									"nameLocation": "14753:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "14745:12:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1391,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14745:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1394,
									"mutability": "mutable",
									"name": "to",
									"nameLocation": "14769:2:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "14761:10:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1393,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14761:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1396,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "14783:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "14775:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1395,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14775:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "14741:51:3"
						},
						"returnParameters": {
							"id": 1398,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "14810:0:3"
						},
						"scope": 1401,
						"src": "14712:100:3",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					}
				],
				"scope": 1402,
				"src": "6208:8606:3"
			}
		],
		"src": "33:14782:3"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.3+commit.8d00100c.Emscripten.clang"
	},
	"networks": {},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-05-25T02:36:17.976Z",
	"devdoc": {
		"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
		"kind": "dev",
		"methods": {
			"allowance(address,address)": {
				"details": "See {IERC20-allowance}."
			},
			"approve(address,uint256)": {
				"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
			},
			"balanceOf(address)": {
				"details": "See {IERC20-balanceOf}."
			},
			"constructor": {
				"details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction."
			},
			"decimals()": {
				"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
			},
			"decreaseAllowance(address,uint256)": {
				"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
			},
			"increaseAllowance(address,uint256)": {
				"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
			},
			"name()": {
				"details": "Returns the name of the token."
			},
			"symbol()": {
				"details": "Returns the symbol of the token, usually a shorter version of the name."
			},
			"totalSupply()": {
				"details": "See {IERC20-totalSupply}."
			},
			"transfer(address,uint256)": {
				"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
			},
			"transferFrom(address,address,uint256)": {
				"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {
			"isTrustedForwarder(address)": {
				"notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
			},
			"versionRecipient()": {
				"notice": "return the sender of this call. if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes of the msg.data. otherwise, return `msg.sender` should be used in the contract anywhere instead of msg.sender"
			}
		},
		"version": 1
	}
}
