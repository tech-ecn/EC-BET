{
	"contractName": "Migrations",
	"abi": [
		{
			"inputs": [],
			"name": "last_completed_migration",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "completed",
					"type": "uint256"
				}
			],
			"name": "setCompleted",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"last_completed_migration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"completed\",\"type\":\"uint256\"}],\"name\":\"setCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/workecn/contracts/contracts/1_Migrations.sol\":\"Migrations\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/workecn/contracts/contracts/1_Migrations.sol\":{\"keccak256\":\"0x89317fdd336e3a57861fd06d3d273ce2d8abec6c13320f257346640b36d194ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://205a5fc976c8350618944269f05d051a2f1f99eb4c23340a99f5cc361bf03bad\",\"dweb:/ipfs/QmTEDU4ohnEnEkmEVBV2FXCYwdu5ryLWPCkGeFVm4pFUFp\"]},\"/workecn/contracts/contracts/3_ERC20.sol\":{\"keccak256\":\"0x40f6e9e47c59f296a6044b96d957e5873d966624a3dd4fc13ac744d3f888c3c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9858c5b349e2d0e0b27c768471923e59af9eb19d02f2799a6faa31f5c696be\",\"dweb:/ipfs/QmdrCXeATZNpq1wo9GuLNHVT4UW3zdKG5QkBGmfncKofmx\"]}},\"version\":1}",
	"bytecode": "0x6080604052600080546001600160a01b0319163317905534801561002257600080fd5b5061016f806100326000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063445df0ac146100465780638da5cb5b14610062578063fdacd5761461008d575b600080fd5b61004f60015481565b6040519081526020015b60405180910390f35b600054610075906001600160a01b031681565b6040516001600160a01b039091168152602001610059565b6100a061009b366004610121565b6100a2565b005b6000546001600160a01b0316331461011c5760405162461bcd60e51b815260206004820152603360248201527f546869732066756e6374696f6e206973207265737472696374656420746f207460448201527234329031b7b73a3930b1ba13b99037bbb732b960691b606482015260840160405180910390fd5b600155565b600060208284031215610132578081fd5b503591905056fea2646970667358221220f442c41f8daec3ec323946f564e84745764d90bc84bb000e01ef8790de05278464736f6c63430008030033",
	"deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063445df0ac146100465780638da5cb5b14610062578063fdacd5761461008d575b600080fd5b61004f60015481565b6040519081526020015b60405180910390f35b600054610075906001600160a01b031681565b6040516001600160a01b039091168152602001610059565b6100a061009b366004610121565b6100a2565b005b6000546001600160a01b0316331461011c5760405162461bcd60e51b815260206004820152603360248201527f546869732066756e6374696f6e206973207265737472696374656420746f207460448201527234329031b7b73a3930b1ba13b99037bbb732b960691b606482015260840160405180910390fd5b600155565b600060208284031215610132578081fd5b503591905056fea2646970667358221220f442c41f8daec3ec323946f564e84745764d90bc84bb000e01ef8790de05278464736f6c63430008030033",
	"immutableReferences": {},
	"generatedSources": [],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:1016:3",
				"statements": [
					{
						"nodeType": "YulBlock",
						"src": "6:3:3",
						"statements": []
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "84:120:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "130:26:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "139:6:3"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "147:6:3"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "132:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "132:22:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "132:22:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "105:7:3"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "114:9:3"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "101:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "101:23:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "126:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "97:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "97:32:3"
									},
									"nodeType": "YulIf",
									"src": "94:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "165:33:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "188:9:3"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "175:12:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "175:23:3"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "165:6:3"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "50:9:3",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "61:7:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "73:6:3",
								"type": ""
							}
						],
						"src": "14:190:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "310:102:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "320:26:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "332:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "343:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "328:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "328:18:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "320:4:3"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "362:9:3"
											},
											{
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "377:6:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "393:3:3",
																		"type": "",
																		"value": "160"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "398:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "389:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "389:11:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "402:1:3",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "385:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "385:19:3"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "373:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "373:32:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "355:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "355:51:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "355:51:3"
								}
							]
						},
						"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "279:9:3",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "290:6:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "301:4:3",
								"type": ""
							}
						],
						"src": "209:203:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "591:241:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "608:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "619:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "601:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "601:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "601:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "642:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "653:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "638:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "638:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "658:2:3",
												"type": "",
												"value": "51"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "631:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "631:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "631:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "681:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "692:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "677:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "677:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "697:34:3",
												"type": "",
												"value": "This function is restricted to t"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "670:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "670:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "670:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "752:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "763:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "748:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "748:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "768:21:3",
												"type": "",
												"value": "he contract's owner"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "741:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "741:49:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "741:49:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "799:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "811:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "822:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "807:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "807:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "799:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "568:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "582:4:3",
								"type": ""
							}
						],
						"src": "417:415:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "938:76:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "948:26:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "960:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "971:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "956:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "956:18:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "948:4:3"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "990:9:3"
											},
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1001:6:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "983:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "983:25:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "983:25:3"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "907:9:3",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "918:6:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "929:4:3",
								"type": ""
							}
						],
						"src": "837:177:3"
					}
				]
			},
			"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"This function is restricted to t\")\n        mstore(add(headStart, 96), \"he contract's owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
			"id": 3,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "83:328:0:-:0;;;106:33;;;-1:-1:-1;;;;;;106:33:0;129:10;106:33;;;83:328;;;;;;;;;;;;;;;;",
	"deployedSourceMap": "83:328:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;142:39;;;;;;;;;983:25:3;;;971:2;956:18;142:39:0;;;;;;;;106:33;;;;;-1:-1:-1;;;;;106:33:0;;;;;;-1:-1:-1;;;;;373:32:3;;;355:51;;343:2;328:18;106:33:0;310:102:3;306:103:0;;;;;;:::i;:::-;;:::i;:::-;;;233:5;;-1:-1:-1;;;;;233:5:0;219:10;:19;211:83;;;;-1:-1:-1;;;211:83:0;;619:2:3;211:83:0;;;601:21:3;658:2;638:18;;;631:30;697:34;677:18;;;670:62;-1:-1:-1;;;748:18:3;;;741:49;807:19;;211:83:0;;;;;;;;369:24:::1;:36:::0;306:103::o;14:190:3:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;-1:-1:-1;175:23:3;;84:120;-1:-1:-1;84:120:3:o",
	"source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.2;\n\nimport './3_ERC20.sol';\n\ncontract Migrations {\n\taddress public owner = msg.sender;\n\tuint256 public last_completed_migration;\n\n\tmodifier restricted() {\n\t\trequire(msg.sender == owner, \"This function is restricted to the contract's owner\");\n\t\t_;\n\t}\n\n\tfunction setCompleted(uint256 completed) public restricted {\n\t\tlast_completed_migration = completed;\n\t}\n}\n\ncontract TestToken is ERC20 {\n\tconstructor(address trustedForwarder_) ERC20('Test', 'TST', trustedForwarder_) {\n\t\t_mint(msg.sender, 100000 ether);\n\t\tapprove(msg.sender, 100000 ether);\n\t\tincreaseAllowance(msg.sender, 100000 ether);\n\t}\n\n\tfunction mint() public {\n\t\t_mint(msg.sender, 100000 ether);\n\t}\n}\n",
	"sourcePath": "/workecn/contracts/contracts/1_Migrations.sol",
	"ast": {
		"absolutePath": "/workecn/contracts/contracts/1_Migrations.sol",
		"exportedSymbols": {
			"BaseRelayRecipient": [756],
			"Context": [768],
			"ERC20": [1358],
			"IERC20": [844],
			"IRelayRecipient": [695],
			"Migrations": [33],
			"TestToken": [75]
		},
		"id": 76,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", ">=", "0.8", ".2"],
				"nodeType": "PragmaDirective",
				"src": "32:24:0"
			},
			{
				"absolutePath": "/workecn/contracts/contracts/3_ERC20.sol",
				"file": "./3_ERC20.sol",
				"id": 2,
				"nameLocation": "-1:-1:-1",
				"nodeType": "ImportDirective",
				"scope": 76,
				"sourceUnit": 1359,
				"src": "58:23:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 33,
				"linearizedBaseContracts": [33],
				"name": "Migrations",
				"nameLocation": "92:10:0",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"functionSelector": "8da5cb5b",
						"id": 6,
						"mutability": "mutable",
						"name": "owner",
						"nameLocation": "121:5:0",
						"nodeType": "VariableDeclaration",
						"scope": 33,
						"src": "106:33:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						},
						"typeName": {
							"id": 3,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "106:7:0",
							"stateMutability": "nonpayable",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"value": {
							"expression": {
								"id": 4,
								"name": "msg",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 4294967281,
								"src": "129:3:0",
								"typeDescriptions": {
									"typeIdentifier": "t_magic_message",
									"typeString": "msg"
								}
							},
							"id": 5,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "129:10:0",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "445df0ac",
						"id": 8,
						"mutability": "mutable",
						"name": "last_completed_migration",
						"nameLocation": "157:24:0",
						"nodeType": "VariableDeclaration",
						"scope": 33,
						"src": "142:39:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 7,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "142:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 19,
							"nodeType": "Block",
							"src": "207:96:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 14,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 11,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "219:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "219:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"id": 13,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "233:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "219:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "546869732066756e6374696f6e206973207265737472696374656420746f2074686520636f6e74726163742773206f776e6572",
												"id": 15,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "240:53:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
													"typeString": "literal_string \"This function is restricted to the contract's owner\""
												},
												"value": "This function is restricted to the contract's owner"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
													"typeString": "literal_string \"This function is restricted to the contract's owner\""
												}
											],
											"id": 10,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "211:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "211:83:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 17,
									"nodeType": "ExpressionStatement",
									"src": "211:83:0"
								},
								{
									"id": 18,
									"nodeType": "PlaceholderStatement",
									"src": "298:1:0"
								}
							]
						},
						"id": 20,
						"name": "restricted",
						"nameLocation": "194:10:0",
						"nodeType": "ModifierDefinition",
						"parameters": {
							"id": 9,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "204:2:0"
						},
						"src": "185:118:0",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 31,
							"nodeType": "Block",
							"src": "365:44:0",
							"statements": [
								{
									"expression": {
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 27,
											"name": "last_completed_migration",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 8,
											"src": "369:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 28,
											"name": "completed",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 22,
											"src": "396:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "369:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 30,
									"nodeType": "ExpressionStatement",
									"src": "369:36:0"
								}
							]
						},
						"functionSelector": "fdacd576",
						"id": 32,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 25,
								"kind": "modifierInvocation",
								"modifierName": {
									"id": 24,
									"name": "restricted",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 20,
									"src": "354:10:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "354:10:0"
							}
						],
						"name": "setCompleted",
						"nameLocation": "315:12:0",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 23,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "completed",
									"nameLocation": "336:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "328:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "327:19:0"
						},
						"returnParameters": {
							"id": 26,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "365:0:0"
						},
						"scope": 33,
						"src": "306:103:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 76,
				"src": "83:328:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 34,
							"name": "ERC20",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 1358,
							"src": "435:5:0"
						},
						"id": 35,
						"nodeType": "InheritanceSpecifier",
						"src": "435:5:0"
					}
				],
				"contractDependencies": [695, 756, 768, 844, 1358],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 75,
				"linearizedBaseContracts": [75, 1358, 756, 695, 844, 768],
				"name": "TestToken",
				"nameLocation": "422:9:0",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 63,
							"nodeType": "Block",
							"src": "523:123:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 46,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "533:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 47,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "533:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 48,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "545:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 45,
											"name": "_mint",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1239,
											"src": "527:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,uint256)"
											}
										},
										"id": 49,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "527:31:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 50,
									"nodeType": "ExpressionStatement",
									"src": "527:31:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 52,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "570:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 53,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "570:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 54,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "582:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 51,
											"name": "approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1010,
											"src": "562:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,uint256) returns (bool)"
											}
										},
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "562:33:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 56,
									"nodeType": "ExpressionStatement",
									"src": "562:33:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 58,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "617:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 59,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "617:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 60,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "629:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 57,
											"name": "increaseAllowance",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1084,
											"src": "599:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,uint256) returns (bool)"
											}
										},
										"id": 61,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "599:43:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 62,
									"nodeType": "ExpressionStatement",
									"src": "599:43:0"
								}
							]
						},
						"id": 64,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [
							{
								"arguments": [
									{
										"hexValue": "54657374",
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "489:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
											"typeString": "literal_string \"Test\""
										},
										"value": "Test"
									},
									{
										"hexValue": "545354",
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "497:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
											"typeString": "literal_string \"TST\""
										},
										"value": "TST"
									},
									{
										"id": 42,
										"name": "trustedForwarder_",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 37,
										"src": "504:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								],
								"id": 43,
								"modifierName": {
									"id": 39,
									"name": "ERC20",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1358,
									"src": "483:5:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "483:39:0"
							}
						],
						"name": "",
						"nameLocation": "-1:-1:-1",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 38,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "trustedForwarder_",
									"nameLocation": "464:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "456:25:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "456:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "455:27:0"
						},
						"returnParameters": {
							"id": 44,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "523:0:0"
						},
						"scope": 75,
						"src": "444:202:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 73,
							"nodeType": "Block",
							"src": "672:39:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 68,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "682:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 69,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "682:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 70,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "694:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 67,
											"name": "_mint",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1239,
											"src": "676:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,uint256)"
											}
										},
										"id": 71,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "676:31:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 72,
									"nodeType": "ExpressionStatement",
									"src": "676:31:0"
								}
							]
						},
						"functionSelector": "1249c58b",
						"id": 74,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "mint",
						"nameLocation": "658:4:0",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 65,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "662:2:0"
						},
						"returnParameters": {
							"id": 66,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "672:0:0"
						},
						"scope": 75,
						"src": "649:62:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 76,
				"src": "413:300:0"
			}
		],
		"src": "32:682:0"
	},
	"legacyAST": {
		"absolutePath": "/workecn/contracts/contracts/1_Migrations.sol",
		"exportedSymbols": {
			"BaseRelayRecipient": [756],
			"Context": [768],
			"ERC20": [1358],
			"IERC20": [844],
			"IRelayRecipient": [695],
			"Migrations": [33],
			"TestToken": [75]
		},
		"id": 76,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", ">=", "0.8", ".2"],
				"nodeType": "PragmaDirective",
				"src": "32:24:0"
			},
			{
				"absolutePath": "/workecn/contracts/contracts/3_ERC20.sol",
				"file": "./3_ERC20.sol",
				"id": 2,
				"nameLocation": "-1:-1:-1",
				"nodeType": "ImportDirective",
				"scope": 76,
				"sourceUnit": 1359,
				"src": "58:23:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 33,
				"linearizedBaseContracts": [33],
				"name": "Migrations",
				"nameLocation": "92:10:0",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"functionSelector": "8da5cb5b",
						"id": 6,
						"mutability": "mutable",
						"name": "owner",
						"nameLocation": "121:5:0",
						"nodeType": "VariableDeclaration",
						"scope": 33,
						"src": "106:33:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						},
						"typeName": {
							"id": 3,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "106:7:0",
							"stateMutability": "nonpayable",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"value": {
							"expression": {
								"id": 4,
								"name": "msg",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 4294967281,
								"src": "129:3:0",
								"typeDescriptions": {
									"typeIdentifier": "t_magic_message",
									"typeString": "msg"
								}
							},
							"id": 5,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "129:10:0",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "445df0ac",
						"id": 8,
						"mutability": "mutable",
						"name": "last_completed_migration",
						"nameLocation": "157:24:0",
						"nodeType": "VariableDeclaration",
						"scope": 33,
						"src": "142:39:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 7,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "142:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 19,
							"nodeType": "Block",
							"src": "207:96:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 14,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 11,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "219:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "219:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"id": 13,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "233:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "219:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "546869732066756e6374696f6e206973207265737472696374656420746f2074686520636f6e74726163742773206f776e6572",
												"id": 15,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "240:53:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
													"typeString": "literal_string \"This function is restricted to the contract's owner\""
												},
												"value": "This function is restricted to the contract's owner"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
													"typeString": "literal_string \"This function is restricted to the contract's owner\""
												}
											],
											"id": 10,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "211:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "211:83:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 17,
									"nodeType": "ExpressionStatement",
									"src": "211:83:0"
								},
								{
									"id": 18,
									"nodeType": "PlaceholderStatement",
									"src": "298:1:0"
								}
							]
						},
						"id": 20,
						"name": "restricted",
						"nameLocation": "194:10:0",
						"nodeType": "ModifierDefinition",
						"parameters": {
							"id": 9,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "204:2:0"
						},
						"src": "185:118:0",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 31,
							"nodeType": "Block",
							"src": "365:44:0",
							"statements": [
								{
									"expression": {
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 27,
											"name": "last_completed_migration",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 8,
											"src": "369:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 28,
											"name": "completed",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 22,
											"src": "396:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "369:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 30,
									"nodeType": "ExpressionStatement",
									"src": "369:36:0"
								}
							]
						},
						"functionSelector": "fdacd576",
						"id": 32,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 25,
								"kind": "modifierInvocation",
								"modifierName": {
									"id": 24,
									"name": "restricted",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 20,
									"src": "354:10:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "354:10:0"
							}
						],
						"name": "setCompleted",
						"nameLocation": "315:12:0",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 23,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "completed",
									"nameLocation": "336:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "328:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "327:19:0"
						},
						"returnParameters": {
							"id": 26,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "365:0:0"
						},
						"scope": 33,
						"src": "306:103:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 76,
				"src": "83:328:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 34,
							"name": "ERC20",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 1358,
							"src": "435:5:0"
						},
						"id": 35,
						"nodeType": "InheritanceSpecifier",
						"src": "435:5:0"
					}
				],
				"contractDependencies": [695, 756, 768, 844, 1358],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 75,
				"linearizedBaseContracts": [75, 1358, 756, 695, 844, 768],
				"name": "TestToken",
				"nameLocation": "422:9:0",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 63,
							"nodeType": "Block",
							"src": "523:123:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 46,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "533:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 47,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "533:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 48,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "545:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 45,
											"name": "_mint",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1239,
											"src": "527:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,uint256)"
											}
										},
										"id": 49,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "527:31:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 50,
									"nodeType": "ExpressionStatement",
									"src": "527:31:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 52,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "570:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 53,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "570:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 54,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "582:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 51,
											"name": "approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1010,
											"src": "562:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,uint256) returns (bool)"
											}
										},
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "562:33:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 56,
									"nodeType": "ExpressionStatement",
									"src": "562:33:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 58,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "617:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 59,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "617:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 60,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "629:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 57,
											"name": "increaseAllowance",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1084,
											"src": "599:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,uint256) returns (bool)"
											}
										},
										"id": 61,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "599:43:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 62,
									"nodeType": "ExpressionStatement",
									"src": "599:43:0"
								}
							]
						},
						"id": 64,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [
							{
								"arguments": [
									{
										"hexValue": "54657374",
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "489:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
											"typeString": "literal_string \"Test\""
										},
										"value": "Test"
									},
									{
										"hexValue": "545354",
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "497:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
											"typeString": "literal_string \"TST\""
										},
										"value": "TST"
									},
									{
										"id": 42,
										"name": "trustedForwarder_",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 37,
										"src": "504:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								],
								"id": 43,
								"modifierName": {
									"id": 39,
									"name": "ERC20",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1358,
									"src": "483:5:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "483:39:0"
							}
						],
						"name": "",
						"nameLocation": "-1:-1:-1",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 38,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "trustedForwarder_",
									"nameLocation": "464:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "456:25:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "456:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "455:27:0"
						},
						"returnParameters": {
							"id": 44,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "523:0:0"
						},
						"scope": 75,
						"src": "444:202:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 73,
							"nodeType": "Block",
							"src": "672:39:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 68,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "682:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 69,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "682:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 70,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "694:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 67,
											"name": "_mint",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1239,
											"src": "676:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,uint256)"
											}
										},
										"id": 71,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "676:31:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 72,
									"nodeType": "ExpressionStatement",
									"src": "676:31:0"
								}
							]
						},
						"functionSelector": "1249c58b",
						"id": 74,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "mint",
						"nameLocation": "658:4:0",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 65,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "662:2:0"
						},
						"returnParameters": {
							"id": 66,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "672:0:0"
						},
						"scope": 75,
						"src": "649:62:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 76,
				"src": "413:300:0"
			}
		],
		"src": "32:682:0"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.3+commit.8d00100c.Emscripten.clang"
	},
	"networks": {
		"80001": {
			"events": {},
			"links": {},
			"address": "0xBed67BeB1e813E4B3b850FAD7D5fcBC053489816",
			"transactionHash": "0x67075cce9784f4162f411fd48aa754c498b71f14ced09fef2eee4a55e2566ea9"
		}
	},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-05-25T05:00:31.340Z",
	"networkType": "ethereum",
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	}
}
