{
	"contractName": "TestToken",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "trustedForwarder_",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "subtractedValue",
					"type": "uint256"
				}
			],
			"name": "decreaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "addedValue",
					"type": "uint256"
				}
			],
			"name": "increaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "forwarder",
					"type": "address"
				}
			],
			"name": "isTrustedForwarder",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "recipient",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "recipient",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "trustedForwarder",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "versionRecipient",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "pure",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "mint",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"},\"versionRecipient()\":{\"notice\":\"return the sender of this call. if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes of the msg.data. otherwise, return `msg.sender` should be used in the contract anywhere instead of msg.sender\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/workecn/contracts/contracts/1_Migrations.sol\":\"TestToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/workecn/contracts/contracts/1_Migrations.sol\":{\"keccak256\":\"0x89317fdd336e3a57861fd06d3d273ce2d8abec6c13320f257346640b36d194ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://205a5fc976c8350618944269f05d051a2f1f99eb4c23340a99f5cc361bf03bad\",\"dweb:/ipfs/QmTEDU4ohnEnEkmEVBV2FXCYwdu5ryLWPCkGeFVm4pFUFp\"]},\"/workecn/contracts/contracts/3_ERC20.sol\":{\"keccak256\":\"0x40f6e9e47c59f296a6044b96d957e5873d966624a3dd4fc13ac744d3f888c3c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9858c5b349e2d0e0b27c768471923e59af9eb19d02f2799a6faa31f5c696be\",\"dweb:/ipfs/QmdrCXeATZNpq1wo9GuLNHVT4UW3zdKG5QkBGmfncKofmx\"]}},\"version\":1}",
	"bytecode": "0x60806040523480156200001157600080fd5b506040516200105238038062001052833981016040819052620000349162000470565b60408051808201825260048082526315195cdd60e21b6020808401918252845180860190955260038552621514d560ea1b90850152825192939285926200007d929091620003ca565b50815162000093906005906020850190620003ca565b50600080546001600160a01b0319166001600160a01b039290921691909117905550620000cd90503369152d02c7e14af680000062000102565b620000e33369152d02c7e14af6800000620001eb565b50620000fa3369152d02c7e14af68000006200020c565b505062000502565b6001600160a01b0382166200015e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b8060036000828254620001729190620004a0565b90915550506001600160a01b03821660009081526001602052604081208054839290620001a1908490620004a0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600062000203620001fb62000268565b8484620002a2565b50600192915050565b6000620002036200021c62000268565b8484600260006200022c62000268565b6001600160a01b03908116825260208083019390935260409182016000908120918b1681529252902054620002629190620004a0565b620002a2565b6000601836108015906200028657506000546001600160a01b031633145b156200029c575060131936013560601c6200029f565b50335b90565b6001600160a01b038316620003065760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840162000155565b6001600160a01b038216620003695760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000155565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b828054620003d890620004c5565b90600052602060002090601f016020900481019282620003fc576000855562000447565b82601f106200041757805160ff191683800117855562000447565b8280016001018555821562000447579182015b82811115620004475782518255916020019190600101906200042a565b506200045592915062000459565b5090565b5b808211156200045557600081556001016200045a565b60006020828403121562000482578081fd5b81516001600160a01b038116811462000499578182fd5b9392505050565b60008219821115620004c057634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680620004da57607f821691505b60208210811415620004fc57634e487b7160e01b600052602260045260246000fd5b50919050565b610b4080620005126000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063486ff0cd1161009757806395d89b411161006657806395d89b4114610210578063a457c2d714610218578063a9059cbb1461022b578063dd62ed3e1461023e576100f5565b8063486ff0cd1461018c578063572b6c05146101a957806370a08231146101bc5780637da0a877146101e5576100f5565b806318160ddd116100d357806318160ddd1461014557806323b872dd14610157578063313ce5671461016a5780633950935114610179576100f5565b806306fdde03146100fa578063095ea7b3146101185780631249c58b1461013b575b600080fd5b610102610277565b60405161010f9190610a37565b60405180910390f35b61012b610126366004610a0e565b61030a565b604051901515815260200161010f565b610143610327565b005b6003545b60405190815260200161010f565b61012b6101653660046109d3565b61033d565b6040516012815260200161010f565b61012b610187366004610a0e565b61041a565b6040805180820190915260018152603160f81b6020820152610102565b61012b6101b7366004610980565b610469565b6101496101ca366004610980565b6001600160a01b031660009081526001602052604090205490565b6000546101f8906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b610102610480565b61012b610226366004610a0e565b61048f565b61012b610239366004610a0e565b610548565b61014961024c3660046109a1565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60606004805461028690610ab9565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290610ab9565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b505050505090505b90565b600061031e61031761055c565b848461058e565b50600192915050565b61033b3369152d02c7e14af68000006106b2565b565b600061034a848484610791565b6001600160a01b03841660009081526002602052604081208161036b61055c565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103f45760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61040f8561040061055c565b61040a8685610aa2565b61058e565b506001949350505050565b600061031e61042761055c565b84846002600061043561055c565b6001600160a01b03908116825260208083019390935260409182016000908120918b168152925290205461040a9190610a8a565b6000546001600160a01b038281169116145b919050565b60606005805461028690610ab9565b6000806002600061049e61055c565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156105285760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103eb565b61053e61053361055c565b8561040a8685610aa2565b5060019392505050565b600061031e61055561055c565b8484610791565b600060183610801590610573575061057333610469565b15610587575060131936013560601c610307565b5033610307565b6001600160a01b0383166105f05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103eb565b6001600160a01b0382166106515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103eb565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166107085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103eb565b806003600082825461071a9190610a8a565b90915550506001600160a01b03821660009081526001602052604081208054839290610747908490610a8a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166107f55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103eb565b6001600160a01b0382166108575760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103eb565b6001600160a01b038316600090815260016020526040902054818110156108cf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103eb565b6108d98282610aa2565b6001600160a01b03808616600090815260016020526040808220939093559085168152908120805484929061090f908490610a8a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161095b91815260200190565b60405180910390a350505050565b80356001600160a01b038116811461047b57600080fd5b600060208284031215610991578081fd5b61099a82610969565b9392505050565b600080604083850312156109b3578081fd5b6109bc83610969565b91506109ca60208401610969565b90509250929050565b6000806000606084860312156109e7578081fd5b6109f084610969565b92506109fe60208501610969565b9150604084013590509250925092565b60008060408385031215610a20578182fd5b610a2983610969565b946020939093013593505050565b6000602080835283518082850152825b81811015610a6357858101830151858201604001528201610a47565b81811115610a745783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a9d57610a9d610af4565b500190565b600082821015610ab457610ab4610af4565b500390565b600181811c90821680610acd57607f821691505b60208210811415610aee57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205f8ecd6a5ad2c3a1723a769fa29bf97e23e31adea389c99fbc1f8cf0e4badc5564736f6c63430008030033",
	"deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063486ff0cd1161009757806395d89b411161006657806395d89b4114610210578063a457c2d714610218578063a9059cbb1461022b578063dd62ed3e1461023e576100f5565b8063486ff0cd1461018c578063572b6c05146101a957806370a08231146101bc5780637da0a877146101e5576100f5565b806318160ddd116100d357806318160ddd1461014557806323b872dd14610157578063313ce5671461016a5780633950935114610179576100f5565b806306fdde03146100fa578063095ea7b3146101185780631249c58b1461013b575b600080fd5b610102610277565b60405161010f9190610a37565b60405180910390f35b61012b610126366004610a0e565b61030a565b604051901515815260200161010f565b610143610327565b005b6003545b60405190815260200161010f565b61012b6101653660046109d3565b61033d565b6040516012815260200161010f565b61012b610187366004610a0e565b61041a565b6040805180820190915260018152603160f81b6020820152610102565b61012b6101b7366004610980565b610469565b6101496101ca366004610980565b6001600160a01b031660009081526001602052604090205490565b6000546101f8906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b610102610480565b61012b610226366004610a0e565b61048f565b61012b610239366004610a0e565b610548565b61014961024c3660046109a1565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60606004805461028690610ab9565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290610ab9565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b505050505090505b90565b600061031e61031761055c565b848461058e565b50600192915050565b61033b3369152d02c7e14af68000006106b2565b565b600061034a848484610791565b6001600160a01b03841660009081526002602052604081208161036b61055c565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103f45760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61040f8561040061055c565b61040a8685610aa2565b61058e565b506001949350505050565b600061031e61042761055c565b84846002600061043561055c565b6001600160a01b03908116825260208083019390935260409182016000908120918b168152925290205461040a9190610a8a565b6000546001600160a01b038281169116145b919050565b60606005805461028690610ab9565b6000806002600061049e61055c565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156105285760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103eb565b61053e61053361055c565b8561040a8685610aa2565b5060019392505050565b600061031e61055561055c565b8484610791565b600060183610801590610573575061057333610469565b15610587575060131936013560601c610307565b5033610307565b6001600160a01b0383166105f05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103eb565b6001600160a01b0382166106515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103eb565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166107085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103eb565b806003600082825461071a9190610a8a565b90915550506001600160a01b03821660009081526001602052604081208054839290610747908490610a8a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166107f55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103eb565b6001600160a01b0382166108575760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103eb565b6001600160a01b038316600090815260016020526040902054818110156108cf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103eb565b6108d98282610aa2565b6001600160a01b03808616600090815260016020526040808220939093559085168152908120805484929061090f908490610a8a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161095b91815260200190565b60405180910390a350505050565b80356001600160a01b038116811461047b57600080fd5b600060208284031215610991578081fd5b61099a82610969565b9392505050565b600080604083850312156109b3578081fd5b6109bc83610969565b91506109ca60208401610969565b90509250929050565b6000806000606084860312156109e7578081fd5b6109f084610969565b92506109fe60208501610969565b9150604084013590509250925092565b60008060408385031215610a20578182fd5b610a2983610969565b946020939093013593505050565b6000602080835283518082850152825b81811015610a6357858101830151858201604001528201610a47565b81811115610a745783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a9d57610a9d610af4565b500190565b600082821015610ab457610ab4610af4565b500390565b600181811c90821680610acd57607f821691505b60208210811415610aee57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205f8ecd6a5ad2c3a1723a769fa29bf97e23e31adea389c99fbc1f8cf0e4badc5564736f6c63430008030033",
	"immutableReferences": {},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:2295:3",
				"statements": [
					{
						"nodeType": "YulBlock",
						"src": "6:3:3",
						"statements": []
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "95:229:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "141:26:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "150:6:3"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "158:6:3"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "143:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "143:22:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "143:22:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "116:7:3"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "125:9:3"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "112:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "112:23:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "137:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "108:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "108:32:3"
									},
									"nodeType": "YulIf",
									"src": "105:2:3"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "176:29:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "195:9:3"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "189:5:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "189:16:3"
									},
									"variables": [
										{
											"name": "value",
											"nodeType": "YulTypedName",
											"src": "180:5:3",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "268:26:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "277:6:3"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "285:6:3"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "270:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "270:22:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "270:22:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "227:5:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "238:5:3"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "253:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "249:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "249:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "245:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "245:19:3"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "234:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "234:31:3"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "224:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "224:42:3"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "217:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "217:50:3"
									},
									"nodeType": "YulIf",
									"src": "214:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "303:15:3",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "313:5:3"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "303:6:3"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_address_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "61:9:3",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "72:7:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "84:6:3",
								"type": ""
							}
						],
						"src": "14:310:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "503:224:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "520:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "531:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "513:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "513:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "513:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "554:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "565:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "550:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "550:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "570:2:3",
												"type": "",
												"value": "34"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "543:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "543:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "543:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "593:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "604:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "589:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "589:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "609:34:3",
												"type": "",
												"value": "ERC20: approve to the zero addre"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "582:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "582:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "582:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "664:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "675:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "660:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "660:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "680:4:3",
												"type": "",
												"value": "ss"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "653:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "653:32:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "653:32:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "694:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "706:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "717:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "702:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "702:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "694:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "480:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "494:4:3",
								"type": ""
							}
						],
						"src": "329:398:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "906:226:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "923:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "934:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "916:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "916:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "916:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "957:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "968:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "953:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "953:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "973:2:3",
												"type": "",
												"value": "36"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "946:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "946:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "946:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "996:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1007:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "992:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "992:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "1012:34:3",
												"type": "",
												"value": "ERC20: approve from the zero add"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "985:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "985:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "985:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1067:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1078:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1063:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1063:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "1083:6:3",
												"type": "",
												"value": "ress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1056:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1056:34:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1056:34:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1099:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1111:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1122:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1107:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1107:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1099:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "883:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "897:4:3",
								"type": ""
							}
						],
						"src": "732:400:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1311:181:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1328:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1339:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1321:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1321:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1321:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1362:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1373:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1358:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1358:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1378:2:3",
												"type": "",
												"value": "31"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1351:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1351:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1351:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1401:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1412:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1397:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1397:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "1417:33:3",
												"type": "",
												"value": "ERC20: mint to the zero address"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1390:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1390:61:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1390:61:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1460:26:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1472:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1483:2:3",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1468:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1468:18:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1460:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1288:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1302:4:3",
								"type": ""
							}
						],
						"src": "1137:355:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1598:76:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1608:26:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1620:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1631:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1616:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1616:18:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1608:4:3"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1650:9:3"
											},
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1661:6:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1643:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1643:25:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1643:25:3"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1567:9:3",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1578:6:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1589:4:3",
								"type": ""
							}
						],
						"src": "1497:177:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1727:181:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1762:115:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "sum",
															"nodeType": "YulIdentifier",
															"src": "1783:3:3"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1792:3:3",
																	"type": "",
																	"value": "224"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1797:10:3",
																	"type": "",
																	"value": "0x4e487b71"
																}
															],
															"functionName": {
																"name": "shl",
																"nodeType": "YulIdentifier",
																"src": "1788:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "1788:20:3"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "1776:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "1776:33:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1776:33:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1829:1:3",
															"type": "",
															"value": "4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1832:4:3",
															"type": "",
															"value": "0x11"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "1822:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "1822:15:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1822:15:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"name": "sum",
															"nodeType": "YulIdentifier",
															"src": "1857:3:3"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1862:4:3",
															"type": "",
															"value": "0x24"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1850:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "1850:17:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1850:17:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "1743:1:3"
											},
											{
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "1750:1:3"
													}
												],
												"functionName": {
													"name": "not",
													"nodeType": "YulIdentifier",
													"src": "1746:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1746:6:3"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "1740:2:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1740:13:3"
									},
									"nodeType": "YulIf",
									"src": "1737:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1886:16:3",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "1897:1:3"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "1900:1:3"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1893:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1893:9:3"
									},
									"variableNames": [
										{
											"name": "sum",
											"nodeType": "YulIdentifier",
											"src": "1886:3:3"
										}
									]
								}
							]
						},
						"name": "checked_add_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "1710:1:3",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "1713:1:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "sum",
								"nodeType": "YulTypedName",
								"src": "1719:3:3",
								"type": ""
							}
						],
						"src": "1679:229:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1968:325:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1978:22:3",
									"value": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1992:1:3",
												"type": "",
												"value": "1"
											},
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "1995:4:3"
											}
										],
										"functionName": {
											"name": "shr",
											"nodeType": "YulIdentifier",
											"src": "1988:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1988:12:3"
									},
									"variableNames": [
										{
											"name": "length",
											"nodeType": "YulIdentifier",
											"src": "1978:6:3"
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "2009:38:3",
									"value": {
										"arguments": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "2039:4:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2045:1:3",
												"type": "",
												"value": "1"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "2035:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2035:12:3"
									},
									"variables": [
										{
											"name": "outOfPlaceEncoding",
											"nodeType": "YulTypedName",
											"src": "2013:18:3",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2086:31:3",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "2088:27:3",
												"value": {
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "2102:6:3"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2110:4:3",
															"type": "",
															"value": "0x7f"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "2098:3:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "2098:17:3"
												},
												"variableNames": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "2088:6:3"
													}
												]
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "2066:18:3"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "2059:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2059:26:3"
									},
									"nodeType": "YulIf",
									"src": "2056:2:3"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2176:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2197:1:3",
															"type": "",
															"value": "0"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2204:3:3",
																	"type": "",
																	"value": "224"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2209:10:3",
																	"type": "",
																	"value": "0x4e487b71"
																}
															],
															"functionName": {
																"name": "shl",
																"nodeType": "YulIdentifier",
																"src": "2200:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2200:20:3"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2190:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "2190:31:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2190:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2241:1:3",
															"type": "",
															"value": "4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2244:4:3",
															"type": "",
															"value": "0x22"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2234:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "2234:15:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2234:15:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2269:1:3",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2272:4:3",
															"type": "",
															"value": "0x24"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "2262:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "2262:15:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2262:15:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "2132:18:3"
											},
											{
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "2155:6:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2163:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "2152:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2152:14:3"
											}
										],
										"functionName": {
											"name": "eq",
											"nodeType": "YulIdentifier",
											"src": "2129:2:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2129:38:3"
									},
									"nodeType": "YulIf",
									"src": "2126:2:3"
								}
							]
						},
						"name": "extract_byte_array_length",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "data",
								"nodeType": "YulTypedName",
								"src": "1948:4:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "1957:6:3",
								"type": ""
							}
						],
						"src": "1913:380:3"
					}
				]
			},
			"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
			"id": 3,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:6636:3",
				"statements": [
					{
						"nodeType": "YulBlock",
						"src": "6:3:3",
						"statements": []
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "63:124:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "73:29:3",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "95:6:3"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "82:12:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "82:20:3"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "73:5:3"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "165:16:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "174:1:3",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "177:1:3",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "167:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "167:12:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "167:12:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "124:5:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "135:5:3"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "150:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "155:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "146:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "146:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "159:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "142:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:19:3"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "131:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "131:31:3"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "121:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "121:42:3"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "114:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "114:50:3"
									},
									"nodeType": "YulIf",
									"src": "111:2:3"
								}
							]
						},
						"name": "abi_decode_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "42:6:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "53:5:3",
								"type": ""
							}
						],
						"src": "14:173:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "262:126:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "308:26:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "317:6:3"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "325:6:3"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "310:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "310:22:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "310:22:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "283:7:3"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "292:9:3"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "279:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "279:23:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "304:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "275:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "275:32:3"
									},
									"nodeType": "YulIf",
									"src": "272:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "343:39:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "372:9:3"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "353:18:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "353:29:3"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "343:6:3"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "228:9:3",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "239:7:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "251:6:3",
								"type": ""
							}
						],
						"src": "192:196:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "480:183:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "526:26:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "535:6:3"
														},
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "543:6:3"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "528:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "528:22:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "528:22:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "501:7:3"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "510:9:3"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "497:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "497:23:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "522:2:3",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "493:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "493:32:3"
									},
									"nodeType": "YulIf",
									"src": "490:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "561:39:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "590:9:3"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "571:18:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "571:29:3"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "561:6:3"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "609:48:3",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "642:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "653:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "638:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "638:18:3"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "619:18:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "619:38:3"
									},
									"variableNames": [
										{
											"name": "value1",
											"nodeType": "YulIdentifier",
											"src": "609:6:3"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "438:9:3",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "449:7:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "461:6:3",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "469:6:3",
								"type": ""
							}
						],
						"src": "393:270:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "772:234:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "818:26:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "827:6:3"
														},
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "835:6:3"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "820:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "820:22:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "820:22:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "793:7:3"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "802:9:3"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "789:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "789:23:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "814:2:3",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "785:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "785:32:3"
									},
									"nodeType": "YulIf",
									"src": "782:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "853:39:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "882:9:3"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "863:18:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "863:29:3"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "853:6:3"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "901:48:3",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "934:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "945:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "930:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "930:18:3"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "911:18:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "911:38:3"
									},
									"variableNames": [
										{
											"name": "value1",
											"nodeType": "YulIdentifier",
											"src": "901:6:3"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "958:42:3",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "985:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "996:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "981:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "981:18:3"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "968:12:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "968:32:3"
									},
									"variableNames": [
										{
											"name": "value2",
											"nodeType": "YulIdentifier",
											"src": "958:6:3"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_addresst_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "722:9:3",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "733:7:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "745:6:3",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "753:6:3",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "761:6:3",
								"type": ""
							}
						],
						"src": "668:338:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1098:177:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1144:26:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1153:6:3"
														},
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1161:6:3"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1146:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "1146:22:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1146:22:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1119:7:3"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1128:9:3"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1115:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1115:23:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1140:2:3",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1111:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1111:32:3"
									},
									"nodeType": "YulIf",
									"src": "1108:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1179:39:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1208:9:3"
											}
										],
										"functionName": {
											"name": "abi_decode_address",
											"nodeType": "YulIdentifier",
											"src": "1189:18:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1189:29:3"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "1179:6:3"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "1227:42:3",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1254:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1265:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1250:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1250:18:3"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "1237:12:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1237:32:3"
									},
									"variableNames": [
										{
											"name": "value1",
											"nodeType": "YulIdentifier",
											"src": "1227:6:3"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1056:9:3",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1067:7:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1079:6:3",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "1087:6:3",
								"type": ""
							}
						],
						"src": "1011:264:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1381:102:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1391:26:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1403:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1414:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1399:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1399:18:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1391:4:3"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1433:9:3"
											},
											{
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1448:6:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1464:3:3",
																		"type": "",
																		"value": "160"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1469:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:11:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1473:1:3",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1456:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1456:19:3"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "1444:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1444:32:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1426:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1426:51:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1426:51:3"
								}
							]
						},
						"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1350:9:3",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1361:6:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1372:4:3",
								"type": ""
							}
						],
						"src": "1280:203:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1583:92:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1593:26:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1605:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1616:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1601:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1601:18:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1593:4:3"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1635:9:3"
											},
											{
												"arguments": [
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1660:6:3"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "1653:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1653:14:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1646:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1646:22:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1628:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1628:41:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1628:41:3"
								}
							]
						},
						"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1552:9:3",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1563:6:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1574:4:3",
								"type": ""
							}
						],
						"src": "1488:187:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1801:482:3",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1811:12:3",
									"value": {
										"kind": "number",
										"nodeType": "YulLiteral",
										"src": "1821:2:3",
										"type": "",
										"value": "32"
									},
									"variables": [
										{
											"name": "_1",
											"nodeType": "YulTypedName",
											"src": "1815:2:3",
											"type": ""
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1839:9:3"
											},
											{
												"name": "_1",
												"nodeType": "YulIdentifier",
												"src": "1850:2:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1832:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1832:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1832:21:3"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1862:27:3",
									"value": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1882:6:3"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "1876:5:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1876:13:3"
									},
									"variables": [
										{
											"name": "length",
											"nodeType": "YulTypedName",
											"src": "1866:6:3",
											"type": ""
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1909:9:3"
													},
													{
														"name": "_1",
														"nodeType": "YulIdentifier",
														"src": "1920:2:3"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1905:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1905:18:3"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1925:6:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1898:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1898:34:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1898:34:3"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1941:13:3",
									"value": {
										"name": "tail",
										"nodeType": "YulIdentifier",
										"src": "1950:4:3"
									},
									"variables": [
										{
											"name": "i",
											"nodeType": "YulTypedName",
											"src": "1945:1:3",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2013:90:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "headStart",
																			"nodeType": "YulIdentifier",
																			"src": "2042:9:3"
																		},
																		{
																			"name": "i",
																			"nodeType": "YulIdentifier",
																			"src": "2053:1:3"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "2038:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2038:17:3"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2057:2:3",
																	"type": "",
																	"value": "64"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2034:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2034:26:3"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2076:6:3"
																				},
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2084:1:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2072:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2072:14:3"
																		},
																		{
																			"name": "_1",
																			"nodeType": "YulIdentifier",
																			"src": "2088:2:3"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2068:23:3"
																}
															],
															"functionName": {
																"name": "mload",
																"nodeType": "YulIdentifier",
																"src": "2062:5:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2062:30:3"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2027:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "2027:66:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2027:66:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "1974:1:3"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1977:6:3"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "1971:2:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "1971:13:3"
									},
									"nodeType": "YulForLoop",
									"post": {
										"nodeType": "YulBlock",
										"src": "1985:19:3",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "1987:15:3",
												"value": {
													"arguments": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "1996:1:3"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "1999:2:3"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1992:3:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "1992:10:3"
												},
												"variableNames": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
														"src": "1987:1:3"
													}
												]
											}
										]
									},
									"pre": {
										"nodeType": "YulBlock",
										"src": "1967:3:3",
										"statements": []
									},
									"src": "1963:140:3"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2137:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "headStart",
																			"nodeType": "YulIdentifier",
																			"src": "2166:9:3"
																		},
																		{
																			"name": "length",
																			"nodeType": "YulIdentifier",
																			"src": "2177:6:3"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "2162:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2162:22:3"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2186:2:3",
																	"type": "",
																	"value": "64"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2158:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2158:31:3"
														},
														{
															"name": "tail",
															"nodeType": "YulIdentifier",
															"src": "2191:4:3"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2151:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "2151:45:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2151:45:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "2118:1:3"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "2121:6:3"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "2115:2:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2115:13:3"
									},
									"nodeType": "YulIf",
									"src": "2112:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2215:62:3",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2231:9:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2250:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2258:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2246:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2246:15:3"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2263:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:7:3"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "2242:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2242:29:3"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2227:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2227:45:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2274:2:3",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2223:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2223:54:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "2215:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1770:9:3",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1781:6:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1792:4:3",
								"type": ""
							}
						],
						"src": "1680:603:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2462:225:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2479:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2490:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2472:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2472:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2472:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2513:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2524:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2509:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2509:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2529:2:3",
												"type": "",
												"value": "35"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2502:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2502:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2502:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2552:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2563:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2548:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2548:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2568:34:3",
												"type": "",
												"value": "ERC20: transfer to the zero addr"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2541:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2541:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2541:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2623:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2634:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2619:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2619:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2639:5:3",
												"type": "",
												"value": "ess"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2612:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2612:33:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2612:33:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2654:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2666:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2677:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2662:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2662:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "2654:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "2439:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "2453:4:3",
								"type": ""
							}
						],
						"src": "2288:399:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2866:224:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2883:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2894:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2876:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2876:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2876:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2917:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2928:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2913:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2913:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2933:2:3",
												"type": "",
												"value": "34"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2906:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2906:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2906:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2956:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2967:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2952:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2952:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2972:34:3",
												"type": "",
												"value": "ERC20: approve to the zero addre"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2945:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "2945:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2945:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3027:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3038:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3023:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3023:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3043:4:3",
												"type": "",
												"value": "ss"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3016:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3016:32:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3016:32:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3057:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3069:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3080:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3065:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3065:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3057:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "2843:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "2857:4:3",
								"type": ""
							}
						],
						"src": "2692:398:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3269:228:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3286:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3297:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3279:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3279:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3279:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3320:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3331:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3316:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3316:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3336:2:3",
												"type": "",
												"value": "38"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3309:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3309:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3309:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3359:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3370:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3355:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3355:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3375:34:3",
												"type": "",
												"value": "ERC20: transfer amount exceeds b"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3348:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3348:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3348:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3430:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3441:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3426:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3426:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3446:8:3",
												"type": "",
												"value": "alance"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3419:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3419:36:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3419:36:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3464:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3476:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3487:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3472:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3472:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3464:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3246:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3260:4:3",
								"type": ""
							}
						],
						"src": "3095:402:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3676:230:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3693:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3704:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3686:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3686:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3686:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3727:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3738:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3723:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3723:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3743:2:3",
												"type": "",
												"value": "40"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3716:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3716:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3716:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3766:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3777:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3762:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3762:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3782:34:3",
												"type": "",
												"value": "ERC20: transfer amount exceeds a"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3755:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3755:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3755:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3837:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3848:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3833:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3833:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "3853:10:3",
												"type": "",
												"value": "llowance"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3826:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3826:38:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3826:38:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3873:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3885:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3896:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3881:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "3881:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3873:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3653:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3667:4:3",
								"type": ""
							}
						],
						"src": "3502:404:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4085:227:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4102:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4113:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4095:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4095:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4095:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4136:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4147:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4132:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4132:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4152:2:3",
												"type": "",
												"value": "37"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4125:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4125:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4125:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4175:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4186:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4171:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4171:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "4191:34:3",
												"type": "",
												"value": "ERC20: transfer from the zero ad"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4164:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4164:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4164:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4246:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4257:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4242:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4242:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "4262:7:3",
												"type": "",
												"value": "dress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4235:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4235:35:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4235:35:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4279:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4291:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4302:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4287:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4287:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4279:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4062:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4076:4:3",
								"type": ""
							}
						],
						"src": "3911:401:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4491:226:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4508:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4519:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4501:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4501:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4501:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4542:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4553:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4538:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4538:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4558:2:3",
												"type": "",
												"value": "36"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4531:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4531:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4531:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4581:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4592:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4577:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4577:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "4597:34:3",
												"type": "",
												"value": "ERC20: approve from the zero add"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4570:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4570:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4570:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4652:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4663:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4648:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4648:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "4668:6:3",
												"type": "",
												"value": "ress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4641:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4641:34:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4641:34:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4684:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4696:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4707:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4692:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4692:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4684:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4468:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4482:4:3",
								"type": ""
							}
						],
						"src": "4317:400:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4896:227:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4913:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4924:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4906:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4906:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4906:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4947:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4958:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4943:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4943:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4963:2:3",
												"type": "",
												"value": "37"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4936:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4936:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4936:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4986:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4997:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4982:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4982:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "5002:34:3",
												"type": "",
												"value": "ERC20: decreased allowance below"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4975:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "4975:62:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4975:62:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5057:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5068:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5053:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5053:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "5073:7:3",
												"type": "",
												"value": " zero"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5046:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5046:35:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5046:35:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5090:27:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5102:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5113:3:3",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5098:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5098:19:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5090:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4873:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4887:4:3",
								"type": ""
							}
						],
						"src": "4722:401:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5302:181:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5319:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5330:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5312:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5312:21:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5312:21:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5353:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5364:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5349:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5349:18:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5369:2:3",
												"type": "",
												"value": "31"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5342:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5342:30:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5342:30:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5392:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5403:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5388:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5388:18:3"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "5408:33:3",
												"type": "",
												"value": "ERC20: mint to the zero address"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5381:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5381:61:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5381:61:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5451:26:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5463:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5474:2:3",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5459:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5459:18:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5451:4:3"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5279:9:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5293:4:3",
								"type": ""
							}
						],
						"src": "5128:355:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5589:76:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5599:26:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5611:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5622:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5607:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5607:18:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5599:4:3"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5641:9:3"
											},
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5652:6:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5634:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5634:25:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5634:25:3"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5558:9:3",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "5569:6:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5580:4:3",
								"type": ""
							}
						],
						"src": "5488:177:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5767:87:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5777:26:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5789:9:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5800:2:3",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5785:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5785:18:3"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5777:4:3"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5819:9:3"
											},
											{
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "5834:6:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5842:4:3",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "5830:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5830:17:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5812:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5812:36:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5812:36:3"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5736:9:3",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "5747:6:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5758:4:3",
								"type": ""
							}
						],
						"src": "5670:184:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5907:80:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "5934:22:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "5936:16:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "5936:18:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "5936:18:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5923:1:3"
											},
											{
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "5930:1:3"
													}
												],
												"functionName": {
													"name": "not",
													"nodeType": "YulIdentifier",
													"src": "5926:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5926:6:3"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "5920:2:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5920:13:3"
									},
									"nodeType": "YulIf",
									"src": "5917:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5965:16:3",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5976:1:3"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5979:1:3"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5972:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "5972:9:3"
									},
									"variableNames": [
										{
											"name": "sum",
											"nodeType": "YulIdentifier",
											"src": "5965:3:3"
										}
									]
								}
							]
						},
						"name": "checked_add_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "5890:1:3",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "5893:1:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "sum",
								"nodeType": "YulTypedName",
								"src": "5899:3:3",
								"type": ""
							}
						],
						"src": "5859:128:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6041:76:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "6063:22:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "6065:16:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "6065:18:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6065:18:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "6057:1:3"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "6060:1:3"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "6054:2:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "6054:8:3"
									},
									"nodeType": "YulIf",
									"src": "6051:2:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "6094:17:3",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "6106:1:3"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "6109:1:3"
											}
										],
										"functionName": {
											"name": "sub",
											"nodeType": "YulIdentifier",
											"src": "6102:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "6102:9:3"
									},
									"variableNames": [
										{
											"name": "diff",
											"nodeType": "YulIdentifier",
											"src": "6094:4:3"
										}
									]
								}
							]
						},
						"name": "checked_sub_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "6023:1:3",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "6026:1:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "diff",
								"nodeType": "YulTypedName",
								"src": "6032:4:3",
								"type": ""
							}
						],
						"src": "5992:125:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6177:325:3",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6187:22:3",
									"value": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6201:1:3",
												"type": "",
												"value": "1"
											},
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "6204:4:3"
											}
										],
										"functionName": {
											"name": "shr",
											"nodeType": "YulIdentifier",
											"src": "6197:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "6197:12:3"
									},
									"variableNames": [
										{
											"name": "length",
											"nodeType": "YulIdentifier",
											"src": "6187:6:3"
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "6218:38:3",
									"value": {
										"arguments": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "6248:4:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6254:1:3",
												"type": "",
												"value": "1"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "6244:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "6244:12:3"
									},
									"variables": [
										{
											"name": "outOfPlaceEncoding",
											"nodeType": "YulTypedName",
											"src": "6222:18:3",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "6295:31:3",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "6297:27:3",
												"value": {
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "6311:6:3"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6319:4:3",
															"type": "",
															"value": "0x7f"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "6307:3:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "6307:17:3"
												},
												"variableNames": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "6297:6:3"
													}
												]
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "6275:18:3"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "6268:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "6268:26:3"
									},
									"nodeType": "YulIf",
									"src": "6265:2:3"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "6385:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6406:1:3",
															"type": "",
															"value": "0"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6413:3:3",
																	"type": "",
																	"value": "224"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6418:10:3",
																	"type": "",
																	"value": "0x4e487b71"
																}
															],
															"functionName": {
																"name": "shl",
																"nodeType": "YulIdentifier",
																"src": "6409:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "6409:20:3"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "6399:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "6399:31:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6399:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6450:1:3",
															"type": "",
															"value": "4"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6453:4:3",
															"type": "",
															"value": "0x22"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "6443:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "6443:15:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6443:15:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6478:1:3",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6481:4:3",
															"type": "",
															"value": "0x24"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "6471:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "6471:15:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6471:15:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "6341:18:3"
											},
											{
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "6364:6:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6372:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "6361:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6361:14:3"
											}
										],
										"functionName": {
											"name": "eq",
											"nodeType": "YulIdentifier",
											"src": "6338:2:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "6338:38:3"
									},
									"nodeType": "YulIf",
									"src": "6335:2:3"
								}
							]
						},
						"name": "extract_byte_array_length",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "data",
								"nodeType": "YulTypedName",
								"src": "6157:4:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "6166:6:3",
								"type": ""
							}
						],
						"src": "6122:380:3"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6539:95:3",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6556:1:3",
												"type": "",
												"value": "0"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6563:3:3",
														"type": "",
														"value": "224"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6568:10:3",
														"type": "",
														"value": "0x4e487b71"
													}
												],
												"functionName": {
													"name": "shl",
													"nodeType": "YulIdentifier",
													"src": "6559:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6559:20:3"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6549:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "6549:31:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6549:31:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6596:1:3",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6599:4:3",
												"type": "",
												"value": "0x11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6589:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "6589:15:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6589:15:3"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6620:1:3",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6623:4:3",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "6613:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "6613:15:3"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6613:15:3"
								}
							]
						},
						"name": "panic_error_0x11",
						"nodeType": "YulFunctionDefinition",
						"src": "6507:127:3"
					}
				]
			},
			"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
			"id": 3,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "413:300:0:-:0;;;444:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6743:174:2;;;;;;;;;;;;-1:-1:-1;;;6743:174:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6743:174:2;;;;6839:13;;6743:174;;;504:17:0;;6839:13:2;;6743:174;;6839:13;:::i;:::-;-1:-1:-1;6856:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;6877:16:2;:36;;-1:-1:-1;;;;;;6877:36:2;-1:-1:-1;;;;;6877:36:2;;;;;;;;;;-1:-1:-1;527:31:0::1;::::0;-1:-1:-1;533:10:0::1;545:12;527:5;:31::i;:::-;562:33;570:10;582:12;562:7;:33::i;:::-;-1:-1:-1::0;599:43:0::1;617:10;629:12;599:17;:43::i;:::-;;444:202:::0;413:300;;12448:297:2;-1:-1:-1;;;;;12525:21:2;;12517:65;;;;-1:-1:-1;;;12517:65:2;;1339:2:3;12517:65:2;;;1321:21:3;1378:2;1358:18;;;1351:30;1417:33;1397:18;;;1390:61;1468:18;;12517:65:2;;;;;;;;;12657:6;12641:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;12667:18:2;;;;;;:9;:18;;;;;:28;;12689:6;;12667:18;:28;;12689:6;;12667:28;:::i;:::-;;;;-1:-1:-1;;12704:37:2;;1643:25:3;;;-1:-1:-1;;;;;12704:37:2;;;12721:1;;12704:37;;1631:2:3;1616:18;12704:37:2;;;;;;;12448:297;;:::o;8923:151::-;9006:4;9016:39;9025:12;:10;:12::i;:::-;9039:7;9048:6;9016:8;:39::i;:::-;-1:-1:-1;9066:4:2;8923:151;;;;:::o;10245:197::-;10333:4;10343:80;10352:12;:10;:12::i;:::-;10366:7;10412:10;10375:11;:25;10387:12;:10;:12::i;:::-;-1:-1:-1;;;;;10375:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;10375:25:2;;;:34;;;;;;;;;;:47;;;;:::i;:::-;10343:8;:80::i;1855:471::-;1908:19;1956:2;1937:8;:21;;;;:55;;-1:-1:-1;1574:4:2;1604:16;-1:-1:-1;;;;;1604:16:2;1981:10;1591:29;1962:30;1933:390;;;-1:-1:-1;;;2251:14:2;2247:23;2234:37;2230:2;2226:46;2213:64;;;-1:-1:-1;2307:10:2;1933:390;1855:471;:::o;13848:322::-;-1:-1:-1;;;;;13952:19:2;;13944:68;;;;-1:-1:-1;;;13944:68:2;;934:2:3;13944:68:2;;;916:21:3;973:2;953:18;;;946:30;1012:34;992:18;;;985:62;-1:-1:-1;;;1063:18:3;;;1056:34;1107:19;;13944:68:2;906:226:3;13944:68:2;-1:-1:-1;;;;;14024:21:2;;14016:68;;;;-1:-1:-1;;;14016:68:2;;531:2:3;14016:68:2;;;513:21:3;570:2;550:18;;;543:30;609:34;589:18;;;582:62;-1:-1:-1;;;660:18:3;;;653:32;702:19;;14016:68:2;503:224:3;14016:68:2;-1:-1:-1;;;;;14089:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14134:32;;1643:25:3;;;14134:32:2;;1616:18:3;14134:32:2;;;;;;;13848:322;;;:::o;413:300:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;413:300:0;;;-1:-1:-1;413:300:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:310:3;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:3;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:3:o;1679:::-;;1750:1;1746:6;1743:1;1740:13;1737:2;;;-1:-1:-1;;;1776:33:3;;1832:4;1829:1;1822:15;1862:4;1783:3;1850:17;1737:2;-1:-1:-1;1893:9:3;;1727:181::o;1913:380::-;1992:1;1988:12;;;;2035;;;2056:2;;2110:4;2102:6;2098:17;2088:27;;2056:2;2163;2155:6;2152:14;2132:18;2129:38;2126:2;;;2209:10;2204:3;2200:20;2197:1;2190:31;2244:4;2241:1;2234:15;2272:4;2269:1;2262:15;2126:2;;1968:325;;;:::o;:::-;413:300:0;;;;;;",
	"deployedSourceMap": "413:300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6970:80:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8923:151;;;;;;:::i;:::-;;:::i;:::-;;;1653:14:3;;1646:22;1628:41;;1616:2;1601:18;8923:151:2;1583:92:3;649:62:0;;;:::i;:::-;;7935:97:2;8016:12;;7935:97;;;5634:25:3;;;5622:2;5607:18;7935:97:2;5589:76:3;9499:390:2;;;;;;:::i;:::-;;:::i;7814:73::-;;;7881:2;5812:36:3;;5800:2;5785:18;7814:73:2;5767:87:3;10245:197:2;;;;;;:::i;:::-;;:::i;8530:93::-;8609:10;;;;;;;;;;;;-1:-1:-1;;;8609:10:2;;;;8530:93;;1497:127;;;;;;:::i;:::-;;:::i;8078:116::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8172:18:2;8152:7;8172:18;;;:9;:18;;;;;;;8078:116;1243:31;;;;;-1:-1:-1;;;;;1243:31:2;;;;;;-1:-1:-1;;;;;1444:32:3;;;1426:51;;1414:2;1399:18;1243:31:2;1381:102:3;7148:84:2;;;:::i;10884:344::-;;;;;;:::i;:::-;;:::i;8370:157::-;;;;;;:::i;:::-;;:::i;8669:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8778:18:2;;;8758:7;8778:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8669:140;6970:80;7015:13;7041:5;7034:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6970:80;;:::o;8923:151::-;9006:4;9016:39;9025:12;:10;:12::i;:::-;9039:7;9048:6;9016:8;:39::i;:::-;-1:-1:-1;9066:4:2;8923:151;;;;:::o;649:62:0:-;676:31;682:10;694:12;676:5;:31::i;:::-;649:62::o;9499:390:2:-;9614:4;9624:36;9634:6;9642:9;9653:6;9624:9;:36::i;:::-;-1:-1:-1;;;;;9692:19:2;;9665:24;9692:19;;;:11;:19;;;;;9665:24;9712:12;:10;:12::i;:::-;-1:-1:-1;;;;;9692:33:2;-1:-1:-1;;;;;9692:33:2;;;;;;;;;;;;;9665:60;;9757:6;9737:16;:26;;9729:79;;;;-1:-1:-1;;;9729:79:2;;3704:2:3;9729:79:2;;;3686:21:3;3743:2;3723:18;;;3716:30;3782:34;3762:18;;;3755:62;-1:-1:-1;;;3833:18:3;;;3826:38;3881:19;;9729:79:2;;;;;;;;;9812:57;9821:6;9829:12;:10;:12::i;:::-;9843:25;9862:6;9843:16;:25;:::i;:::-;9812:8;:57::i;:::-;-1:-1:-1;9881:4:2;;9499:390;-1:-1:-1;;;;9499:390:2:o;10245:197::-;10333:4;10343:80;10352:12;:10;:12::i;:::-;10366:7;10412:10;10375:11;:25;10387:12;:10;:12::i;:::-;-1:-1:-1;;;;;10375:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;10375:25:2;;;:34;;;;;;;;;;:47;;;;:::i;1497:127::-;1574:4;1604:16;-1:-1:-1;;;;;1591:29:2;;;1604:16;;1591:29;1497:127;;;;:::o;7148:84::-;7195:13;7221:7;7214:14;;;;;:::i;10884:344::-;10977:4;10987:24;11014:11;:25;11026:12;:10;:12::i;:::-;-1:-1:-1;;;;;11014:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;11014:25:2;;;:34;;;;;;;;;;;-1:-1:-1;11060:35:2;;;;11052:85;;;;-1:-1:-1;;;11052:85:2;;4924:2:3;11052:85:2;;;4906:21:3;4963:2;4943:18;;;4936:30;5002:34;4982:18;;;4975:62;-1:-1:-1;;;5053:18:3;;;5046:35;5098:19;;11052:85:2;4896:227:3;11052:85:2;11141:67;11150:12;:10;:12::i;:::-;11164:7;11173:34;11192:15;11173:16;:34;:::i;11141:67::-;-1:-1:-1;11220:4:2;;10884:344;-1:-1:-1;;;10884:344:2:o;8370:157::-;8456:4;8466:42;8476:12;:10;:12::i;:::-;8490:9;8501:6;8466:9;:42::i;1855:471::-;1908:19;1956:2;1937:8;:21;;;;:55;;;1962:30;1981:10;1962:18;:30::i;:::-;1933:390;;;-1:-1:-1;;;2251:14:2;2247:23;2234:37;2230:2;2226:46;2213:64;;;-1:-1:-1;2307:10:2;2292:26;;13848:322;-1:-1:-1;;;;;13952:19:2;;13944:68;;;;-1:-1:-1;;;13944:68:2;;4519:2:3;13944:68:2;;;4501:21:3;4558:2;4538:18;;;4531:30;4597:34;4577:18;;;4570:62;-1:-1:-1;;;4648:18:3;;;4641:34;4692:19;;13944:68:2;4491:226:3;13944:68:2;-1:-1:-1;;;;;14024:21:2;;14016:68;;;;-1:-1:-1;;;14016:68:2;;2894:2:3;14016:68:2;;;2876:21:3;2933:2;2913:18;;;2906:30;2972:34;2952:18;;;2945:62;-1:-1:-1;;;3023:18:3;;;3016:32;3065:19;;14016:68:2;2866:224:3;14016:68:2;-1:-1:-1;;;;;14089:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14134:32;;5634:25:3;;;14134:32:2;;5607:18:3;14134:32:2;;;;;;;13848:322;;;:::o;12448:297::-;-1:-1:-1;;;;;12525:21:2;;12517:65;;;;-1:-1:-1;;;12517:65:2;;5330:2:3;12517:65:2;;;5312:21:3;5369:2;5349:18;;;5342:30;5408:33;5388:18;;;5381:61;5459:18;;12517:65:2;5302:181:3;12517:65:2;12657:6;12641:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;12667:18:2;;;;;;:9;:18;;;;;:28;;12689:6;;12667:18;:28;;12689:6;;12667:28;:::i;:::-;;;;-1:-1:-1;;12704:37:2;;5634:25:3;;;-1:-1:-1;;;;;12704:37:2;;;12721:1;;12704:37;;5622:2:3;5607:18;12704:37:2;;;;;;;12448:297;;:::o;11657:550::-;-1:-1:-1;;;;;11765:20:2;;11757:70;;;;-1:-1:-1;;;11757:70:2;;4113:2:3;11757:70:2;;;4095:21:3;4152:2;4132:18;;;4125:30;4191:34;4171:18;;;4164:62;-1:-1:-1;;;4242:18:3;;;4235:35;4287:19;;11757:70:2;4085:227:3;11757:70:2;-1:-1:-1;;;;;11839:23:2;;11831:71;;;;-1:-1:-1;;;11831:71:2;;2490:2:3;11831:71:2;;;2472:21:3;2529:2;2509:18;;;2502:30;2568:34;2548:18;;;2541:62;-1:-1:-1;;;2619:18:3;;;2612:33;2662:19;;11831:71:2;2462:225:3;11831:71:2;-1:-1:-1;;;;;11983:17:2;;11959:21;11983:17;;;:9;:17;;;;;;12012:23;;;;12004:74;;;;-1:-1:-1;;;12004:74:2;;3297:2:3;12004:74:2;;;3279:21:3;3336:2;3316:18;;;3309:30;3375:34;3355:18;;;3348:62;-1:-1:-1;;;3426:18:3;;;3419:36;3472:19;;12004:74:2;3269:228:3;12004:74:2;12102:22;12118:6;12102:13;:22;:::i;:::-;-1:-1:-1;;;;;12082:17:2;;;;;;;:9;:17;;;;;;:42;;;;12128:20;;;;;;;;:30;;12152:6;;12082:17;12128:30;;12152:6;;12128:30;:::i;:::-;;;;;;;;12185:9;-1:-1:-1;;;;;12168:35:2;12177:6;-1:-1:-1;;;;;12168:35:2;;12196:6;12168:35;;;;5634:25:3;;5622:2;5607:18;;5589:76;12168:35:2;;;;;;;;11657:550;;;;:::o;14:173:3:-;82:20;;-1:-1:-1;;;;;131:31:3;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:3:o;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:3:o;1680:603::-;;1821:2;1850;1839:9;1832:21;1882:6;1876:13;1925:6;1920:2;1909:9;1905:18;1898:34;1950:4;1963:140;1977:6;1974:1;1971:13;1963:140;;;2072:14;;;2068:23;;2062:30;2038:17;;;2057:2;2034:26;2027:66;1992:10;;1963:140;;;2121:6;2118:1;2115:13;2112:2;;;2191:4;2186:2;2177:6;2166:9;2162:22;2158:31;2151:45;2112:2;-1:-1:-1;2267:2:3;2246:15;-1:-1:-1;;2242:29:3;2227:45;;;;2274:2;2223:54;;1801:482;-1:-1:-1;;;1801:482:3:o;5859:128::-;;5930:1;5926:6;5923:1;5920:13;5917:2;;;5936:18;;:::i;:::-;-1:-1:-1;5972:9:3;;5907:80::o;5992:125::-;;6060:1;6057;6054:8;6051:2;;;6065:18;;:::i;:::-;-1:-1:-1;6102:9:3;;6041:76::o;6122:380::-;6201:1;6197:12;;;;6244;;;6265:2;;6319:4;6311:6;6307:17;6297:27;;6265:2;6372;6364:6;6361:14;6341:18;6338:38;6335:2;;;6418:10;6413:3;6409:20;6406:1;6399:31;6453:4;6450:1;6443:15;6481:4;6478:1;6471:15;6335:2;;6177:325;;;:::o;6507:127::-;6568:10;6563:3;6559:20;6556:1;6549:31;6599:4;6596:1;6589:15;6623:4;6620:1;6613:15",
	"source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.2;\n\nimport './3_ERC20.sol';\n\ncontract Migrations {\n\taddress public owner = msg.sender;\n\tuint256 public last_completed_migration;\n\n\tmodifier restricted() {\n\t\trequire(msg.sender == owner, \"This function is restricted to the contract's owner\");\n\t\t_;\n\t}\n\n\tfunction setCompleted(uint256 completed) public restricted {\n\t\tlast_completed_migration = completed;\n\t}\n}\n\ncontract TestToken is ERC20 {\n\tconstructor(address trustedForwarder_) ERC20('Test', 'TST', trustedForwarder_) {\n\t\t_mint(msg.sender, 100000 ether);\n\t\tapprove(msg.sender, 100000 ether);\n\t\tincreaseAllowance(msg.sender, 100000 ether);\n\t}\n\n\tfunction mint() public {\n\t\t_mint(msg.sender, 100000 ether);\n\t}\n}\n",
	"sourcePath": "/workecn/contracts/contracts/1_Migrations.sol",
	"ast": {
		"absolutePath": "/workecn/contracts/contracts/1_Migrations.sol",
		"exportedSymbols": {
			"BaseRelayRecipient": [756],
			"Context": [768],
			"ERC20": [1358],
			"IERC20": [844],
			"IRelayRecipient": [695],
			"Migrations": [33],
			"TestToken": [75]
		},
		"id": 76,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", ">=", "0.8", ".2"],
				"nodeType": "PragmaDirective",
				"src": "32:24:0"
			},
			{
				"absolutePath": "/workecn/contracts/contracts/3_ERC20.sol",
				"file": "./3_ERC20.sol",
				"id": 2,
				"nameLocation": "-1:-1:-1",
				"nodeType": "ImportDirective",
				"scope": 76,
				"sourceUnit": 1359,
				"src": "58:23:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 33,
				"linearizedBaseContracts": [33],
				"name": "Migrations",
				"nameLocation": "92:10:0",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"functionSelector": "8da5cb5b",
						"id": 6,
						"mutability": "mutable",
						"name": "owner",
						"nameLocation": "121:5:0",
						"nodeType": "VariableDeclaration",
						"scope": 33,
						"src": "106:33:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						},
						"typeName": {
							"id": 3,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "106:7:0",
							"stateMutability": "nonpayable",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"value": {
							"expression": {
								"id": 4,
								"name": "msg",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 4294967281,
								"src": "129:3:0",
								"typeDescriptions": {
									"typeIdentifier": "t_magic_message",
									"typeString": "msg"
								}
							},
							"id": 5,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "129:10:0",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "445df0ac",
						"id": 8,
						"mutability": "mutable",
						"name": "last_completed_migration",
						"nameLocation": "157:24:0",
						"nodeType": "VariableDeclaration",
						"scope": 33,
						"src": "142:39:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 7,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "142:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 19,
							"nodeType": "Block",
							"src": "207:96:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 14,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 11,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "219:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "219:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"id": 13,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "233:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "219:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "546869732066756e6374696f6e206973207265737472696374656420746f2074686520636f6e74726163742773206f776e6572",
												"id": 15,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "240:53:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
													"typeString": "literal_string \"This function is restricted to the contract's owner\""
												},
												"value": "This function is restricted to the contract's owner"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
													"typeString": "literal_string \"This function is restricted to the contract's owner\""
												}
											],
											"id": 10,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "211:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "211:83:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 17,
									"nodeType": "ExpressionStatement",
									"src": "211:83:0"
								},
								{
									"id": 18,
									"nodeType": "PlaceholderStatement",
									"src": "298:1:0"
								}
							]
						},
						"id": 20,
						"name": "restricted",
						"nameLocation": "194:10:0",
						"nodeType": "ModifierDefinition",
						"parameters": {
							"id": 9,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "204:2:0"
						},
						"src": "185:118:0",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 31,
							"nodeType": "Block",
							"src": "365:44:0",
							"statements": [
								{
									"expression": {
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 27,
											"name": "last_completed_migration",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 8,
											"src": "369:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 28,
											"name": "completed",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 22,
											"src": "396:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "369:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 30,
									"nodeType": "ExpressionStatement",
									"src": "369:36:0"
								}
							]
						},
						"functionSelector": "fdacd576",
						"id": 32,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 25,
								"kind": "modifierInvocation",
								"modifierName": {
									"id": 24,
									"name": "restricted",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 20,
									"src": "354:10:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "354:10:0"
							}
						],
						"name": "setCompleted",
						"nameLocation": "315:12:0",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 23,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "completed",
									"nameLocation": "336:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "328:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "327:19:0"
						},
						"returnParameters": {
							"id": 26,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "365:0:0"
						},
						"scope": 33,
						"src": "306:103:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 76,
				"src": "83:328:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 34,
							"name": "ERC20",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 1358,
							"src": "435:5:0"
						},
						"id": 35,
						"nodeType": "InheritanceSpecifier",
						"src": "435:5:0"
					}
				],
				"contractDependencies": [695, 756, 768, 844, 1358],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 75,
				"linearizedBaseContracts": [75, 1358, 756, 695, 844, 768],
				"name": "TestToken",
				"nameLocation": "422:9:0",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 63,
							"nodeType": "Block",
							"src": "523:123:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 46,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "533:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 47,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "533:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 48,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "545:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 45,
											"name": "_mint",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1239,
											"src": "527:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,uint256)"
											}
										},
										"id": 49,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "527:31:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 50,
									"nodeType": "ExpressionStatement",
									"src": "527:31:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 52,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "570:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 53,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "570:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 54,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "582:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 51,
											"name": "approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1010,
											"src": "562:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,uint256) returns (bool)"
											}
										},
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "562:33:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 56,
									"nodeType": "ExpressionStatement",
									"src": "562:33:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 58,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "617:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 59,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "617:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 60,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "629:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 57,
											"name": "increaseAllowance",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1084,
											"src": "599:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,uint256) returns (bool)"
											}
										},
										"id": 61,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "599:43:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 62,
									"nodeType": "ExpressionStatement",
									"src": "599:43:0"
								}
							]
						},
						"id": 64,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [
							{
								"arguments": [
									{
										"hexValue": "54657374",
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "489:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
											"typeString": "literal_string \"Test\""
										},
										"value": "Test"
									},
									{
										"hexValue": "545354",
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "497:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
											"typeString": "literal_string \"TST\""
										},
										"value": "TST"
									},
									{
										"id": 42,
										"name": "trustedForwarder_",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 37,
										"src": "504:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								],
								"id": 43,
								"modifierName": {
									"id": 39,
									"name": "ERC20",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1358,
									"src": "483:5:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "483:39:0"
							}
						],
						"name": "",
						"nameLocation": "-1:-1:-1",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 38,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "trustedForwarder_",
									"nameLocation": "464:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "456:25:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "456:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "455:27:0"
						},
						"returnParameters": {
							"id": 44,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "523:0:0"
						},
						"scope": 75,
						"src": "444:202:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 73,
							"nodeType": "Block",
							"src": "672:39:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 68,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "682:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 69,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "682:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 70,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "694:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 67,
											"name": "_mint",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1239,
											"src": "676:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,uint256)"
											}
										},
										"id": 71,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "676:31:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 72,
									"nodeType": "ExpressionStatement",
									"src": "676:31:0"
								}
							]
						},
						"functionSelector": "1249c58b",
						"id": 74,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "mint",
						"nameLocation": "658:4:0",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 65,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "662:2:0"
						},
						"returnParameters": {
							"id": 66,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "672:0:0"
						},
						"scope": 75,
						"src": "649:62:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 76,
				"src": "413:300:0"
			}
		],
		"src": "32:682:0"
	},
	"legacyAST": {
		"absolutePath": "/workecn/contracts/contracts/1_Migrations.sol",
		"exportedSymbols": {
			"BaseRelayRecipient": [756],
			"Context": [768],
			"ERC20": [1358],
			"IERC20": [844],
			"IRelayRecipient": [695],
			"Migrations": [33],
			"TestToken": [75]
		},
		"id": 76,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", ">=", "0.8", ".2"],
				"nodeType": "PragmaDirective",
				"src": "32:24:0"
			},
			{
				"absolutePath": "/workecn/contracts/contracts/3_ERC20.sol",
				"file": "./3_ERC20.sol",
				"id": 2,
				"nameLocation": "-1:-1:-1",
				"nodeType": "ImportDirective",
				"scope": 76,
				"sourceUnit": 1359,
				"src": "58:23:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 33,
				"linearizedBaseContracts": [33],
				"name": "Migrations",
				"nameLocation": "92:10:0",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"functionSelector": "8da5cb5b",
						"id": 6,
						"mutability": "mutable",
						"name": "owner",
						"nameLocation": "121:5:0",
						"nodeType": "VariableDeclaration",
						"scope": 33,
						"src": "106:33:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						},
						"typeName": {
							"id": 3,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "106:7:0",
							"stateMutability": "nonpayable",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"value": {
							"expression": {
								"id": 4,
								"name": "msg",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 4294967281,
								"src": "129:3:0",
								"typeDescriptions": {
									"typeIdentifier": "t_magic_message",
									"typeString": "msg"
								}
							},
							"id": 5,
							"isConstant": false,
							"isLValue": false,
							"isPure": false,
							"lValueRequested": false,
							"memberName": "sender",
							"nodeType": "MemberAccess",
							"src": "129:10:0",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "445df0ac",
						"id": 8,
						"mutability": "mutable",
						"name": "last_completed_migration",
						"nameLocation": "157:24:0",
						"nodeType": "VariableDeclaration",
						"scope": 33,
						"src": "142:39:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 7,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "142:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 19,
							"nodeType": "Block",
							"src": "207:96:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 14,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 11,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "219:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "219:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"id": 13,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "233:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "219:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "546869732066756e6374696f6e206973207265737472696374656420746f2074686520636f6e74726163742773206f776e6572",
												"id": 15,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "240:53:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
													"typeString": "literal_string \"This function is restricted to the contract's owner\""
												},
												"value": "This function is restricted to the contract's owner"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
													"typeString": "literal_string \"This function is restricted to the contract's owner\""
												}
											],
											"id": 10,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "211:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "211:83:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 17,
									"nodeType": "ExpressionStatement",
									"src": "211:83:0"
								},
								{
									"id": 18,
									"nodeType": "PlaceholderStatement",
									"src": "298:1:0"
								}
							]
						},
						"id": 20,
						"name": "restricted",
						"nameLocation": "194:10:0",
						"nodeType": "ModifierDefinition",
						"parameters": {
							"id": 9,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "204:2:0"
						},
						"src": "185:118:0",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 31,
							"nodeType": "Block",
							"src": "365:44:0",
							"statements": [
								{
									"expression": {
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 27,
											"name": "last_completed_migration",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 8,
											"src": "369:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 28,
											"name": "completed",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 22,
											"src": "396:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "369:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 30,
									"nodeType": "ExpressionStatement",
									"src": "369:36:0"
								}
							]
						},
						"functionSelector": "fdacd576",
						"id": 32,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 25,
								"kind": "modifierInvocation",
								"modifierName": {
									"id": 24,
									"name": "restricted",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 20,
									"src": "354:10:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "354:10:0"
							}
						],
						"name": "setCompleted",
						"nameLocation": "315:12:0",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 23,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "completed",
									"nameLocation": "336:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "328:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "327:19:0"
						},
						"returnParameters": {
							"id": 26,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "365:0:0"
						},
						"scope": 33,
						"src": "306:103:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 76,
				"src": "83:328:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 34,
							"name": "ERC20",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 1358,
							"src": "435:5:0"
						},
						"id": 35,
						"nodeType": "InheritanceSpecifier",
						"src": "435:5:0"
					}
				],
				"contractDependencies": [695, 756, 768, 844, 1358],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 75,
				"linearizedBaseContracts": [75, 1358, 756, 695, 844, 768],
				"name": "TestToken",
				"nameLocation": "422:9:0",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"body": {
							"id": 63,
							"nodeType": "Block",
							"src": "523:123:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 46,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "533:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 47,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "533:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 48,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "545:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 45,
											"name": "_mint",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1239,
											"src": "527:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,uint256)"
											}
										},
										"id": 49,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "527:31:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 50,
									"nodeType": "ExpressionStatement",
									"src": "527:31:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 52,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "570:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 53,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "570:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 54,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "582:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 51,
											"name": "approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1010,
											"src": "562:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,uint256) returns (bool)"
											}
										},
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "562:33:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 56,
									"nodeType": "ExpressionStatement",
									"src": "562:33:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 58,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "617:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 59,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "617:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 60,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "629:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 57,
											"name": "increaseAllowance",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1084,
											"src": "599:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,uint256) returns (bool)"
											}
										},
										"id": 61,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "599:43:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 62,
									"nodeType": "ExpressionStatement",
									"src": "599:43:0"
								}
							]
						},
						"id": 64,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [
							{
								"arguments": [
									{
										"hexValue": "54657374",
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "489:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
											"typeString": "literal_string \"Test\""
										},
										"value": "Test"
									},
									{
										"hexValue": "545354",
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "497:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
											"typeString": "literal_string \"TST\""
										},
										"value": "TST"
									},
									{
										"id": 42,
										"name": "trustedForwarder_",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 37,
										"src": "504:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								],
								"id": 43,
								"modifierName": {
									"id": 39,
									"name": "ERC20",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1358,
									"src": "483:5:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "483:39:0"
							}
						],
						"name": "",
						"nameLocation": "-1:-1:-1",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 38,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "trustedForwarder_",
									"nameLocation": "464:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "456:25:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "456:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "455:27:0"
						},
						"returnParameters": {
							"id": 44,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "523:0:0"
						},
						"scope": 75,
						"src": "444:202:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 73,
							"nodeType": "Block",
							"src": "672:39:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 68,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "682:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 69,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "682:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"hexValue": "313030303030",
												"id": 70,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "694:12:0",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												},
												"value": "100000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_rational_100000000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000000"
												}
											],
											"id": 67,
											"name": "_mint",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1239,
											"src": "676:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,uint256)"
											}
										},
										"id": 71,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "676:31:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 72,
									"nodeType": "ExpressionStatement",
									"src": "676:31:0"
								}
							]
						},
						"functionSelector": "1249c58b",
						"id": 74,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "mint",
						"nameLocation": "658:4:0",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 65,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "662:2:0"
						},
						"returnParameters": {
							"id": 66,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "672:0:0"
						},
						"scope": 75,
						"src": "649:62:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 76,
				"src": "413:300:0"
			}
		],
		"src": "32:682:0"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.3+commit.8d00100c.Emscripten.clang"
	},
	"networks": {
		"80001": {
			"events": {
				"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
					"anonymous": false,
					"inputs": [
						{
							"indexed": true,
							"internalType": "address",
							"name": "owner",
							"type": "address"
						},
						{
							"indexed": true,
							"internalType": "address",
							"name": "spender",
							"type": "address"
						},
						{
							"indexed": false,
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						}
					],
					"name": "Approval",
					"type": "event"
				},
				"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
					"anonymous": false,
					"inputs": [
						{
							"indexed": true,
							"internalType": "address",
							"name": "from",
							"type": "address"
						},
						{
							"indexed": true,
							"internalType": "address",
							"name": "to",
							"type": "address"
						},
						{
							"indexed": false,
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						}
					],
					"name": "Transfer",
					"type": "event"
				}
			},
			"links": {},
			"address": "0xfc3C111A2271Da4dA53C6493184cDff36A49574f",
			"transactionHash": "0x0442b148a86645ad9f67c48520238297111d35d00e0674b7082fdb893a8b5abe"
		}
	},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-05-25T05:00:31.331Z",
	"networkType": "ethereum",
	"devdoc": {
		"kind": "dev",
		"methods": {
			"allowance(address,address)": {
				"details": "See {IERC20-allowance}."
			},
			"approve(address,uint256)": {
				"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
			},
			"balanceOf(address)": {
				"details": "See {IERC20-balanceOf}."
			},
			"decimals()": {
				"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
			},
			"decreaseAllowance(address,uint256)": {
				"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
			},
			"increaseAllowance(address,uint256)": {
				"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
			},
			"name()": {
				"details": "Returns the name of the token."
			},
			"symbol()": {
				"details": "Returns the symbol of the token, usually a shorter version of the name."
			},
			"totalSupply()": {
				"details": "See {IERC20-totalSupply}."
			},
			"transfer(address,uint256)": {
				"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
			},
			"transferFrom(address,address,uint256)": {
				"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {
			"isTrustedForwarder(address)": {
				"notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
			},
			"versionRecipient()": {
				"notice": "return the sender of this call. if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes of the msg.data. otherwise, return `msg.sender` should be used in the contract anywhere instead of msg.sender"
			}
		},
		"version": 1
	}
}
